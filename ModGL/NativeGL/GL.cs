﻿//
// This file is generated by a tool.
//
// ReSharper disable InconsistentNaming

using System;
using System.Runtime.InteropServices;


namespace ModGL.NativeGL
{
    public static class Constants
    {
        public const uint _1passEXT = 0x80a1;
        public const uint _1passSGIS = 0x80a1;
        public const uint _2pass0EXT = 0x80a2;
        public const uint _2pass0SGIS = 0x80a2;
        public const uint _2pass1EXT = 0x80a3;
        public const uint _2pass1SGIS = 0x80a3;
        public const uint _3dcXAMD = 0x87f9;
        public const uint _3dcXyAMD = 0x87fa;
        public const uint _422AverageEXT = 0x80ce;
        public const uint _422EXT = 0x80cc;
        public const uint _422RevAverageEXT = 0x80cf;
        public const uint _422RevEXT = 0x80cd;
        public const uint _4pass0EXT = 0x80a4;
        public const uint _4pass0SGIS = 0x80a4;
        public const uint _4pass1EXT = 0x80a5;
        public const uint _4pass1SGIS = 0x80a5;
        public const uint _4pass2EXT = 0x80a6;
        public const uint _4pass2SGIS = 0x80a6;
        public const uint _4pass3EXT = 0x80a7;
        public const uint _4pass3SGIS = 0x80a7;
        public const uint AbgrEXT = 0x8000;
        public const uint AccumAdjacentPairsNV = 0x90ad;
        public const uint ActiveAtomicCounterBuffers = 0x92d9;
        public const uint ActiveAttributeMaxLength = 0x8b8a;
        public const uint ActiveAttributes = 0x8b89;
        public const uint ActiveProgram = 0x8259;
        public const uint ActiveProgramEXT = 0x8b8d;
        public const uint ActiveResources = 0x92f5;
        public const uint ActiveStencilFaceEXT = 0x8911;
        public const uint ActiveSubroutineMaxLength = 0x8e48;
        public const uint ActiveSubroutineUniformLocations = 0x8e47;
        public const uint ActiveSubroutineUniformMaxLength = 0x8e49;
        public const uint ActiveSubroutineUniforms = 0x8de6;
        public const uint ActiveSubroutines = 0x8de5;
        public const uint ActiveTexture = 0x84e0;
        public const uint ActiveTextureARB = 0x84e0;
        public const uint ActiveUniformBlockMaxNameLength = 0x8a35;
        public const uint ActiveUniformBlocks = 0x8a36;
        public const uint ActiveUniformMaxLength = 0x8b87;
        public const uint ActiveUniforms = 0x8b86;
        public const uint ActiveVariables = 0x9305;
        public const uint ActiveVaryingMaxLengthNV = 0x8c82;
        public const uint ActiveVaryingsNV = 0x8c81;
        public const uint ActiveVertexUnitsARB = 0x86a5;
        public const uint AddATI = 0x8963;
        public const uint AddBlendIMG = 0x8c09;
        public const uint AdjacentPairsNV = 0x90ae;
        public const uint Affine2dNV = 0x9092;
        public const uint Affine3dNV = 0x9094;
        public const uint AliasedLineWidthRange = 0x846e;
        public const uint AllCompletedNV = 0x84f2;
        public const uint AllStaticDataIBM = 0x19294;
        public const uint AllowDrawFrgHintPGI = 0x1a210;
        public const uint AllowDrawMemHintPGI = 0x1a211;
        public const uint AllowDrawObjHintPGI = 0x1a20e;
        public const uint AllowDrawWinHintPGI = 0x1a20f;
        public const uint Alpha = 0x1906;
        public const uint AlphaFloat16APPLE = 0x881c;
        public const uint AlphaFloat16ATI = 0x881c;
        public const uint AlphaFloat32APPLE = 0x8816;
        public const uint AlphaFloat32ATI = 0x8816;
        public const uint AlphaIntegerEXT = 0x8d97;
        public const uint AlphaMaxClampIngr = 0x8567;
        public const uint AlphaMaxSGIX = 0x8321;
        public const uint AlphaMinClampIngr = 0x8563;
        public const uint AlphaMinSGIX = 0x8320;
        public const uint AlphaSnorm = 0x9010;
        public const uint AlphaTestFuncQCOM = 0xbc1;
        public const uint AlphaTestQCOM = 0xbc0;
        public const uint AlphaTestRefQCOM = 0xbc2;
        public const uint Alpha12EXT = 0x803d;
        public const uint Alpha16EXT = 0x803e;
        public const uint Alpha16Snorm = 0x9018;
        public const uint Alpha16fARB = 0x881c;
        public const uint Alpha16fEXT = 0x881c;
        public const uint Alpha16iEXT = 0x8d8a;
        public const uint Alpha16uiEXT = 0x8d78;
        public const uint Alpha32fARB = 0x8816;
        public const uint Alpha32fEXT = 0x8816;
        public const uint Alpha32iEXT = 0x8d84;
        public const uint Alpha32uiEXT = 0x8d72;
        public const uint Alpha4EXT = 0x803b;
        public const uint Alpha8EXT = 0x803c;
        public const uint Alpha8OES = 0x803c;
        public const uint Alpha8Snorm = 0x9014;
        public const uint Alpha8iEXT = 0x8d90;
        public const uint Alpha8uiEXT = 0x8d7e;
        public const uint AlreadySignaled = 0x911a;
        public const uint AlreadySignaledAPPLE = 0x911a;
        public const uint Always = 0x207;
        public const uint AlwaysFastHintPGI = 0x1a20c;
        public const uint AlwaysSoftHintPGI = 0x1a20d;
        public const uint And = 0x1501;
        public const uint AndInverted = 0x1504;
        public const uint AndReverse = 0x1502;
        public const uint AnySamplesPassed = 0x8c2f;
        public const uint AnySamplesPassedConservative = 0x8d6a;
        public const uint AnySamplesPassedConservativeEXT = 0x8d6a;
        public const uint AnySamplesPassedEXT = 0x8c2f;
        public const uint ArrayBuffer = 0x8892;
        public const uint ArrayBufferARB = 0x8892;
        public const uint ArrayBufferBinding = 0x8894;
        public const uint ArrayBufferBindingARB = 0x8894;
        public const uint ArrayElementLockCountEXT = 0x81a9;
        public const uint ArrayElementLockFirstEXT = 0x81a8;
        public const uint ArrayObjectBufferATI = 0x8766;
        public const uint ArrayObjectOffsetATI = 0x8767;
        public const uint ArraySize = 0x92fb;
        public const uint ArrayStride = 0x92fe;
        public const uint AsyncDrawPixelsSGIX = 0x835d;
        public const uint AsyncHistogramSGIX = 0x832c;
        public const uint AsyncMarkerSGIX = 0x8329;
        public const uint AsyncReadPixelsSGIX = 0x835e;
        public const uint AsyncTexImageSGIX = 0x835c;
        public const uint AtcRgbAMD = 0x8c92;
        public const uint AtcRgbaExplicitAlphaAMD = 0x8c93;
        public const uint AtcRgbaInterpolatedAlphaAMD = 0x87ee;
        public const uint AtomicCounterBuffer = 0x92c0;
        public const uint AtomicCounterBufferActiveAtomicCounterIndices = 0x92c6;
        public const uint AtomicCounterBufferActiveAtomicCounters = 0x92c5;
        public const uint AtomicCounterBufferBinding = 0x92c1;
        public const uint AtomicCounterBufferDataSize = 0x92c4;
        public const uint AtomicCounterBufferIndex = 0x9301;
        public const uint AtomicCounterBufferReferencedByComputeShader = 0x90ed;
        public const uint AtomicCounterBufferReferencedByFragmentShader = 0x92cb;
        public const uint AtomicCounterBufferReferencedByGeometryShader = 0x92ca;
        public const uint AtomicCounterBufferReferencedByTessControlShader = 0x92c8;
        public const uint AtomicCounterBufferReferencedByTessEvaluationShader = 0x92c9;
        public const uint AtomicCounterBufferReferencedByVertexShader = 0x92c7;
        public const uint AtomicCounterBufferSize = 0x92c3;
        public const uint AtomicCounterBufferStart = 0x92c2;
        public const uint AttachedShaders = 0x8b85;
        public const uint AttenuationEXT = 0x834d;
        public const uint AttribArrayPointerNV = 0x8645;
        public const uint AttribArraySizeNV = 0x8623;
        public const uint AttribArrayStrideNV = 0x8624;
        public const uint AttribArrayTypeNV = 0x8625;
        public const uint AutoGenerateMipmap = 0x8295;
        public const uint AuxDepthStencilAPPLE = 0x8a14;
        public const uint AverageEXT = 0x8335;
        public const uint AverageHP = 0x8160;
        public const uint Back = 0x405;
        public const uint BackLeft = 0x402;
        public const uint BackNormalsHintPGI = 0x1a223;
        public const uint BackPrimaryColorNV = 0x8c77;
        public const uint BackRight = 0x403;
        public const uint BackSecondaryColorNV = 0x8c78;
        public const uint BevelNV = 0x90a6;
        public const uint Bgr = 0x80e0;
        public const uint BgrEXT = 0x80e0;
        public const uint BgrInteger = 0x8d9a;
        public const uint BgrIntegerEXT = 0x8d9a;
        public const uint Bgra = 0x80e1;
        public const uint BgraEXT = 0x80e1;
        public const uint BgraIMG = 0x80e1;
        public const uint BgraInteger = 0x8d9b;
        public const uint BgraIntegerEXT = 0x8d9b;
        public const uint Bgra8EXT = 0x93a1;
        public const uint BiasByNegativeOneHalfNV = 0x8541;
        public const uint BinningControlHintQCOM = 0x8fb0;
        public const uint BinormalArrayEXT = 0x843a;
        public const uint BinormalArrayPointerEXT = 0x8443;
        public const uint BinormalArrayStrideEXT = 0x8441;
        public const uint BinormalArrayTypeEXT = 0x8440;
        public const uint Blend = 0xbe2;
        public const uint BlendAdvancedCoherentKHR = 0x9285;
        public const uint BlendAdvancedCoherentNV = 0x9285;
        public const uint BlendColor = 0x8005;
        public const uint BlendColorEXT = 0x8005;
        public const uint BlendDst = 0xbe0;
        public const uint BlendDstAlpha = 0x80ca;
        public const uint BlendDstAlphaEXT = 0x80ca;
        public const uint BlendDstAlphaOES = 0x80ca;
        public const uint BlendDstRgb = 0x80c8;
        public const uint BlendDstRgbEXT = 0x80c8;
        public const uint BlendDstRgbOES = 0x80c8;
        public const uint BlendEquation = 0x8009;
        public const uint BlendEquationAlpha = 0x883d;
        public const uint BlendEquationAlphaEXT = 0x883d;
        public const uint BlendEquationAlphaOES = 0x883d;
        public const uint BlendEquationEXT = 0x8009;
        public const uint BlendEquationOES = 0x8009;
        public const uint BlendEquationRgb = 0x8009;
        public const uint BlendEquationRgbEXT = 0x8009;
        public const uint BlendEquationRgbOES = 0x8009;
        public const uint BlendOverlapNV = 0x9281;
        public const uint BlendPremultipliedSrcNV = 0x9280;
        public const uint BlendSrc = 0xbe1;
        public const uint BlendSrcAlpha = 0x80cb;
        public const uint BlendSrcAlphaEXT = 0x80cb;
        public const uint BlendSrcAlphaOES = 0x80cb;
        public const uint BlendSrcRgb = 0x80c9;
        public const uint BlendSrcRgbEXT = 0x80c9;
        public const uint BlendSrcRgbOES = 0x80c9;
        public const uint BlockIndex = 0x92fd;
        public const uint Blue = 0x1905;
        public const uint BlueInteger = 0x8d96;
        public const uint BlueIntegerEXT = 0x8d96;
        public const uint BlueMaxClampIngr = 0x8566;
        public const uint BlueMinClampIngr = 0x8562;
        public const uint BlueNV = 0x1905;
        public const uint BoundingBoxNV = 0x908d;
        public const uint BoundingBoxOfBoundingBoxesNV = 0x909c;
        public const uint Buffer = 0x82e0;
        public const uint BufferAccess = 0x88bb;
        public const uint BufferAccessARB = 0x88bb;
        public const uint BufferAccessFlags = 0x911f;
        public const uint BufferAccessOES = 0x88bb;
        public const uint BufferBinding = 0x9302;
        public const uint BufferDataSize = 0x9303;
        public const uint BufferFlushingUnmapAPPLE = 0x8a13;
        public const uint BufferGpuAddressNV = 0x8f1d;
        public const uint BufferImmutableStorage = 0x821f;
        public const uint BufferKHR = 0x82e0;
        public const uint BufferMapLength = 0x9120;
        public const uint BufferMapOffset = 0x9121;
        public const uint BufferMapPointer = 0x88bd;
        public const uint BufferMapPointerARB = 0x88bd;
        public const uint BufferMapPointerOES = 0x88bd;
        public const uint BufferMapped = 0x88bc;
        public const uint BufferMappedARB = 0x88bc;
        public const uint BufferMappedOES = 0x88bc;
        public const uint BufferObjectAPPLE = 0x85b3;
        public const uint BufferObjectEXT = 0x9151;
        public const uint BufferSerializedModifyAPPLE = 0x8a12;
        public const uint BufferSize = 0x8764;
        public const uint BufferSizeARB = 0x8764;
        public const uint BufferStorageFlags = 0x8220;
        public const uint BufferUsage = 0x8765;
        public const uint BufferUsageARB = 0x8765;
        public const uint BufferVariable = 0x92e5;
        public const uint BumpEnvmapATI = 0x877b;
        public const uint BumpNumTexUnitsATI = 0x8777;
        public const uint BumpRotMatrixATI = 0x8775;
        public const uint BumpRotMatrixSizeATI = 0x8776;
        public const uint BumpTargetATI = 0x877c;
        public const uint BumpTexUnitsATI = 0x8778;
        public const uint Byte = 0x1400;
        public const uint CalligraphicFragmentSGIX = 0x8183;
        public const uint CaveatSupport = 0x82b8;
        public const uint Ccw = 0x901;
        public const uint ClampFragmentColorARB = 0x891b;
        public const uint ClampReadColor = 0x891c;
        public const uint ClampReadColorARB = 0x891c;
        public const uint ClampToBorder = 0x812d;
        public const uint ClampToBorderARB = 0x812d;
        public const uint ClampToBorderEXT = 0x812d;
        public const uint ClampToBorderNV = 0x812d;
        public const uint ClampToBorderSGIS = 0x812d;
        public const uint ClampToEdge = 0x812f;
        public const uint ClampToEdgeSGIS = 0x812f;
        public const uint ClampVertexColorARB = 0x891a;
        public const uint Clear = 0x1500;
        public const uint ClearBuffer = 0x82b4;
        public const uint ClearTexture = 0x9365;
        public const uint ClientActiveTextureARB = 0x84e1;
        public const uint ClipDistanceNV = 0x8c7a;
        public const uint ClipDistance0 = 0x3000;
        public const uint ClipDistance1 = 0x3001;
        public const uint ClipDistance2 = 0x3002;
        public const uint ClipDistance3 = 0x3003;
        public const uint ClipDistance4 = 0x3004;
        public const uint ClipDistance5 = 0x3005;
        public const uint ClipDistance6 = 0x3006;
        public const uint ClipDistance7 = 0x3007;
        public const uint ClipFarHintPGI = 0x1a221;
        public const uint ClipNearHintPGI = 0x1a220;
        public const uint ClipPlane0IMG = 0x3000;
        public const uint ClipPlane1IMG = 0x3001;
        public const uint ClipPlane2IMG = 0x3002;
        public const uint ClipPlane3IMG = 0x3003;
        public const uint ClipPlane4IMG = 0x3004;
        public const uint ClipPlane5IMG = 0x3005;
        public const uint ClipVolumeClippingHintEXT = 0x80f0;
        public const uint CmykEXT = 0x800c;
        public const uint CmykaEXT = 0x800d;
        public const uint CndATI = 0x896a;
        public const uint Cnd0ATI = 0x896b;
        public const uint Color = 0x1800;
        public const uint ColorAlphaPairingATI = 0x8975;
        public const uint ColorArrayAddressNV = 0x8f23;
        public const uint ColorArrayBufferBindingARB = 0x8898;
        public const uint ColorArrayCountEXT = 0x8084;
        public const uint ColorArrayEXT = 0x8076;
        public const uint ColorArrayLengthNV = 0x8f2d;
        public const uint ColorArrayListIBM = 0x192a0;
        public const uint ColorArrayListStrideIBM = 0x192aa;
        public const uint ColorArrayParallelPointersIntel = 0x83f7;
        public const uint ColorArrayPointerEXT = 0x8090;
        public const uint ColorArraySizeEXT = 0x8081;
        public const uint ColorArrayStrideEXT = 0x8083;
        public const uint ColorArrayTypeEXT = 0x8082;
        public const uint ColorAttachmentEXT = 0x90f0;
        public const uint ColorAttachment0 = 0x8ce0;
        public const uint ColorAttachment0EXT = 0x8ce0;
        public const uint ColorAttachment0NV = 0x8ce0;
        public const uint ColorAttachment0OES = 0x8ce0;
        public const uint ColorAttachment1 = 0x8ce1;
        public const uint ColorAttachment1EXT = 0x8ce1;
        public const uint ColorAttachment1NV = 0x8ce1;
        public const uint ColorAttachment10 = 0x8cea;
        public const uint ColorAttachment10EXT = 0x8cea;
        public const uint ColorAttachment10NV = 0x8cea;
        public const uint ColorAttachment11 = 0x8ceb;
        public const uint ColorAttachment11EXT = 0x8ceb;
        public const uint ColorAttachment11NV = 0x8ceb;
        public const uint ColorAttachment12 = 0x8cec;
        public const uint ColorAttachment12EXT = 0x8cec;
        public const uint ColorAttachment12NV = 0x8cec;
        public const uint ColorAttachment13 = 0x8ced;
        public const uint ColorAttachment13EXT = 0x8ced;
        public const uint ColorAttachment13NV = 0x8ced;
        public const uint ColorAttachment14 = 0x8cee;
        public const uint ColorAttachment14EXT = 0x8cee;
        public const uint ColorAttachment14NV = 0x8cee;
        public const uint ColorAttachment15 = 0x8cef;
        public const uint ColorAttachment15EXT = 0x8cef;
        public const uint ColorAttachment15NV = 0x8cef;
        public const uint ColorAttachment2 = 0x8ce2;
        public const uint ColorAttachment2EXT = 0x8ce2;
        public const uint ColorAttachment2NV = 0x8ce2;
        public const uint ColorAttachment3 = 0x8ce3;
        public const uint ColorAttachment3EXT = 0x8ce3;
        public const uint ColorAttachment3NV = 0x8ce3;
        public const uint ColorAttachment4 = 0x8ce4;
        public const uint ColorAttachment4EXT = 0x8ce4;
        public const uint ColorAttachment4NV = 0x8ce4;
        public const uint ColorAttachment5 = 0x8ce5;
        public const uint ColorAttachment5EXT = 0x8ce5;
        public const uint ColorAttachment5NV = 0x8ce5;
        public const uint ColorAttachment6 = 0x8ce6;
        public const uint ColorAttachment6EXT = 0x8ce6;
        public const uint ColorAttachment6NV = 0x8ce6;
        public const uint ColorAttachment7 = 0x8ce7;
        public const uint ColorAttachment7EXT = 0x8ce7;
        public const uint ColorAttachment7NV = 0x8ce7;
        public const uint ColorAttachment8 = 0x8ce8;
        public const uint ColorAttachment8EXT = 0x8ce8;
        public const uint ColorAttachment8NV = 0x8ce8;
        public const uint ColorAttachment9 = 0x8ce9;
        public const uint ColorAttachment9EXT = 0x8ce9;
        public const uint ColorAttachment9NV = 0x8ce9;
        public const uint ColorClearUnclampedValueATI = 0x8835;
        public const uint ColorClearValue = 0xc22;
        public const uint ColorComponents = 0x8283;
        public const uint ColorEncoding = 0x8296;
        public const uint ColorEXT = 0x1800;
        public const uint ColorFloatAPPLE = 0x8a0f;
        public const uint ColorIndex1EXT = 0x80e2;
        public const uint ColorIndex12EXT = 0x80e6;
        public const uint ColorIndex16EXT = 0x80e7;
        public const uint ColorIndex2EXT = 0x80e3;
        public const uint ColorIndex4EXT = 0x80e4;
        public const uint ColorIndex8EXT = 0x80e5;
        public const uint ColorLogicOp = 0xbf2;
        public const uint ColorMatrix = 0x80b1;
        public const uint ColorMatrixSGI = 0x80b1;
        public const uint ColorMatrixStackDepth = 0x80b2;
        public const uint ColorMatrixStackDepthSGI = 0x80b2;
        public const uint ColorRenderable = 0x8286;
        public const uint ColorSamplesNV = 0x8e20;
        public const uint ColorSumARB = 0x8458;
        public const uint ColorSumClampNV = 0x854f;
        public const uint ColorSumEXT = 0x8458;
        public const uint ColorTable = 0x80d0;
        public const uint ColorTableAlphaSize = 0x80dd;
        public const uint ColorTableAlphaSizeSGI = 0x80dd;
        public const uint ColorTableBias = 0x80d7;
        public const uint ColorTableBiasSGI = 0x80d7;
        public const uint ColorTableBlueSize = 0x80dc;
        public const uint ColorTableBlueSizeSGI = 0x80dc;
        public const uint ColorTableFormat = 0x80d8;
        public const uint ColorTableFormatSGI = 0x80d8;
        public const uint ColorTableGreenSize = 0x80db;
        public const uint ColorTableGreenSizeSGI = 0x80db;
        public const uint ColorTableIntensitySize = 0x80df;
        public const uint ColorTableIntensitySizeSGI = 0x80df;
        public const uint ColorTableLuminanceSize = 0x80de;
        public const uint ColorTableLuminanceSizeSGI = 0x80de;
        public const uint ColorTableRedSize = 0x80da;
        public const uint ColorTableRedSizeSGI = 0x80da;
        public const uint ColorTableScale = 0x80d6;
        public const uint ColorTableScaleSGI = 0x80d6;
        public const uint ColorTableSGI = 0x80d0;
        public const uint ColorTableWidth = 0x80d9;
        public const uint ColorTableWidthSGI = 0x80d9;
        public const uint ColorWritemask = 0xc23;
        public const uint ColorburnKHR = 0x929a;
        public const uint ColorburnNV = 0x929a;
        public const uint ColordodgeKHR = 0x9299;
        public const uint ColordodgeNV = 0x9299;
        public const uint Combine4NV = 0x8503;
        public const uint CombinerAbDotProductNV = 0x8545;
        public const uint CombinerAbOutputNV = 0x854a;
        public const uint CombinerBiasNV = 0x8549;
        public const uint CombinerCdDotProductNV = 0x8546;
        public const uint CombinerCdOutputNV = 0x854b;
        public const uint CombinerComponentUsageNV = 0x8544;
        public const uint CombinerInputNV = 0x8542;
        public const uint CombinerMappingNV = 0x8543;
        public const uint CombinerMuxSumNV = 0x8547;
        public const uint CombinerScaleNV = 0x8548;
        public const uint CombinerSumOutputNV = 0x854c;
        public const uint Combiner0NV = 0x8550;
        public const uint Combiner1NV = 0x8551;
        public const uint Combiner2NV = 0x8552;
        public const uint Combiner3NV = 0x8553;
        public const uint Combiner4NV = 0x8554;
        public const uint Combiner5NV = 0x8555;
        public const uint Combiner6NV = 0x8556;
        public const uint Combiner7NV = 0x8557;
        public const uint CompareRToTextureARB = 0x884e;
        public const uint CompareRefDepthToTextureEXT = 0x884e;
        public const uint CompareRefToTexture = 0x884e;
        public const uint CompareRefToTextureEXT = 0x884e;
        public const uint CompatibleSubroutines = 0x8e4b;
        public const uint CompileStatus = 0x8b81;
        public const uint CompressedAlphaARB = 0x84e9;
        public const uint CompressedIntensityARB = 0x84ec;
        public const uint CompressedLuminanceAlphaARB = 0x84eb;
        public const uint CompressedLuminanceAlphaLatc2EXT = 0x8c72;
        public const uint CompressedLuminanceARB = 0x84ea;
        public const uint CompressedLuminanceLatc1EXT = 0x8c70;
        public const uint CompressedR11Eac = 0x9270;
        public const uint CompressedRed = 0x8225;
        public const uint CompressedRedGreenRgtc2EXT = 0x8dbd;
        public const uint CompressedRedRgtc1 = 0x8dbb;
        public const uint CompressedRedRgtc1EXT = 0x8dbb;
        public const uint CompressedRg = 0x8226;
        public const uint CompressedRgRgtc2 = 0x8dbd;
        public const uint CompressedRg11Eac = 0x9272;
        public const uint CompressedRgb = 0x84ed;
        public const uint CompressedRgbARB = 0x84ed;
        public const uint CompressedRgbBptcSignedFloat = 0x8e8e;
        public const uint CompressedRgbBptcSignedFloatARB = 0x8e8e;
        public const uint CompressedRgbBptcUnsignedFloat = 0x8e8f;
        public const uint CompressedRgbBptcUnsignedFloatARB = 0x8e8f;
        public const uint CompressedRgbFxt13dfx = 0x86b0;
        public const uint CompressedRgbPvrtc2bppv1IMG = 0x8c01;
        public const uint CompressedRgbPvrtc4bppv1IMG = 0x8c00;
        public const uint CompressedRgbS3tcDxt1EXT = 0x83f0;
        public const uint CompressedRgb8Etc2 = 0x9274;
        public const uint CompressedRgb8PunchthroughAlpha1Etc2 = 0x9276;
        public const uint CompressedRgba = 0x84ee;
        public const uint CompressedRgbaARB = 0x84ee;
        public const uint CompressedRgbaAstc10x10KHR = 0x93bb;
        public const uint CompressedRgbaAstc10x5KHR = 0x93b8;
        public const uint CompressedRgbaAstc10x6KHR = 0x93b9;
        public const uint CompressedRgbaAstc10x8KHR = 0x93ba;
        public const uint CompressedRgbaAstc12x10KHR = 0x93bc;
        public const uint CompressedRgbaAstc12x12KHR = 0x93bd;
        public const uint CompressedRgbaAstc3x3x3OES = 0x93c0;
        public const uint CompressedRgbaAstc4x3x3OES = 0x93c1;
        public const uint CompressedRgbaAstc4x4KHR = 0x93b0;
        public const uint CompressedRgbaAstc4x4x3OES = 0x93c2;
        public const uint CompressedRgbaAstc4x4x4OES = 0x93c3;
        public const uint CompressedRgbaAstc5x4KHR = 0x93b1;
        public const uint CompressedRgbaAstc5x4x4OES = 0x93c4;
        public const uint CompressedRgbaAstc5x5KHR = 0x93b2;
        public const uint CompressedRgbaAstc5x5x4OES = 0x93c5;
        public const uint CompressedRgbaAstc5x5x5OES = 0x93c6;
        public const uint CompressedRgbaAstc6x5KHR = 0x93b3;
        public const uint CompressedRgbaAstc6x5x5OES = 0x93c7;
        public const uint CompressedRgbaAstc6x6KHR = 0x93b4;
        public const uint CompressedRgbaAstc6x6x5OES = 0x93c8;
        public const uint CompressedRgbaAstc6x6x6OES = 0x93c9;
        public const uint CompressedRgbaAstc8x5KHR = 0x93b5;
        public const uint CompressedRgbaAstc8x6KHR = 0x93b6;
        public const uint CompressedRgbaAstc8x8KHR = 0x93b7;
        public const uint CompressedRgbaBptcUnorm = 0x8e8c;
        public const uint CompressedRgbaBptcUnormARB = 0x8e8c;
        public const uint CompressedRgbaFxt13dfx = 0x86b1;
        public const uint CompressedRgbaPvrtc2bppv1IMG = 0x8c03;
        public const uint CompressedRgbaPvrtc2bppv2IMG = 0x9137;
        public const uint CompressedRgbaPvrtc4bppv1IMG = 0x8c02;
        public const uint CompressedRgbaPvrtc4bppv2IMG = 0x9138;
        public const uint CompressedRgbaS3tcDxt1EXT = 0x83f1;
        public const uint CompressedRgbaS3tcDxt3Angle = 0x83f2;
        public const uint CompressedRgbaS3tcDxt3EXT = 0x83f2;
        public const uint CompressedRgbaS3tcDxt5Angle = 0x83f3;
        public const uint CompressedRgbaS3tcDxt5EXT = 0x83f3;
        public const uint CompressedRgba8Etc2Eac = 0x9278;
        public const uint CompressedSignedLuminanceAlphaLatc2EXT = 0x8c73;
        public const uint CompressedSignedLuminanceLatc1EXT = 0x8c71;
        public const uint CompressedSignedR11Eac = 0x9271;
        public const uint CompressedSignedRedGreenRgtc2EXT = 0x8dbe;
        public const uint CompressedSignedRedRgtc1 = 0x8dbc;
        public const uint CompressedSignedRedRgtc1EXT = 0x8dbc;
        public const uint CompressedSignedRgRgtc2 = 0x8dbe;
        public const uint CompressedSignedRg11Eac = 0x9273;
        public const uint CompressedSluminanceAlphaEXT = 0x8c4b;
        public const uint CompressedSluminanceEXT = 0x8c4a;
        public const uint CompressedSrgb = 0x8c48;
        public const uint CompressedSrgbAlpha = 0x8c49;
        public const uint CompressedSrgbAlphaBptcUnorm = 0x8e8d;
        public const uint CompressedSrgbAlphaBptcUnormARB = 0x8e8d;
        public const uint CompressedSrgbAlphaEXT = 0x8c49;
        public const uint CompressedSrgbAlphaPvrtc2bppv1EXT = 0x8a56;
        public const uint CompressedSrgbAlphaPvrtc2bppv2IMG = 0x93f0;
        public const uint CompressedSrgbAlphaPvrtc4bppv1EXT = 0x8a57;
        public const uint CompressedSrgbAlphaPvrtc4bppv2IMG = 0x93f1;
        public const uint CompressedSrgbAlphaS3tcDxt1EXT = 0x8c4d;
        public const uint CompressedSrgbAlphaS3tcDxt1NV = 0x8c4d;
        public const uint CompressedSrgbAlphaS3tcDxt3EXT = 0x8c4e;
        public const uint CompressedSrgbAlphaS3tcDxt3NV = 0x8c4e;
        public const uint CompressedSrgbAlphaS3tcDxt5EXT = 0x8c4f;
        public const uint CompressedSrgbAlphaS3tcDxt5NV = 0x8c4f;
        public const uint CompressedSrgbEXT = 0x8c48;
        public const uint CompressedSrgbPvrtc2bppv1EXT = 0x8a54;
        public const uint CompressedSrgbPvrtc4bppv1EXT = 0x8a55;
        public const uint CompressedSrgbS3tcDxt1EXT = 0x8c4c;
        public const uint CompressedSrgbS3tcDxt1NV = 0x8c4c;
        public const uint CompressedSrgb8Alpha8Astc10x10KHR = 0x93db;
        public const uint CompressedSrgb8Alpha8Astc10x5KHR = 0x93d8;
        public const uint CompressedSrgb8Alpha8Astc10x6KHR = 0x93d9;
        public const uint CompressedSrgb8Alpha8Astc10x8KHR = 0x93da;
        public const uint CompressedSrgb8Alpha8Astc12x10KHR = 0x93dc;
        public const uint CompressedSrgb8Alpha8Astc12x12KHR = 0x93dd;
        public const uint CompressedSrgb8Alpha8Astc3x3x3OES = 0x93e0;
        public const uint CompressedSrgb8Alpha8Astc4x3x3OES = 0x93e1;
        public const uint CompressedSrgb8Alpha8Astc4x4KHR = 0x93d0;
        public const uint CompressedSrgb8Alpha8Astc4x4x3OES = 0x93e2;
        public const uint CompressedSrgb8Alpha8Astc4x4x4OES = 0x93e3;
        public const uint CompressedSrgb8Alpha8Astc5x4KHR = 0x93d1;
        public const uint CompressedSrgb8Alpha8Astc5x4x4OES = 0x93e4;
        public const uint CompressedSrgb8Alpha8Astc5x5KHR = 0x93d2;
        public const uint CompressedSrgb8Alpha8Astc5x5x4OES = 0x93e5;
        public const uint CompressedSrgb8Alpha8Astc5x5x5OES = 0x93e6;
        public const uint CompressedSrgb8Alpha8Astc6x5KHR = 0x93d3;
        public const uint CompressedSrgb8Alpha8Astc6x5x5OES = 0x93e7;
        public const uint CompressedSrgb8Alpha8Astc6x6KHR = 0x93d4;
        public const uint CompressedSrgb8Alpha8Astc6x6x5OES = 0x93e8;
        public const uint CompressedSrgb8Alpha8Astc6x6x6OES = 0x93e9;
        public const uint CompressedSrgb8Alpha8Astc8x5KHR = 0x93d5;
        public const uint CompressedSrgb8Alpha8Astc8x6KHR = 0x93d6;
        public const uint CompressedSrgb8Alpha8Astc8x8KHR = 0x93d7;
        public const uint CompressedSrgb8Alpha8Etc2Eac = 0x9279;
        public const uint CompressedSrgb8Etc2 = 0x9275;
        public const uint CompressedSrgb8PunchthroughAlpha1Etc2 = 0x9277;
        public const uint CompressedTextureFormats = 0x86a3;
        public const uint CompressedTextureFormatsARB = 0x86a3;
        public const uint ComputeProgramNV = 0x90fb;
        public const uint ComputeProgramParameterBufferNV = 0x90fc;
        public const uint ComputeShader = 0x91b9;
        public const uint ComputeSubroutine = 0x92ed;
        public const uint ComputeSubroutineUniform = 0x92f3;
        public const uint ComputeTexture = 0x82a0;
        public const uint ComputeWorkGroupSize = 0x8267;
        public const uint Con0ATI = 0x8941;
        public const uint Con1ATI = 0x8942;
        public const uint Con10ATI = 0x894b;
        public const uint Con11ATI = 0x894c;
        public const uint Con12ATI = 0x894d;
        public const uint Con13ATI = 0x894e;
        public const uint Con14ATI = 0x894f;
        public const uint Con15ATI = 0x8950;
        public const uint Con16ATI = 0x8951;
        public const uint Con17ATI = 0x8952;
        public const uint Con18ATI = 0x8953;
        public const uint Con19ATI = 0x8954;
        public const uint Con2ATI = 0x8943;
        public const uint Con20ATI = 0x8955;
        public const uint Con21ATI = 0x8956;
        public const uint Con22ATI = 0x8957;
        public const uint Con23ATI = 0x8958;
        public const uint Con24ATI = 0x8959;
        public const uint Con25ATI = 0x895a;
        public const uint Con26ATI = 0x895b;
        public const uint Con27ATI = 0x895c;
        public const uint Con28ATI = 0x895d;
        public const uint Con29ATI = 0x895e;
        public const uint Con3ATI = 0x8944;
        public const uint Con30ATI = 0x895f;
        public const uint Con31ATI = 0x8960;
        public const uint Con4ATI = 0x8945;
        public const uint Con5ATI = 0x8946;
        public const uint Con6ATI = 0x8947;
        public const uint Con7ATI = 0x8948;
        public const uint Con8ATI = 0x8949;
        public const uint Con9ATI = 0x894a;
        public const uint ConditionSatisfied = 0x911c;
        public const uint ConditionSatisfiedAPPLE = 0x911c;
        public const uint ConjointNV = 0x9284;
        public const uint ConserveMemoryHintPGI = 0x1a1fd;
        public const uint ConstEyeNV = 0x86e5;
        public const uint ConstantAlpha = 0x8003;
        public const uint ConstantAlphaEXT = 0x8003;
        public const uint ConstantBorder = 0x8151;
        public const uint ConstantBorderHP = 0x8151;
        public const uint ConstantColor = 0x8001;
        public const uint ConstantColorEXT = 0x8001;
        public const uint ConstantColor0NV = 0x852a;
        public const uint ConstantColor1NV = 0x852b;
        public const uint ContextFlags = 0x821e;
        public const uint ContextProfileMask = 0x9126;
        public const uint ContextRobustAccessEXT = 0x90f3;
        public const uint ContinuousAMD = 0x9007;
        public const uint ContrastNV = 0x92a1;
        public const uint ConvexHullNV = 0x908b;
        public const uint Convolution1d = 0x8010;
        public const uint Convolution1dEXT = 0x8010;
        public const uint Convolution2d = 0x8011;
        public const uint Convolution2dEXT = 0x8011;
        public const uint ConvolutionBorderColor = 0x8154;
        public const uint ConvolutionBorderColorHP = 0x8154;
        public const uint ConvolutionBorderMode = 0x8013;
        public const uint ConvolutionBorderModeEXT = 0x8013;
        public const uint ConvolutionFilterBias = 0x8015;
        public const uint ConvolutionFilterBiasEXT = 0x8015;
        public const uint ConvolutionFilterScale = 0x8014;
        public const uint ConvolutionFilterScaleEXT = 0x8014;
        public const uint ConvolutionFormat = 0x8017;
        public const uint ConvolutionFormatEXT = 0x8017;
        public const uint ConvolutionHeight = 0x8019;
        public const uint ConvolutionHeightEXT = 0x8019;
        public const uint ConvolutionHintSGIX = 0x8316;
        public const uint ConvolutionWidth = 0x8018;
        public const uint ConvolutionWidthEXT = 0x8018;
        public const uint CoordReplaceARB = 0x8862;
        public const uint CoordReplaceNV = 0x8862;
        public const uint CoordReplaceOES = 0x8862;
        public const uint Copy = 0x1503;
        public const uint CopyInverted = 0x150c;
        public const uint CopyReadBuffer = 0x8f36;
        public const uint CopyReadBufferBinding = 0x8f36;
        public const uint CopyReadBufferNV = 0x8f36;
        public const uint CopyWriteBuffer = 0x8f37;
        public const uint CopyWriteBufferBinding = 0x8f37;
        public const uint CopyWriteBufferNV = 0x8f37;
        public const uint CountDownNV = 0x9089;
        public const uint CountUpNV = 0x9088;
        public const uint CounterRangeAMD = 0x8bc1;
        public const uint CounterTypeAMD = 0x8bc0;
        public const uint CoverageAllFragmentsNV = 0x8ed5;
        public const uint CoverageAttachmentNV = 0x8ed2;
        public const uint CoverageAutomaticNV = 0x8ed7;
        public const uint CoverageBuffersNV = 0x8ed3;
        public const uint CoverageComponentNV = 0x8ed0;
        public const uint CoverageComponent4NV = 0x8ed1;
        public const uint CoverageEdgeFragmentsNV = 0x8ed6;
        public const uint CoverageSamplesNV = 0x8ed4;
        public const uint CpuOptimizedQCOM = 0x8fb1;
        public const uint CubicEXT = 0x8334;
        public const uint CubicHP = 0x815f;
        public const uint CullFace = 0xb44;
        public const uint CullFaceMode = 0xb45;
        public const uint CullFragmentNV = 0x86e7;
        public const uint CullModesNV = 0x86e0;
        public const uint CullVertexEXT = 0x81aa;
        public const uint CullVertexEyePositionEXT = 0x81ab;
        public const uint CullVertexIBM = 0x1928a;
        public const uint CullVertexObjectPositionEXT = 0x81ac;
        public const uint CurrentAttribNV = 0x8626;
        public const uint CurrentBinormalEXT = 0x843c;
        public const uint CurrentFogCoordinateEXT = 0x8453;
        public const uint CurrentMatrixARB = 0x8641;
        public const uint CurrentMatrixIndexARB = 0x8845;
        public const uint CurrentMatrixNV = 0x8641;
        public const uint CurrentMatrixStackDepthARB = 0x8640;
        public const uint CurrentMatrixStackDepthNV = 0x8640;
        public const uint CurrentOcclusionQueryIdNV = 0x8865;
        public const uint CurrentPaletteMatrixARB = 0x8843;
        public const uint CurrentPaletteMatrixOES = 0x8843;
        public const uint CurrentProgram = 0x8b8d;
        public const uint CurrentQuery = 0x8865;
        public const uint CurrentQueryARB = 0x8865;
        public const uint CurrentQueryEXT = 0x8865;
        public const uint CurrentRasterNormalSGIX = 0x8406;
        public const uint CurrentSecondaryColorEXT = 0x8459;
        public const uint CurrentTangentEXT = 0x843b;
        public const uint CurrentTimeNV = 0x8e28;
        public const uint CurrentVertexAttrib = 0x8626;
        public const uint CurrentVertexAttribARB = 0x8626;
        public const uint CurrentVertexEXT = 0x87e2;
        public const uint CurrentVertexWeightEXT = 0x850b;
        public const uint CurrentWeightARB = 0x86a8;
        public const uint Cw = 0x900;
        public const uint DarkenKHR = 0x9297;
        public const uint DarkenNV = 0x9297;
        public const uint DataBufferAMD = 0x9151;
        public const uint DebugCallbackFunction = 0x8244;
        public const uint DebugCallbackFunctionARB = 0x8244;
        public const uint DebugCallbackFunctionKHR = 0x8244;
        public const uint DebugCallbackUserParam = 0x8245;
        public const uint DebugCallbackUserParamARB = 0x8245;
        public const uint DebugCallbackUserParamKHR = 0x8245;
        public const uint DebugCategoryApiErrorAMD = 0x9149;
        public const uint DebugCategoryApplicationAMD = 0x914f;
        public const uint DebugCategoryDeprecationAMD = 0x914b;
        public const uint DebugCategoryOtherAMD = 0x9150;
        public const uint DebugCategoryPerformanceAMD = 0x914d;
        public const uint DebugCategoryShaderCompilerAMD = 0x914e;
        public const uint DebugCategoryUndefinedBehaviorAMD = 0x914c;
        public const uint DebugCategoryWindowSystemAMD = 0x914a;
        public const uint DebugGroupStackDepth = 0x826d;
        public const uint DebugGroupStackDepthKHR = 0x826d;
        public const uint DebugLoggedMessages = 0x9145;
        public const uint DebugLoggedMessagesAMD = 0x9145;
        public const uint DebugLoggedMessagesARB = 0x9145;
        public const uint DebugLoggedMessagesKHR = 0x9145;
        public const uint DebugNextLoggedMessageLength = 0x8243;
        public const uint DebugNextLoggedMessageLengthARB = 0x8243;
        public const uint DebugNextLoggedMessageLengthKHR = 0x8243;
        public const uint DebugOutput = 0x92e0;
        public const uint DebugOutputKHR = 0x92e0;
        public const uint DebugOutputSynchronous = 0x8242;
        public const uint DebugOutputSynchronousARB = 0x8242;
        public const uint DebugOutputSynchronousKHR = 0x8242;
        public const uint DebugSeverityHigh = 0x9146;
        public const uint DebugSeverityHighAMD = 0x9146;
        public const uint DebugSeverityHighARB = 0x9146;
        public const uint DebugSeverityHighKHR = 0x9146;
        public const uint DebugSeverityLow = 0x9148;
        public const uint DebugSeverityLowAMD = 0x9148;
        public const uint DebugSeverityLowARB = 0x9148;
        public const uint DebugSeverityLowKHR = 0x9148;
        public const uint DebugSeverityMedium = 0x9147;
        public const uint DebugSeverityMediumAMD = 0x9147;
        public const uint DebugSeverityMediumARB = 0x9147;
        public const uint DebugSeverityMediumKHR = 0x9147;
        public const uint DebugSeverityNotification = 0x826b;
        public const uint DebugSeverityNotificationKHR = 0x826b;
        public const uint DebugSourceApi = 0x8246;
        public const uint DebugSourceApiARB = 0x8246;
        public const uint DebugSourceApiKHR = 0x8246;
        public const uint DebugSourceApplication = 0x824a;
        public const uint DebugSourceApplicationARB = 0x824a;
        public const uint DebugSourceApplicationKHR = 0x824a;
        public const uint DebugSourceOther = 0x824b;
        public const uint DebugSourceOtherARB = 0x824b;
        public const uint DebugSourceOtherKHR = 0x824b;
        public const uint DebugSourceShaderCompiler = 0x8248;
        public const uint DebugSourceShaderCompilerARB = 0x8248;
        public const uint DebugSourceShaderCompilerKHR = 0x8248;
        public const uint DebugSourceThirdParty = 0x8249;
        public const uint DebugSourceThirdPartyARB = 0x8249;
        public const uint DebugSourceThirdPartyKHR = 0x8249;
        public const uint DebugSourceWindowSystem = 0x8247;
        public const uint DebugSourceWindowSystemARB = 0x8247;
        public const uint DebugSourceWindowSystemKHR = 0x8247;
        public const uint DebugTypeDeprecatedBehavior = 0x824d;
        public const uint DebugTypeDeprecatedBehaviorARB = 0x824d;
        public const uint DebugTypeDeprecatedBehaviorKHR = 0x824d;
        public const uint DebugTypeError = 0x824c;
        public const uint DebugTypeErrorARB = 0x824c;
        public const uint DebugTypeErrorKHR = 0x824c;
        public const uint DebugTypeMarker = 0x8268;
        public const uint DebugTypeMarkerKHR = 0x8268;
        public const uint DebugTypeOther = 0x8251;
        public const uint DebugTypeOtherARB = 0x8251;
        public const uint DebugTypeOtherKHR = 0x8251;
        public const uint DebugTypePerformance = 0x8250;
        public const uint DebugTypePerformanceARB = 0x8250;
        public const uint DebugTypePerformanceKHR = 0x8250;
        public const uint DebugTypePopGroup = 0x826a;
        public const uint DebugTypePopGroupKHR = 0x826a;
        public const uint DebugTypePortability = 0x824f;
        public const uint DebugTypePortabilityARB = 0x824f;
        public const uint DebugTypePortabilityKHR = 0x824f;
        public const uint DebugTypePushGroup = 0x8269;
        public const uint DebugTypePushGroupKHR = 0x8269;
        public const uint DebugTypeUndefinedBehavior = 0x824e;
        public const uint DebugTypeUndefinedBehaviorARB = 0x824e;
        public const uint DebugTypeUndefinedBehaviorKHR = 0x824e;
        public const uint DecodeEXT = 0x8a49;
        public const uint Decr = 0x1e03;
        public const uint DecrWrap = 0x8508;
        public const uint DecrWrapEXT = 0x8508;
        public const uint DecrWrapOES = 0x8508;
        public const uint DeformationsMaskSGIX = 0x8196;
        public const uint DeleteStatus = 0x8b80;
        public const uint DependentArTexture2dNV = 0x86e9;
        public const uint DependentGbTexture2dNV = 0x86ea;
        public const uint DependentHiloTexture2dNV = 0x8858;
        public const uint DependentRgbTexture3dNV = 0x8859;
        public const uint DependentRgbTextureCubeMapNV = 0x885a;
        public const uint Depth = 0x1801;
        public const uint DepthAttachment = 0x8d00;
        public const uint DepthAttachmentEXT = 0x8d00;
        public const uint DepthAttachmentOES = 0x8d00;
        public const uint DepthBoundsEXT = 0x8891;
        public const uint DepthBoundsTestEXT = 0x8890;
        public const uint DepthBufferFloatModeNV = 0x8daf;
        public const uint DepthClamp = 0x864f;
        public const uint DepthClampFarAMD = 0x901f;
        public const uint DepthClampNearAMD = 0x901e;
        public const uint DepthClampNV = 0x864f;
        public const uint DepthClearValue = 0xb73;
        public const uint DepthComponent = 0x1902;
        public const uint DepthComponent16 = 0x81a5;
        public const uint DepthComponent16ARB = 0x81a5;
        public const uint DepthComponent16NonlinearNV = 0x8e2c;
        public const uint DepthComponent16OES = 0x81a5;
        public const uint DepthComponent16SGIX = 0x81a5;
        public const uint DepthComponent24 = 0x81a6;
        public const uint DepthComponent24ARB = 0x81a6;
        public const uint DepthComponent24OES = 0x81a6;
        public const uint DepthComponent24SGIX = 0x81a6;
        public const uint DepthComponent32 = 0x81a7;
        public const uint DepthComponent32ARB = 0x81a7;
        public const uint DepthComponent32OES = 0x81a7;
        public const uint DepthComponent32SGIX = 0x81a7;
        public const uint DepthComponent32f = 0x8cac;
        public const uint DepthComponent32fNV = 0x8dab;
        public const uint DepthComponents = 0x8284;
        public const uint DepthEXT = 0x1801;
        public const uint DepthFunc = 0xb74;
        public const uint DepthRange = 0xb70;
        public const uint DepthRenderable = 0x8287;
        public const uint DepthStencil = 0x84f9;
        public const uint DepthStencilAttachment = 0x821a;
        public const uint DepthStencilEXT = 0x84f9;
        public const uint DepthStencilNV = 0x84f9;
        public const uint DepthStencilOES = 0x84f9;
        public const uint DepthStencilTextureMode = 0x90ea;
        public const uint DepthStencilToBgraNV = 0x886f;
        public const uint DepthStencilToRgbaNV = 0x886e;
        public const uint DepthTest = 0xb71;
        public const uint DepthTextureModeARB = 0x884b;
        public const uint DepthWritemask = 0xb72;
        public const uint Depth24Stencil8 = 0x88f0;
        public const uint Depth24Stencil8EXT = 0x88f0;
        public const uint Depth24Stencil8OES = 0x88f0;
        public const uint Depth32fStencil8 = 0x8cad;
        public const uint Depth32fStencil8NV = 0x8dac;
        public const uint DetailTexture2dBindingSGIS = 0x8096;
        public const uint DetailTexture2dSGIS = 0x8095;
        public const uint DetailTextureFuncPointsSGIS = 0x809c;
        public const uint DetailTextureLevelSGIS = 0x809a;
        public const uint DetailTextureModeSGIS = 0x809b;
        public const uint DifferenceKHR = 0x929e;
        public const uint DifferenceNV = 0x929e;
        public const uint DiscardATI = 0x8763;
        public const uint DiscardNV = 0x8530;
        public const uint DiscreteAMD = 0x9006;
        public const uint DisjointNV = 0x9283;
        public const uint DispatchIndirectBuffer = 0x90ee;
        public const uint DispatchIndirectBufferBinding = 0x90ef;
        public const uint DisplayList = 0x82e7;
        public const uint DistanceAttenuationEXT = 0x8129;
        public const uint DistanceAttenuationSGIS = 0x8129;
        public const uint Dither = 0xbd0;
        public const uint DontCare = 0x1100;
        public const uint DotProductAffineDepthReplaceNV = 0x885d;
        public const uint DotProductConstEyeReflectCubeMapNV = 0x86f3;
        public const uint DotProductDepthReplaceNV = 0x86ed;
        public const uint DotProductDiffuseCubeMapNV = 0x86f1;
        public const uint DotProductNV = 0x86ec;
        public const uint DotProductPassThroughNV = 0x885b;
        public const uint DotProductReflectCubeMapNV = 0x86f2;
        public const uint DotProductTexture1dNV = 0x885c;
        public const uint DotProductTexture2dNV = 0x86ee;
        public const uint DotProductTexture3dNV = 0x86ef;
        public const uint DotProductTextureCubeMapNV = 0x86f0;
        public const uint DotProductTextureRectangleNV = 0x864e;
        public const uint Dot2AddATI = 0x896c;
        public const uint Dot3ATI = 0x8966;
        public const uint Dot3RgbARB = 0x86ae;
        public const uint Dot3RgbEXT = 0x8740;
        public const uint Dot3RgbaARB = 0x86af;
        public const uint Dot3RgbaEXT = 0x8741;
        public const uint Dot3RgbaIMG = 0x86af;
        public const uint Dot4ATI = 0x8967;
        public const uint Double = 0x140a;
        public const uint DoubleMat2 = 0x8f46;
        public const uint DoubleMat2EXT = 0x8f46;
        public const uint DoubleMat2x3 = 0x8f49;
        public const uint DoubleMat2x3EXT = 0x8f49;
        public const uint DoubleMat2x4 = 0x8f4a;
        public const uint DoubleMat2x4EXT = 0x8f4a;
        public const uint DoubleMat3 = 0x8f47;
        public const uint DoubleMat3EXT = 0x8f47;
        public const uint DoubleMat3x2 = 0x8f4b;
        public const uint DoubleMat3x2EXT = 0x8f4b;
        public const uint DoubleMat3x4 = 0x8f4c;
        public const uint DoubleMat3x4EXT = 0x8f4c;
        public const uint DoubleMat4 = 0x8f48;
        public const uint DoubleMat4EXT = 0x8f48;
        public const uint DoubleMat4x2 = 0x8f4d;
        public const uint DoubleMat4x2EXT = 0x8f4d;
        public const uint DoubleMat4x3 = 0x8f4e;
        public const uint DoubleMat4x3EXT = 0x8f4e;
        public const uint DoubleVec2 = 0x8ffc;
        public const uint DoubleVec2EXT = 0x8ffc;
        public const uint DoubleVec3 = 0x8ffd;
        public const uint DoubleVec3EXT = 0x8ffd;
        public const uint DoubleVec4 = 0x8ffe;
        public const uint DoubleVec4EXT = 0x8ffe;
        public const uint Doublebuffer = 0xc32;
        public const uint DrawBuffer = 0xc01;
        public const uint DrawBufferEXT = 0xc01;
        public const uint DrawBuffer0 = 0x8825;
        public const uint DrawBuffer0ARB = 0x8825;
        public const uint DrawBuffer0ATI = 0x8825;
        public const uint DrawBuffer0EXT = 0x8825;
        public const uint DrawBuffer0NV = 0x8825;
        public const uint DrawBuffer1 = 0x8826;
        public const uint DrawBuffer1ARB = 0x8826;
        public const uint DrawBuffer1ATI = 0x8826;
        public const uint DrawBuffer1EXT = 0x8826;
        public const uint DrawBuffer1NV = 0x8826;
        public const uint DrawBuffer10 = 0x882f;
        public const uint DrawBuffer10ARB = 0x882f;
        public const uint DrawBuffer10ATI = 0x882f;
        public const uint DrawBuffer10EXT = 0x882f;
        public const uint DrawBuffer10NV = 0x882f;
        public const uint DrawBuffer11 = 0x8830;
        public const uint DrawBuffer11ARB = 0x8830;
        public const uint DrawBuffer11ATI = 0x8830;
        public const uint DrawBuffer11EXT = 0x8830;
        public const uint DrawBuffer11NV = 0x8830;
        public const uint DrawBuffer12 = 0x8831;
        public const uint DrawBuffer12ARB = 0x8831;
        public const uint DrawBuffer12ATI = 0x8831;
        public const uint DrawBuffer12EXT = 0x8831;
        public const uint DrawBuffer12NV = 0x8831;
        public const uint DrawBuffer13 = 0x8832;
        public const uint DrawBuffer13ARB = 0x8832;
        public const uint DrawBuffer13ATI = 0x8832;
        public const uint DrawBuffer13EXT = 0x8832;
        public const uint DrawBuffer13NV = 0x8832;
        public const uint DrawBuffer14 = 0x8833;
        public const uint DrawBuffer14ARB = 0x8833;
        public const uint DrawBuffer14ATI = 0x8833;
        public const uint DrawBuffer14EXT = 0x8833;
        public const uint DrawBuffer14NV = 0x8833;
        public const uint DrawBuffer15 = 0x8834;
        public const uint DrawBuffer15ARB = 0x8834;
        public const uint DrawBuffer15ATI = 0x8834;
        public const uint DrawBuffer15EXT = 0x8834;
        public const uint DrawBuffer15NV = 0x8834;
        public const uint DrawBuffer2 = 0x8827;
        public const uint DrawBuffer2ARB = 0x8827;
        public const uint DrawBuffer2ATI = 0x8827;
        public const uint DrawBuffer2EXT = 0x8827;
        public const uint DrawBuffer2NV = 0x8827;
        public const uint DrawBuffer3 = 0x8828;
        public const uint DrawBuffer3ARB = 0x8828;
        public const uint DrawBuffer3ATI = 0x8828;
        public const uint DrawBuffer3EXT = 0x8828;
        public const uint DrawBuffer3NV = 0x8828;
        public const uint DrawBuffer4 = 0x8829;
        public const uint DrawBuffer4ARB = 0x8829;
        public const uint DrawBuffer4ATI = 0x8829;
        public const uint DrawBuffer4EXT = 0x8829;
        public const uint DrawBuffer4NV = 0x8829;
        public const uint DrawBuffer5 = 0x882a;
        public const uint DrawBuffer5ARB = 0x882a;
        public const uint DrawBuffer5ATI = 0x882a;
        public const uint DrawBuffer5EXT = 0x882a;
        public const uint DrawBuffer5NV = 0x882a;
        public const uint DrawBuffer6 = 0x882b;
        public const uint DrawBuffer6ARB = 0x882b;
        public const uint DrawBuffer6ATI = 0x882b;
        public const uint DrawBuffer6EXT = 0x882b;
        public const uint DrawBuffer6NV = 0x882b;
        public const uint DrawBuffer7 = 0x882c;
        public const uint DrawBuffer7ARB = 0x882c;
        public const uint DrawBuffer7ATI = 0x882c;
        public const uint DrawBuffer7EXT = 0x882c;
        public const uint DrawBuffer7NV = 0x882c;
        public const uint DrawBuffer8 = 0x882d;
        public const uint DrawBuffer8ARB = 0x882d;
        public const uint DrawBuffer8ATI = 0x882d;
        public const uint DrawBuffer8EXT = 0x882d;
        public const uint DrawBuffer8NV = 0x882d;
        public const uint DrawBuffer9 = 0x882e;
        public const uint DrawBuffer9ARB = 0x882e;
        public const uint DrawBuffer9ATI = 0x882e;
        public const uint DrawBuffer9EXT = 0x882e;
        public const uint DrawBuffer9NV = 0x882e;
        public const uint DrawFramebuffer = 0x8ca9;
        public const uint DrawFramebufferAngle = 0x8ca9;
        public const uint DrawFramebufferAPPLE = 0x8ca9;
        public const uint DrawFramebufferBinding = 0x8ca6;
        public const uint DrawFramebufferBindingAngle = 0x8ca6;
        public const uint DrawFramebufferBindingAPPLE = 0x8ca6;
        public const uint DrawFramebufferBindingEXT = 0x8ca6;
        public const uint DrawFramebufferBindingNV = 0x8ca6;
        public const uint DrawFramebufferEXT = 0x8ca9;
        public const uint DrawFramebufferNV = 0x8ca9;
        public const uint DrawIndirectAddressNV = 0x8f41;
        public const uint DrawIndirectBuffer = 0x8f3f;
        public const uint DrawIndirectBufferBinding = 0x8f43;
        public const uint DrawIndirectLengthNV = 0x8f42;
        public const uint DrawIndirectUnifiedNV = 0x8f40;
        public const uint DrawPixelsAPPLE = 0x8a0a;
        public const uint DsBiasNV = 0x8716;
        public const uint DsScaleNV = 0x8710;
        public const uint DsdtMagIntensityNV = 0x86dc;
        public const uint DsdtMagNV = 0x86f6;
        public const uint DsdtMagVibNV = 0x86f7;
        public const uint DsdtNV = 0x86f5;
        public const uint Dsdt8Mag8Intensity8NV = 0x870b;
        public const uint Dsdt8Mag8NV = 0x870a;
        public const uint Dsdt8NV = 0x8709;
        public const uint DstAlpha = 0x304;
        public const uint DstAtopNV = 0x928f;
        public const uint DstColor = 0x306;
        public const uint DstInNV = 0x928b;
        public const uint DstNV = 0x9287;
        public const uint DstOutNV = 0x928d;
        public const uint DstOverNV = 0x9289;
        public const uint DtBiasNV = 0x8717;
        public const uint DtScaleNV = 0x8711;
        public const uint Du8dv8ATI = 0x877a;
        public const uint DualAlpha12SGIS = 0x8112;
        public const uint DualAlpha16SGIS = 0x8113;
        public const uint DualAlpha4SGIS = 0x8110;
        public const uint DualAlpha8SGIS = 0x8111;
        public const uint DualIntensity12SGIS = 0x811a;
        public const uint DualIntensity16SGIS = 0x811b;
        public const uint DualIntensity4SGIS = 0x8118;
        public const uint DualIntensity8SGIS = 0x8119;
        public const uint DualLuminanceAlpha4SGIS = 0x811c;
        public const uint DualLuminanceAlpha8SGIS = 0x811d;
        public const uint DualLuminance12SGIS = 0x8116;
        public const uint DualLuminance16SGIS = 0x8117;
        public const uint DualLuminance4SGIS = 0x8114;
        public const uint DualLuminance8SGIS = 0x8115;
        public const uint DualTextureSelectSGIS = 0x8124;
        public const uint DudvATI = 0x8779;
        public const uint DynamicATI = 0x8761;
        public const uint DynamicCopy = 0x88ea;
        public const uint DynamicCopyARB = 0x88ea;
        public const uint DynamicDraw = 0x88e8;
        public const uint DynamicDrawARB = 0x88e8;
        public const uint DynamicRead = 0x88e9;
        public const uint DynamicReadARB = 0x88e9;
        public const uint ETimesFNV = 0x8531;
        public const uint EdgeFlagArrayAddressNV = 0x8f26;
        public const uint EdgeFlagArrayBufferBindingARB = 0x889b;
        public const uint EdgeFlagArrayCountEXT = 0x808d;
        public const uint EdgeFlagArrayEXT = 0x8079;
        public const uint EdgeFlagArrayLengthNV = 0x8f30;
        public const uint EdgeFlagArrayListIBM = 0x192a3;
        public const uint EdgeFlagArrayListStrideIBM = 0x192ad;
        public const uint EdgeFlagArrayPointerEXT = 0x8093;
        public const uint EdgeFlagArrayStrideEXT = 0x808c;
        public const uint ElementArrayAddressNV = 0x8f29;
        public const uint ElementArrayAPPLE = 0x8a0c;
        public const uint ElementArrayATI = 0x8768;
        public const uint ElementArrayBuffer = 0x8893;
        public const uint ElementArrayBufferARB = 0x8893;
        public const uint ElementArrayBufferBinding = 0x8895;
        public const uint ElementArrayBufferBindingARB = 0x8895;
        public const uint ElementArrayLengthNV = 0x8f33;
        public const uint ElementArrayPointerAPPLE = 0x8a0e;
        public const uint ElementArrayPointerATI = 0x876a;
        public const uint ElementArrayTypeAPPLE = 0x8a0d;
        public const uint ElementArrayTypeATI = 0x8769;
        public const uint ElementArrayUnifiedNV = 0x8f1f;
        public const uint EmbossConstantNV = 0x855e;
        public const uint EmbossLightNV = 0x855d;
        public const uint EmbossMapNV = 0x855f;
        public const uint Equal = 0x202;
        public const uint Equiv = 0x1509;
        public const uint Etc1Rgb8OES = 0x8d64;
        public const uint Etc1Srgb8NV = 0x88ee;
        public const uint Eval2dNV = 0x86c0;
        public const uint EvalFractionalTessellationNV = 0x86c5;
        public const uint EvalTriangular2dNV = 0x86c1;
        public const uint EvalVertexAttrib0NV = 0x86c6;
        public const uint EvalVertexAttrib1NV = 0x86c7;
        public const uint EvalVertexAttrib10NV = 0x86d0;
        public const uint EvalVertexAttrib11NV = 0x86d1;
        public const uint EvalVertexAttrib12NV = 0x86d2;
        public const uint EvalVertexAttrib13NV = 0x86d3;
        public const uint EvalVertexAttrib14NV = 0x86d4;
        public const uint EvalVertexAttrib15NV = 0x86d5;
        public const uint EvalVertexAttrib2NV = 0x86c8;
        public const uint EvalVertexAttrib3NV = 0x86c9;
        public const uint EvalVertexAttrib4NV = 0x86ca;
        public const uint EvalVertexAttrib5NV = 0x86cb;
        public const uint EvalVertexAttrib6NV = 0x86cc;
        public const uint EvalVertexAttrib7NV = 0x86cd;
        public const uint EvalVertexAttrib8NV = 0x86ce;
        public const uint EvalVertexAttrib9NV = 0x86cf;
        public const uint ExclusionKHR = 0x92a0;
        public const uint ExclusionNV = 0x92a0;
        public const uint ExpandNegateNV = 0x8539;
        public const uint ExpandNormalNV = 0x8538;
        public const uint Extensions = 0x1f03;
        public const uint ExternalVirtualMemoryBufferAMD = 0x9160;
        public const uint EyeDistanceToLineSGIS = 0x81f2;
        public const uint EyeDistanceToPointSGIS = 0x81f0;
        public const uint EyeLineSGIS = 0x81f6;
        public const uint EyePlaneAbsoluteNV = 0x855c;
        public const uint EyePointSGIS = 0x81f4;
        public const uint EyeRadialNV = 0x855b;
        public const uint FactorAlphaModulateIMG = 0x8c07;
        public const uint FactorMaxAMD = 0x901d;
        public const uint FactorMinAMD = 0x901c;
        public const uint FailureNV = 0x9030;
        public const uint Fastest = 0x1101;
        public const uint FenceAPPLE = 0x8a0b;
        public const uint FenceConditionNV = 0x84f4;
        public const uint FenceStatusNV = 0x84f3;
        public const uint FetchPerSampleArm = 0x8f65;
        public const uint FieldLowerNV = 0x9023;
        public const uint FieldUpperNV = 0x9022;
        public const uint FieldsNV = 0x8e27;
        public const uint FileNameNV = 0x9074;
        public const uint Fill = 0x1b02;
        public const uint Filter = 0x829a;
        public const uint Filter4SGIS = 0x8146;
        public const uint FirstToRestNV = 0x90af;
        public const uint FirstVertexConvention = 0x8e4d;
        public const uint FirstVertexConventionEXT = 0x8e4d;
        public const uint Fixed = 0x140c;
        public const uint FixedOES = 0x140c;
        public const uint FixedOnly = 0x891d;
        public const uint FixedOnlyARB = 0x891d;
        public const uint Float = 0x1406;
        public const uint Float32UnsignedInt248Rev = 0x8dad;
        public const uint Float32UnsignedInt248RevNV = 0x8dad;
        public const uint FloatClearColorValueNV = 0x888d;
        public const uint FloatRNV = 0x8880;
        public const uint FloatR16NV = 0x8884;
        public const uint FloatR32NV = 0x8885;
        public const uint FloatRgNV = 0x8881;
        public const uint FloatRg16NV = 0x8886;
        public const uint FloatRg32NV = 0x8887;
        public const uint FloatRgbNV = 0x8882;
        public const uint FloatRgb16NV = 0x8888;
        public const uint FloatRgb32NV = 0x8889;
        public const uint FloatRgbaModeNV = 0x888e;
        public const uint FloatRgbaNV = 0x8883;
        public const uint FloatRgba16NV = 0x888a;
        public const uint FloatRgba32NV = 0x888b;
        public const uint Float16NV = 0x8ff8;
        public const uint Float16Vec2NV = 0x8ff9;
        public const uint Float16Vec3NV = 0x8ffa;
        public const uint Float16Vec4NV = 0x8ffb;
        public const uint FogCoordArrayAddressNV = 0x8f28;
        public const uint FogCoordArrayLengthNV = 0x8f32;
        public const uint FogCoordinateArrayBufferBindingARB = 0x889d;
        public const uint FogCoordinateArrayEXT = 0x8457;
        public const uint FogCoordinateArrayListIBM = 0x192a4;
        public const uint FogCoordinateArrayListStrideIBM = 0x192ae;
        public const uint FogCoordinateArrayPointerEXT = 0x8456;
        public const uint FogCoordinateArrayStrideEXT = 0x8455;
        public const uint FogCoordinateArrayTypeEXT = 0x8454;
        public const uint FogCoordinateEXT = 0x8451;
        public const uint FogCoordinateSourceEXT = 0x8450;
        public const uint FogDistanceModeNV = 0x855a;
        public const uint FogFuncPointsSGIS = 0x812b;
        public const uint FogFuncSGIS = 0x812a;
        public const uint FogOffsetSGIX = 0x8198;
        public const uint FogOffsetValueSGIX = 0x8199;
        public const uint FogSpecularTextureWin = 0x80ec;
        public const uint ForceBlueToOneNV = 0x8860;
        public const uint FormatSubsample2424Oml = 0x8982;
        public const uint FormatSubsample244244Oml = 0x8983;
        public const uint FractionalEven = 0x8e7c;
        public const uint FractionalEvenEXT = 0x8e7c;
        public const uint FractionalOdd = 0x8e7b;
        public const uint FractionalOddEXT = 0x8e7b;
        public const uint FragmentAlphaModulateIMG = 0x8c08;
        public const uint FragmentColorEXT = 0x834c;
        public const uint FragmentColorMaterialFaceSGIX = 0x8402;
        public const uint FragmentColorMaterialParameterSGIX = 0x8403;
        public const uint FragmentColorMaterialSGIX = 0x8401;
        public const uint FragmentDepthEXT = 0x8452;
        public const uint FragmentInterpolationOffsetBits = 0x8e5d;
        public const uint FragmentInterpolationOffsetBitsOES = 0x8e5d;
        public const uint FragmentLightModelAmbientSGIX = 0x840a;
        public const uint FragmentLightModelLocalViewerSGIX = 0x8408;
        public const uint FragmentLightModelNormalInterpolationSGIX = 0x840b;
        public const uint FragmentLightModelTwoSideSGIX = 0x8409;
        public const uint FragmentLight0SGIX = 0x840c;
        public const uint FragmentLight1SGIX = 0x840d;
        public const uint FragmentLight2SGIX = 0x840e;
        public const uint FragmentLight3SGIX = 0x840f;
        public const uint FragmentLight4SGIX = 0x8410;
        public const uint FragmentLight5SGIX = 0x8411;
        public const uint FragmentLight6SGIX = 0x8412;
        public const uint FragmentLight7SGIX = 0x8413;
        public const uint FragmentLightingSGIX = 0x8400;
        public const uint FragmentMaterialEXT = 0x8349;
        public const uint FragmentNormalEXT = 0x834a;
        public const uint FragmentProgramARB = 0x8804;
        public const uint FragmentProgramBindingNV = 0x8873;
        public const uint FragmentProgramInterpolationOffsetBitsNV = 0x8e5d;
        public const uint FragmentProgramNV = 0x8870;
        public const uint FragmentProgramParameterBufferNV = 0x8da4;
        public const uint FragmentShaderATI = 0x8920;
        public const uint FragmentShaderDerivativeHint = 0x8b8b;
        public const uint FragmentShaderDerivativeHintARB = 0x8b8b;
        public const uint FragmentShaderDerivativeHintOES = 0x8b8b;
        public const uint FragmentShaderDiscardsSamplesEXT = 0x8a52;
        public const uint FragmentShaderFramebufferFetchMrtArm = 0x8f66;
        public const uint FragmentSubroutine = 0x92ec;
        public const uint FragmentSubroutineUniform = 0x92f2;
        public const uint FragmentTexture = 0x829f;
        public const uint FrameNV = 0x8e26;
        public const uint Framebuffer = 0x8d40;
        public const uint FramebufferAttachmentAlphaSize = 0x8215;
        public const uint FramebufferAttachmentAngle = 0x93a3;
        public const uint FramebufferAttachmentBlueSize = 0x8214;
        public const uint FramebufferAttachmentColorEncoding = 0x8210;
        public const uint FramebufferAttachmentColorEncodingEXT = 0x8210;
        public const uint FramebufferAttachmentComponentType = 0x8211;
        public const uint FramebufferAttachmentComponentTypeEXT = 0x8211;
        public const uint FramebufferAttachmentDepthSize = 0x8216;
        public const uint FramebufferAttachmentGreenSize = 0x8213;
        public const uint FramebufferAttachmentLayered = 0x8da7;
        public const uint FramebufferAttachmentLayeredARB = 0x8da7;
        public const uint FramebufferAttachmentLayeredEXT = 0x8da7;
        public const uint FramebufferAttachmentObjectName = 0x8cd1;
        public const uint FramebufferAttachmentObjectNameEXT = 0x8cd1;
        public const uint FramebufferAttachmentObjectNameOES = 0x8cd1;
        public const uint FramebufferAttachmentObjectType = 0x8cd0;
        public const uint FramebufferAttachmentObjectTypeEXT = 0x8cd0;
        public const uint FramebufferAttachmentObjectTypeOES = 0x8cd0;
        public const uint FramebufferAttachmentRedSize = 0x8212;
        public const uint FramebufferAttachmentStencilSize = 0x8217;
        public const uint FramebufferAttachmentTexture3dZoffsetEXT = 0x8cd4;
        public const uint FramebufferAttachmentTexture3dZoffsetOES = 0x8cd4;
        public const uint FramebufferAttachmentTextureCubeMapFace = 0x8cd3;
        public const uint FramebufferAttachmentTextureCubeMapFaceEXT = 0x8cd3;
        public const uint FramebufferAttachmentTextureCubeMapFaceOES = 0x8cd3;
        public const uint FramebufferAttachmentTextureLayer = 0x8cd4;
        public const uint FramebufferAttachmentTextureLayerEXT = 0x8cd4;
        public const uint FramebufferAttachmentTextureLevel = 0x8cd2;
        public const uint FramebufferAttachmentTextureLevelEXT = 0x8cd2;
        public const uint FramebufferAttachmentTextureLevelOES = 0x8cd2;
        public const uint FramebufferAttachmentTextureSamplesEXT = 0x8d6c;
        public const uint FramebufferBinding = 0x8ca6;
        public const uint FramebufferBindingEXT = 0x8ca6;
        public const uint FramebufferBindingOES = 0x8ca6;
        public const uint FramebufferBlend = 0x828b;
        public const uint FramebufferComplete = 0x8cd5;
        public const uint FramebufferCompleteEXT = 0x8cd5;
        public const uint FramebufferCompleteOES = 0x8cd5;
        public const uint FramebufferDefault = 0x8218;
        public const uint FramebufferDefaultFixedSampleLocations = 0x9314;
        public const uint FramebufferDefaultHeight = 0x9311;
        public const uint FramebufferDefaultLayers = 0x9312;
        public const uint FramebufferDefaultLayersEXT = 0x9312;
        public const uint FramebufferDefaultSamples = 0x9313;
        public const uint FramebufferDefaultWidth = 0x9310;
        public const uint FramebufferEXT = 0x8d40;
        public const uint FramebufferIncompleteAttachment = 0x8cd6;
        public const uint FramebufferIncompleteAttachmentEXT = 0x8cd6;
        public const uint FramebufferIncompleteAttachmentOES = 0x8cd6;
        public const uint FramebufferIncompleteDimensions = 0x8cd9;
        public const uint FramebufferIncompleteDimensionsEXT = 0x8cd9;
        public const uint FramebufferIncompleteDimensionsOES = 0x8cd9;
        public const uint FramebufferIncompleteDrawBuffer = 0x8cdb;
        public const uint FramebufferIncompleteDrawBufferEXT = 0x8cdb;
        public const uint FramebufferIncompleteFormatsEXT = 0x8cda;
        public const uint FramebufferIncompleteFormatsOES = 0x8cda;
        public const uint FramebufferIncompleteLayerCountARB = 0x8da9;
        public const uint FramebufferIncompleteLayerCountEXT = 0x8da9;
        public const uint FramebufferIncompleteLayerTargets = 0x8da8;
        public const uint FramebufferIncompleteLayerTargetsARB = 0x8da8;
        public const uint FramebufferIncompleteLayerTargetsEXT = 0x8da8;
        public const uint FramebufferIncompleteMissingAttachment = 0x8cd7;
        public const uint FramebufferIncompleteMissingAttachmentEXT = 0x8cd7;
        public const uint FramebufferIncompleteMissingAttachmentOES = 0x8cd7;
        public const uint FramebufferIncompleteMultisample = 0x8d56;
        public const uint FramebufferIncompleteMultisampleAngle = 0x8d56;
        public const uint FramebufferIncompleteMultisampleAPPLE = 0x8d56;
        public const uint FramebufferIncompleteMultisampleEXT = 0x8d56;
        public const uint FramebufferIncompleteMultisampleIMG = 0x9134;
        public const uint FramebufferIncompleteMultisampleNV = 0x8d56;
        public const uint FramebufferIncompleteReadBuffer = 0x8cdc;
        public const uint FramebufferIncompleteReadBufferEXT = 0x8cdc;
        public const uint FramebufferOES = 0x8d40;
        public const uint FramebufferRenderable = 0x8289;
        public const uint FramebufferRenderableLayered = 0x828a;
        public const uint FramebufferSrgb = 0x8db9;
        public const uint FramebufferSrgbCapableEXT = 0x8dba;
        public const uint FramebufferSrgbEXT = 0x8db9;
        public const uint FramebufferUndefined = 0x8219;
        public const uint FramebufferUndefinedOES = 0x8219;
        public const uint FramebufferUnsupported = 0x8cdd;
        public const uint FramebufferUnsupportedEXT = 0x8cdd;
        public const uint FramebufferUnsupportedOES = 0x8cdd;
        public const uint FramezoomFactorSGIX = 0x818c;
        public const uint FramezoomSGIX = 0x818b;
        public const uint Front = 0x404;
        public const uint FrontAndBack = 0x408;
        public const uint FrontFace = 0xb46;
        public const uint FrontLeft = 0x400;
        public const uint FrontRight = 0x401;
        public const uint FullRangeEXT = 0x87e1;
        public const uint FullStippleHintPGI = 0x1a219;
        public const uint FullSupport = 0x82b7;
        public const uint FuncAdd = 0x8006;
        public const uint FuncAddEXT = 0x8006;
        public const uint FuncAddOES = 0x8006;
        public const uint FuncReverseSubtract = 0x800b;
        public const uint FuncReverseSubtractEXT = 0x800b;
        public const uint FuncReverseSubtractOES = 0x800b;
        public const uint FuncSubtract = 0x800a;
        public const uint FuncSubtractEXT = 0x800a;
        public const uint FuncSubtractOES = 0x800a;
        public const uint GccsoShaderBinaryFj = 0x9260;
        public const uint GenerateMipmapHintSGIS = 0x8192;
        public const uint GenerateMipmapSGIS = 0x8191;
        public const uint GenericAttribNV = 0x8c7d;
        public const uint GeometryDeformationSGIX = 0x8194;
        public const uint GeometryInputType = 0x8917;
        public const uint GeometryInputTypeARB = 0x8ddb;
        public const uint GeometryInputTypeEXT = 0x8ddb;
        public const uint GeometryLinkedInputTypeEXT = 0x8917;
        public const uint GeometryLinkedOutputTypeEXT = 0x8918;
        public const uint GeometryLinkedVerticesOutEXT = 0x8916;
        public const uint GeometryOutputType = 0x8918;
        public const uint GeometryOutputTypeARB = 0x8ddc;
        public const uint GeometryOutputTypeEXT = 0x8ddc;
        public const uint GeometryProgramNV = 0x8c26;
        public const uint GeometryProgramParameterBufferNV = 0x8da3;
        public const uint GeometryShader = 0x8dd9;
        public const uint GeometryShaderARB = 0x8dd9;
        public const uint GeometryShaderEXT = 0x8dd9;
        public const uint GeometryShaderInvocations = 0x887f;
        public const uint GeometryShaderInvocationsEXT = 0x887f;
        public const uint GeometrySubroutine = 0x92eb;
        public const uint GeometrySubroutineUniform = 0x92f1;
        public const uint GeometryTexture = 0x829e;
        public const uint GeometryVerticesOut = 0x8916;
        public const uint GeometryVerticesOutARB = 0x8dda;
        public const uint GeometryVerticesOutEXT = 0x8dda;
        public const uint Gequal = 0x206;
        public const uint GetTextureImageFormat = 0x8291;
        public const uint GetTextureImageType = 0x8292;
        public const uint GlobalAlphaFactorSun = 0x81da;
        public const uint GlobalAlphaSun = 0x81d9;
        public const uint GpuAddressNV = 0x8f34;
        public const uint GpuDisjointEXT = 0x8fbb;
        public const uint GpuMemoryInfoCurrentAvailableVidmemNvx = 0x9049;
        public const uint GpuMemoryInfoDedicatedVidmemNvx = 0x9047;
        public const uint GpuMemoryInfoEvictedMemoryNvx = 0x904b;
        public const uint GpuMemoryInfoEvictionCountNvx = 0x904a;
        public const uint GpuMemoryInfoTotalAvailableMemoryNvx = 0x9048;
        public const uint GpuOptimizedQCOM = 0x8fb2;
        public const uint Greater = 0x204;
        public const uint Green = 0x1904;
        public const uint GreenInteger = 0x8d95;
        public const uint GreenIntegerEXT = 0x8d95;
        public const uint GreenMaxClampIngr = 0x8565;
        public const uint GreenMinClampIngr = 0x8561;
        public const uint GreenNV = 0x1904;
        public const uint GuiltyContextResetARB = 0x8253;
        public const uint GuiltyContextResetEXT = 0x8253;
        public const uint HalfAPPLE = 0x140b;
        public const uint HalfBiasNegateNV = 0x853b;
        public const uint HalfBiasNormalNV = 0x853a;
        public const uint HalfFloat = 0x140b;
        public const uint HalfFloatARB = 0x140b;
        public const uint HalfFloatNV = 0x140b;
        public const uint HalfFloatOES = 0x8d61;
        public const uint HardlightKHR = 0x929b;
        public const uint HardlightNV = 0x929b;
        public const uint HardmixNV = 0x92a9;
        public const uint HiBiasNV = 0x8714;
        public const uint HiScaleNV = 0x870e;
        public const uint HighFloat = 0x8df2;
        public const uint HighInt = 0x8df5;
        public const uint HiloNV = 0x86f4;
        public const uint Hilo16NV = 0x86f8;
        public const uint Hilo8NV = 0x885e;
        public const uint Histogram = 0x8024;
        public const uint HistogramAlphaSize = 0x802b;
        public const uint HistogramAlphaSizeEXT = 0x802b;
        public const uint HistogramBlueSize = 0x802a;
        public const uint HistogramBlueSizeEXT = 0x802a;
        public const uint HistogramEXT = 0x8024;
        public const uint HistogramFormat = 0x8027;
        public const uint HistogramFormatEXT = 0x8027;
        public const uint HistogramGreenSize = 0x8029;
        public const uint HistogramGreenSizeEXT = 0x8029;
        public const uint HistogramLuminanceSize = 0x802c;
        public const uint HistogramLuminanceSizeEXT = 0x802c;
        public const uint HistogramRedSize = 0x8028;
        public const uint HistogramRedSizeEXT = 0x8028;
        public const uint HistogramSink = 0x802d;
        public const uint HistogramSinkEXT = 0x802d;
        public const uint HistogramWidth = 0x8026;
        public const uint HistogramWidthEXT = 0x8026;
        public const uint HslColorKHR = 0x92af;
        public const uint HslColorNV = 0x92af;
        public const uint HslHueKHR = 0x92ad;
        public const uint HslHueNV = 0x92ad;
        public const uint HslLuminosityKHR = 0x92b0;
        public const uint HslLuminosityNV = 0x92b0;
        public const uint HslSaturationKHR = 0x92ae;
        public const uint HslSaturationNV = 0x92ae;
        public const uint IdentityNV = 0x862a;
        public const uint IgnoreBorderHP = 0x8150;
        public const uint Image1d = 0x904c;
        public const uint Image1dArray = 0x9052;
        public const uint Image1dArrayEXT = 0x9052;
        public const uint Image1dEXT = 0x904c;
        public const uint Image2d = 0x904d;
        public const uint Image2dArray = 0x9053;
        public const uint Image2dArrayEXT = 0x9053;
        public const uint Image2dEXT = 0x904d;
        public const uint Image2dMultisample = 0x9055;
        public const uint Image2dMultisampleArray = 0x9056;
        public const uint Image2dMultisampleArrayEXT = 0x9056;
        public const uint Image2dMultisampleEXT = 0x9055;
        public const uint Image2dRect = 0x904f;
        public const uint Image2dRectEXT = 0x904f;
        public const uint Image3d = 0x904e;
        public const uint Image3dEXT = 0x904e;
        public const uint ImageBindingAccess = 0x8f3e;
        public const uint ImageBindingAccessEXT = 0x8f3e;
        public const uint ImageBindingFormat = 0x906e;
        public const uint ImageBindingFormatEXT = 0x906e;
        public const uint ImageBindingLayer = 0x8f3d;
        public const uint ImageBindingLayerEXT = 0x8f3d;
        public const uint ImageBindingLayered = 0x8f3c;
        public const uint ImageBindingLayeredEXT = 0x8f3c;
        public const uint ImageBindingLevel = 0x8f3b;
        public const uint ImageBindingLevelEXT = 0x8f3b;
        public const uint ImageBindingName = 0x8f3a;
        public const uint ImageBindingNameEXT = 0x8f3a;
        public const uint ImageBuffer = 0x9051;
        public const uint ImageBufferEXT = 0x9051;
        public const uint ImageClass1X16 = 0x82be;
        public const uint ImageClass1X32 = 0x82bb;
        public const uint ImageClass1X8 = 0x82c1;
        public const uint ImageClass1010102 = 0x82c3;
        public const uint ImageClass111110 = 0x82c2;
        public const uint ImageClass2X16 = 0x82bd;
        public const uint ImageClass2X32 = 0x82ba;
        public const uint ImageClass2X8 = 0x82c0;
        public const uint ImageClass4X16 = 0x82bc;
        public const uint ImageClass4X32 = 0x82b9;
        public const uint ImageClass4X8 = 0x82bf;
        public const uint ImageCompatibilityClass = 0x82a8;
        public const uint ImageCube = 0x9050;
        public const uint ImageCubeEXT = 0x9050;
        public const uint ImageCubeMapArray = 0x9054;
        public const uint ImageCubeMapArrayEXT = 0x9054;
        public const uint ImageCubicWeightHP = 0x815e;
        public const uint ImageFormatCompatibilityByClass = 0x90c9;
        public const uint ImageFormatCompatibilityBySize = 0x90c8;
        public const uint ImageFormatCompatibilityType = 0x90c7;
        public const uint ImageMagFilterHP = 0x815c;
        public const uint ImageMinFilterHP = 0x815d;
        public const uint ImagePixelFormat = 0x82a9;
        public const uint ImagePixelType = 0x82aa;
        public const uint ImageRotateAngleHP = 0x8159;
        public const uint ImageRotateOriginXHP = 0x815a;
        public const uint ImageRotateOriginYHP = 0x815b;
        public const uint ImageScaleXHP = 0x8155;
        public const uint ImageScaleYHP = 0x8156;
        public const uint ImageTexelSize = 0x82a7;
        public const uint ImageTransform2dHP = 0x8161;
        public const uint ImageTranslateXHP = 0x8157;
        public const uint ImageTranslateYHP = 0x8158;
        public const uint ImplementationColorReadFormat = 0x8b9b;
        public const uint ImplementationColorReadFormatOES = 0x8b9b;
        public const uint ImplementationColorReadType = 0x8b9a;
        public const uint ImplementationColorReadTypeOES = 0x8b9a;
        public const uint Incr = 0x1e02;
        public const uint IncrWrap = 0x8507;
        public const uint IncrWrapEXT = 0x8507;
        public const uint IncrWrapOES = 0x8507;
        public const uint Index = 0x8222;
        public const uint IndexArrayAddressNV = 0x8f24;
        public const uint IndexArrayBufferBindingARB = 0x8899;
        public const uint IndexArrayCountEXT = 0x8087;
        public const uint IndexArrayEXT = 0x8077;
        public const uint IndexArrayLengthNV = 0x8f2e;
        public const uint IndexArrayListIBM = 0x192a1;
        public const uint IndexArrayListStrideIBM = 0x192ab;
        public const uint IndexArrayPointerEXT = 0x8091;
        public const uint IndexArrayStrideEXT = 0x8086;
        public const uint IndexArrayTypeEXT = 0x8085;
        public const uint IndexMaterialEXT = 0x81b8;
        public const uint IndexMaterialFaceEXT = 0x81ba;
        public const uint IndexMaterialParameterEXT = 0x81b9;
        public const uint IndexTestEXT = 0x81b5;
        public const uint IndexTestFuncEXT = 0x81b6;
        public const uint IndexTestRefEXT = 0x81b7;
        public const uint InfoLogLength = 0x8b84;
        public const uint InnocentContextResetARB = 0x8254;
        public const uint InnocentContextResetEXT = 0x8254;
        public const uint InstrumentBufferPointerSGIX = 0x8180;
        public const uint InstrumentMeasurementsSGIX = 0x8181;
        public const uint Int = 0x1404;
        public const uint Int1010102OES = 0x8df7;
        public const uint Int2101010Rev = 0x8d9f;
        public const uint IntImage1d = 0x9057;
        public const uint IntImage1dArray = 0x905d;
        public const uint IntImage1dArrayEXT = 0x905d;
        public const uint IntImage1dEXT = 0x9057;
        public const uint IntImage2d = 0x9058;
        public const uint IntImage2dArray = 0x905e;
        public const uint IntImage2dArrayEXT = 0x905e;
        public const uint IntImage2dEXT = 0x9058;
        public const uint IntImage2dMultisample = 0x9060;
        public const uint IntImage2dMultisampleArray = 0x9061;
        public const uint IntImage2dMultisampleArrayEXT = 0x9061;
        public const uint IntImage2dMultisampleEXT = 0x9060;
        public const uint IntImage2dRect = 0x905a;
        public const uint IntImage2dRectEXT = 0x905a;
        public const uint IntImage3d = 0x9059;
        public const uint IntImage3dEXT = 0x9059;
        public const uint IntImageBuffer = 0x905c;
        public const uint IntImageBufferEXT = 0x905c;
        public const uint IntImageCube = 0x905b;
        public const uint IntImageCubeEXT = 0x905b;
        public const uint IntImageCubeMapArray = 0x905f;
        public const uint IntImageCubeMapArrayEXT = 0x905f;
        public const uint IntSampler1d = 0x8dc9;
        public const uint IntSampler1dArray = 0x8dce;
        public const uint IntSampler1dArrayEXT = 0x8dce;
        public const uint IntSampler1dEXT = 0x8dc9;
        public const uint IntSampler2d = 0x8dca;
        public const uint IntSampler2dArray = 0x8dcf;
        public const uint IntSampler2dArrayEXT = 0x8dcf;
        public const uint IntSampler2dEXT = 0x8dca;
        public const uint IntSampler2dMultisample = 0x9109;
        public const uint IntSampler2dMultisampleArray = 0x910c;
        public const uint IntSampler2dMultisampleArrayOES = 0x910c;
        public const uint IntSampler2dRect = 0x8dcd;
        public const uint IntSampler2dRectEXT = 0x8dcd;
        public const uint IntSampler3d = 0x8dcb;
        public const uint IntSampler3dEXT = 0x8dcb;
        public const uint IntSamplerBuffer = 0x8dd0;
        public const uint IntSamplerBufferAMD = 0x9002;
        public const uint IntSamplerBufferEXT = 0x8dd0;
        public const uint IntSamplerCube = 0x8dcc;
        public const uint IntSamplerCubeEXT = 0x8dcc;
        public const uint IntSamplerCubeMapArray = 0x900e;
        public const uint IntSamplerCubeMapArrayARB = 0x900e;
        public const uint IntSamplerCubeMapArrayEXT = 0x900e;
        public const uint IntSamplerRenderbufferNV = 0x8e57;
        public const uint Int16NV = 0x8fe4;
        public const uint Int16Vec2NV = 0x8fe5;
        public const uint Int16Vec3NV = 0x8fe6;
        public const uint Int16Vec4NV = 0x8fe7;
        public const uint Int64NV = 0x140e;
        public const uint Int64Vec2NV = 0x8fe9;
        public const uint Int64Vec3NV = 0x8fea;
        public const uint Int64Vec4NV = 0x8feb;
        public const uint Int8NV = 0x8fe0;
        public const uint Int8Vec2NV = 0x8fe1;
        public const uint Int8Vec3NV = 0x8fe2;
        public const uint Int8Vec4NV = 0x8fe3;
        public const uint IntensityEXT = 0x8049;
        public const uint IntensityFloat16APPLE = 0x881d;
        public const uint IntensityFloat16ATI = 0x881d;
        public const uint IntensityFloat32APPLE = 0x8817;
        public const uint IntensityFloat32ATI = 0x8817;
        public const uint IntensitySnorm = 0x9013;
        public const uint Intensity12EXT = 0x804c;
        public const uint Intensity16EXT = 0x804d;
        public const uint Intensity16Snorm = 0x901b;
        public const uint Intensity16fARB = 0x881d;
        public const uint Intensity16iEXT = 0x8d8b;
        public const uint Intensity16uiEXT = 0x8d79;
        public const uint Intensity32fARB = 0x8817;
        public const uint Intensity32iEXT = 0x8d85;
        public const uint Intensity32uiEXT = 0x8d73;
        public const uint Intensity4EXT = 0x804a;
        public const uint Intensity8EXT = 0x804b;
        public const uint Intensity8Snorm = 0x9017;
        public const uint Intensity8iEXT = 0x8d91;
        public const uint Intensity8uiEXT = 0x8d7f;
        public const uint InterlaceOml = 0x8980;
        public const uint InterlaceReadIngr = 0x8568;
        public const uint InterlaceReadOml = 0x8981;
        public const uint InterlaceSGIX = 0x8094;
        public const uint InterleavedAttribs = 0x8c8c;
        public const uint InterleavedAttribsEXT = 0x8c8c;
        public const uint InterleavedAttribsNV = 0x8c8c;
        public const uint InternalformatAlphaSize = 0x8274;
        public const uint InternalformatAlphaType = 0x827b;
        public const uint InternalformatBlueSize = 0x8273;
        public const uint InternalformatBlueType = 0x827a;
        public const uint InternalformatDepthSize = 0x8275;
        public const uint InternalformatDepthType = 0x827c;
        public const uint InternalformatGreenSize = 0x8272;
        public const uint InternalformatGreenType = 0x8279;
        public const uint InternalformatPreferred = 0x8270;
        public const uint InternalformatRedSize = 0x8271;
        public const uint InternalformatRedType = 0x8278;
        public const uint InternalformatSharedSize = 0x8277;
        public const uint InternalformatStencilSize = 0x8276;
        public const uint InternalformatStencilType = 0x827d;
        public const uint InternalformatSupported = 0x826f;
        public const uint InvalidEnum = 0x500;
        public const uint InvalidFramebufferOperation = 0x506;
        public const uint InvalidFramebufferOperationEXT = 0x506;
        public const uint InvalidFramebufferOperationOES = 0x506;
        public const uint InvalidOperation = 0x502;
        public const uint InvalidValue = 0x501;
        public const uint InvariantDatatypeEXT = 0x87eb;
        public const uint InvariantEXT = 0x87c2;
        public const uint InvariantValueEXT = 0x87ea;
        public const uint InverseNV = 0x862b;
        public const uint InverseTransposeNV = 0x862d;
        public const uint Invert = 0x150a;
        public const uint InvertOvgNV = 0x92b4;
        public const uint InvertRgbNV = 0x92a3;
        public const uint InvertedScreenWRend = 0x8491;
        public const uint IrInstrument1SGIX = 0x817f;
        public const uint IsPerPatch = 0x92e7;
        public const uint IsPerPatchEXT = 0x92e7;
        public const uint IsRowMajor = 0x9300;
        public const uint Isolines = 0x8e7a;
        public const uint IsolinesEXT = 0x8e7a;
        public const uint IuiN3fV2fEXT = 0x81af;
        public const uint IuiN3fV3fEXT = 0x81b0;
        public const uint IuiV2fEXT = 0x81ad;
        public const uint IuiV3fEXT = 0x81ae;
        public const uint Keep = 0x1e00;
        public const uint LastVertexConvention = 0x8e4e;
        public const uint LastVertexConventionEXT = 0x8e4e;
        public const uint LastVideoCaptureStatusNV = 0x9027;
        public const uint LayerNV = 0x8daa;
        public const uint LayerProvokingVertex = 0x825e;
        public const uint LayerProvokingVertexEXT = 0x825e;
        public const uint Left = 0x406;
        public const uint Lequal = 0x203;
        public const uint LerpATI = 0x8969;
        public const uint Less = 0x201;
        public const uint LightEnvModeSGIX = 0x8407;
        public const uint LightModelColorControlEXT = 0x81f8;
        public const uint LightModelSpecularVectorAPPLE = 0x85b0;
        public const uint LightenKHR = 0x9298;
        public const uint LightenNV = 0x9298;
        public const uint Line = 0x1b01;
        public const uint LineLoop = 0x2;
        public const uint LineSmooth = 0xb20;
        public const uint LineSmoothHint = 0xc52;
        public const uint LineStrip = 0x3;
        public const uint LineStripAdjacency = 0xb;
        public const uint LineStripAdjacencyARB = 0xb;
        public const uint LineStripAdjacencyEXT = 0xb;
        public const uint LineWidth = 0xb21;
        public const uint LineWidthGranularity = 0xb23;
        public const uint LineWidthRange = 0xb22;
        public const uint Linear = 0x2601;
        public const uint LinearClipmapLinearSGIX = 0x8170;
        public const uint LinearClipmapNearestSGIX = 0x844f;
        public const uint LinearDetailAlphaSGIS = 0x8098;
        public const uint LinearDetailColorSGIS = 0x8099;
        public const uint LinearDetailSGIS = 0x8097;
        public const uint LinearMipmapLinear = 0x2703;
        public const uint LinearMipmapNearest = 0x2701;
        public const uint LinearSharpenAlphaSGIS = 0x80ae;
        public const uint LinearSharpenColorSGIS = 0x80af;
        public const uint LinearSharpenSGIS = 0x80ad;
        public const uint LinearburnNV = 0x92a5;
        public const uint LineardodgeNV = 0x92a4;
        public const uint LinearlightNV = 0x92a7;
        public const uint Lines = 0x1;
        public const uint LinesAdjacency = 0xa;
        public const uint LinesAdjacencyARB = 0xa;
        public const uint LinesAdjacencyEXT = 0xa;
        public const uint LinkStatus = 0x8b82;
        public const uint ListPrioritySGIX = 0x8182;
        public const uint LoBiasNV = 0x8715;
        public const uint LoScaleNV = 0x870f;
        public const uint LocalConstantDatatypeEXT = 0x87ed;
        public const uint LocalConstantEXT = 0x87c3;
        public const uint LocalConstantValueEXT = 0x87ec;
        public const uint LocalEXT = 0x87c4;
        public const uint Location = 0x930e;
        public const uint LocationComponent = 0x934a;
        public const uint LocationIndex = 0x930f;
        public const uint LogicOpMode = 0xbf0;
        public const uint LoseContextOnResetARB = 0x8252;
        public const uint LoseContextOnResetEXT = 0x8252;
        public const uint LowFloat = 0x8df0;
        public const uint LowInt = 0x8df3;
        public const uint LowerLeft = 0x8ca1;
        public const uint LuminanceAlphaFloat16APPLE = 0x881f;
        public const uint LuminanceAlphaFloat16ATI = 0x881f;
        public const uint LuminanceAlphaFloat32APPLE = 0x8819;
        public const uint LuminanceAlphaFloat32ATI = 0x8819;
        public const uint LuminanceAlphaIntegerEXT = 0x8d9d;
        public const uint LuminanceAlphaSnorm = 0x9012;
        public const uint LuminanceAlpha16fARB = 0x881f;
        public const uint LuminanceAlpha16fEXT = 0x881f;
        public const uint LuminanceAlpha16iEXT = 0x8d8d;
        public const uint LuminanceAlpha16uiEXT = 0x8d7b;
        public const uint LuminanceAlpha32fARB = 0x8819;
        public const uint LuminanceAlpha32fEXT = 0x8819;
        public const uint LuminanceAlpha32iEXT = 0x8d87;
        public const uint LuminanceAlpha32uiEXT = 0x8d75;
        public const uint LuminanceAlpha8iEXT = 0x8d93;
        public const uint LuminanceAlpha8uiEXT = 0x8d81;
        public const uint LuminanceFloat16APPLE = 0x881e;
        public const uint LuminanceFloat16ATI = 0x881e;
        public const uint LuminanceFloat32APPLE = 0x8818;
        public const uint LuminanceFloat32ATI = 0x8818;
        public const uint LuminanceIntegerEXT = 0x8d9c;
        public const uint LuminanceSnorm = 0x9011;
        public const uint Luminance12Alpha12EXT = 0x8047;
        public const uint Luminance12Alpha4EXT = 0x8046;
        public const uint Luminance12EXT = 0x8041;
        public const uint Luminance16Alpha16EXT = 0x8048;
        public const uint Luminance16Alpha16Snorm = 0x901a;
        public const uint Luminance16EXT = 0x8042;
        public const uint Luminance16Snorm = 0x9019;
        public const uint Luminance16fARB = 0x881e;
        public const uint Luminance16fEXT = 0x881e;
        public const uint Luminance16iEXT = 0x8d8c;
        public const uint Luminance16uiEXT = 0x8d7a;
        public const uint Luminance32fARB = 0x8818;
        public const uint Luminance32fEXT = 0x8818;
        public const uint Luminance32iEXT = 0x8d86;
        public const uint Luminance32uiEXT = 0x8d74;
        public const uint Luminance4Alpha4EXT = 0x8043;
        public const uint Luminance4Alpha4OES = 0x8043;
        public const uint Luminance4EXT = 0x803f;
        public const uint Luminance6Alpha2EXT = 0x8044;
        public const uint Luminance8Alpha8EXT = 0x8045;
        public const uint Luminance8Alpha8OES = 0x8045;
        public const uint Luminance8Alpha8Snorm = 0x9016;
        public const uint Luminance8EXT = 0x8040;
        public const uint Luminance8OES = 0x8040;
        public const uint Luminance8Snorm = 0x9015;
        public const uint Luminance8iEXT = 0x8d92;
        public const uint Luminance8uiEXT = 0x8d80;
        public const uint MadATI = 0x8968;
        public const uint MagnitudeBiasNV = 0x8718;
        public const uint MagnitudeScaleNV = 0x8712;
        public const uint MajorVersion = 0x821b;
        public const uint MaliProgramBinaryArm = 0x8f61;
        public const uint MaliShaderBinaryArm = 0x8f60;
        public const uint ManualGenerateMipmap = 0x8294;
        public const uint MapAttribUOrderNV = 0x86c3;
        public const uint MapAttribVOrderNV = 0x86c4;
        public const uint MapTessellationNV = 0x86c2;
        public const uint Map1BinormalEXT = 0x8446;
        public const uint Map1TangentEXT = 0x8444;
        public const uint Map1VertexAttrib04NV = 0x8660;
        public const uint Map1VertexAttrib14NV = 0x8661;
        public const uint Map1VertexAttrib104NV = 0x866a;
        public const uint Map1VertexAttrib114NV = 0x866b;
        public const uint Map1VertexAttrib124NV = 0x866c;
        public const uint Map1VertexAttrib134NV = 0x866d;
        public const uint Map1VertexAttrib144NV = 0x866e;
        public const uint Map1VertexAttrib154NV = 0x866f;
        public const uint Map1VertexAttrib24NV = 0x8662;
        public const uint Map1VertexAttrib34NV = 0x8663;
        public const uint Map1VertexAttrib44NV = 0x8664;
        public const uint Map1VertexAttrib54NV = 0x8665;
        public const uint Map1VertexAttrib64NV = 0x8666;
        public const uint Map1VertexAttrib74NV = 0x8667;
        public const uint Map1VertexAttrib84NV = 0x8668;
        public const uint Map1VertexAttrib94NV = 0x8669;
        public const uint Map2BinormalEXT = 0x8447;
        public const uint Map2TangentEXT = 0x8445;
        public const uint Map2VertexAttrib04NV = 0x8670;
        public const uint Map2VertexAttrib14NV = 0x8671;
        public const uint Map2VertexAttrib104NV = 0x867a;
        public const uint Map2VertexAttrib114NV = 0x867b;
        public const uint Map2VertexAttrib124NV = 0x867c;
        public const uint Map2VertexAttrib134NV = 0x867d;
        public const uint Map2VertexAttrib144NV = 0x867e;
        public const uint Map2VertexAttrib154NV = 0x867f;
        public const uint Map2VertexAttrib24NV = 0x8672;
        public const uint Map2VertexAttrib34NV = 0x8673;
        public const uint Map2VertexAttrib44NV = 0x8674;
        public const uint Map2VertexAttrib54NV = 0x8675;
        public const uint Map2VertexAttrib64NV = 0x8676;
        public const uint Map2VertexAttrib74NV = 0x8677;
        public const uint Map2VertexAttrib84NV = 0x8678;
        public const uint Map2VertexAttrib94NV = 0x8679;
        public const uint MaterialSideHintPGI = 0x1a22c;
        public const uint MatrixEXT = 0x87c0;
        public const uint MatrixIndexArrayARB = 0x8844;
        public const uint MatrixIndexArrayBufferBindingOES = 0x8b9e;
        public const uint MatrixIndexArrayOES = 0x8844;
        public const uint MatrixIndexArrayPointerARB = 0x8849;
        public const uint MatrixIndexArrayPointerOES = 0x8849;
        public const uint MatrixIndexArraySizeARB = 0x8846;
        public const uint MatrixIndexArraySizeOES = 0x8846;
        public const uint MatrixIndexArrayStrideARB = 0x8848;
        public const uint MatrixIndexArrayStrideOES = 0x8848;
        public const uint MatrixIndexArrayTypeARB = 0x8847;
        public const uint MatrixIndexArrayTypeOES = 0x8847;
        public const uint MatrixPaletteARB = 0x8840;
        public const uint MatrixPaletteOES = 0x8840;
        public const uint MatrixStride = 0x92ff;
        public const uint Matrix0ARB = 0x88c0;
        public const uint Matrix0NV = 0x8630;
        public const uint Matrix1ARB = 0x88c1;
        public const uint Matrix1NV = 0x8631;
        public const uint Matrix10ARB = 0x88ca;
        public const uint Matrix11ARB = 0x88cb;
        public const uint Matrix12ARB = 0x88cc;
        public const uint Matrix13ARB = 0x88cd;
        public const uint Matrix14ARB = 0x88ce;
        public const uint Matrix15ARB = 0x88cf;
        public const uint Matrix16ARB = 0x88d0;
        public const uint Matrix17ARB = 0x88d1;
        public const uint Matrix18ARB = 0x88d2;
        public const uint Matrix19ARB = 0x88d3;
        public const uint Matrix2ARB = 0x88c2;
        public const uint Matrix2NV = 0x8632;
        public const uint Matrix20ARB = 0x88d4;
        public const uint Matrix21ARB = 0x88d5;
        public const uint Matrix22ARB = 0x88d6;
        public const uint Matrix23ARB = 0x88d7;
        public const uint Matrix24ARB = 0x88d8;
        public const uint Matrix25ARB = 0x88d9;
        public const uint Matrix26ARB = 0x88da;
        public const uint Matrix27ARB = 0x88db;
        public const uint Matrix28ARB = 0x88dc;
        public const uint Matrix29ARB = 0x88dd;
        public const uint Matrix3ARB = 0x88c3;
        public const uint Matrix3NV = 0x8633;
        public const uint Matrix30ARB = 0x88de;
        public const uint Matrix31ARB = 0x88df;
        public const uint Matrix4ARB = 0x88c4;
        public const uint Matrix4NV = 0x8634;
        public const uint Matrix5ARB = 0x88c5;
        public const uint Matrix5NV = 0x8635;
        public const uint Matrix6ARB = 0x88c6;
        public const uint Matrix6NV = 0x8636;
        public const uint Matrix7ARB = 0x88c7;
        public const uint Matrix7NV = 0x8637;
        public const uint Matrix8ARB = 0x88c8;
        public const uint Matrix9ARB = 0x88c9;
        public const uint Max = 0x8008;
        public const uint Max3dTextureSize = 0x8073;
        public const uint Max3dTextureSizeEXT = 0x8073;
        public const uint Max3dTextureSizeOES = 0x8073;
        public const uint Max4dTextureSizeSGIS = 0x8138;
        public const uint MaxActiveLightsSGIX = 0x8405;
        public const uint MaxArrayTextureLayers = 0x88ff;
        public const uint MaxArrayTextureLayersEXT = 0x88ff;
        public const uint MaxAsyncDrawPixelsSGIX = 0x8360;
        public const uint MaxAsyncHistogramSGIX = 0x832d;
        public const uint MaxAsyncReadPixelsSGIX = 0x8361;
        public const uint MaxAsyncTexImageSGIX = 0x835f;
        public const uint MaxAtomicCounterBufferBindings = 0x92dc;
        public const uint MaxAtomicCounterBufferSize = 0x92d8;
        public const uint MaxBindableUniformSizeEXT = 0x8ded;
        public const uint MaxClipDistances = 0xd32;
        public const uint MaxClipPlanesIMG = 0xd32;
        public const uint MaxClipmapDepthSGIX = 0x8177;
        public const uint MaxClipmapVirtualDepthSGIX = 0x8178;
        public const uint MaxColorAttachments = 0x8cdf;
        public const uint MaxColorAttachmentsEXT = 0x8cdf;
        public const uint MaxColorAttachmentsNV = 0x8cdf;
        public const uint MaxColorMatrixStackDepth = 0x80b3;
        public const uint MaxColorMatrixStackDepthSGI = 0x80b3;
        public const uint MaxColorTextureSamples = 0x910e;
        public const uint MaxCombinedAtomicCounterBuffers = 0x92d1;
        public const uint MaxCombinedAtomicCounters = 0x92d7;
        public const uint MaxCombinedComputeUniformComponents = 0x8266;
        public const uint MaxCombinedDimensions = 0x8282;
        public const uint MaxCombinedFragmentUniformComponents = 0x8a33;
        public const uint MaxCombinedGeometryUniformComponents = 0x8a32;
        public const uint MaxCombinedGeometryUniformComponentsEXT = 0x8a32;
        public const uint MaxCombinedImageUniforms = 0x90cf;
        public const uint MaxCombinedImageUnitsAndFragmentOutputs = 0x8f39;
        public const uint MaxCombinedImageUnitsAndFragmentOutputsEXT = 0x8f39;
        public const uint MaxCombinedShaderOutputResources = 0x8f39;
        public const uint MaxCombinedShaderStorageBlocks = 0x90dc;
        public const uint MaxCombinedTessControlUniformComponents = 0x8e1e;
        public const uint MaxCombinedTessControlUniformComponentsEXT = 0x8e1e;
        public const uint MaxCombinedTessEvaluationUniformComponents = 0x8e1f;
        public const uint MaxCombinedTessEvaluationUniformComponentsEXT = 0x8e1f;
        public const uint MaxCombinedTextureImageUnits = 0x8b4d;
        public const uint MaxCombinedTextureImageUnitsARB = 0x8b4d;
        public const uint MaxCombinedUniformBlocks = 0x8a2e;
        public const uint MaxCombinedVertexUniformComponents = 0x8a31;
        public const uint MaxComputeAtomicCounterBuffers = 0x8264;
        public const uint MaxComputeAtomicCounters = 0x8265;
        public const uint MaxComputeFixedGroupInvocationsARB = 0x90eb;
        public const uint MaxComputeFixedGroupSizeARB = 0x91bf;
        public const uint MaxComputeImageUniforms = 0x91bd;
        public const uint MaxComputeShaderStorageBlocks = 0x90db;
        public const uint MaxComputeSharedMemorySize = 0x8262;
        public const uint MaxComputeTextureImageUnits = 0x91bc;
        public const uint MaxComputeUniformBlocks = 0x91bb;
        public const uint MaxComputeUniformComponents = 0x8263;
        public const uint MaxComputeVariableGroupInvocationsARB = 0x9344;
        public const uint MaxComputeVariableGroupSizeARB = 0x9345;
        public const uint MaxComputeWorkGroupCount = 0x91be;
        public const uint MaxComputeWorkGroupInvocations = 0x90eb;
        public const uint MaxComputeWorkGroupSize = 0x91bf;
        public const uint MaxConvolutionHeight = 0x801b;
        public const uint MaxConvolutionHeightEXT = 0x801b;
        public const uint MaxConvolutionWidth = 0x801a;
        public const uint MaxConvolutionWidthEXT = 0x801a;
        public const uint MaxCubeMapTextureSize = 0x851c;
        public const uint MaxCubeMapTextureSizeARB = 0x851c;
        public const uint MaxCubeMapTextureSizeEXT = 0x851c;
        public const uint MaxCubeMapTextureSizeOES = 0x851c;
        public const uint MaxDebugGroupStackDepth = 0x826c;
        public const uint MaxDebugGroupStackDepthKHR = 0x826c;
        public const uint MaxDebugLoggedMessages = 0x9144;
        public const uint MaxDebugLoggedMessagesAMD = 0x9144;
        public const uint MaxDebugLoggedMessagesARB = 0x9144;
        public const uint MaxDebugLoggedMessagesKHR = 0x9144;
        public const uint MaxDebugMessageLength = 0x9143;
        public const uint MaxDebugMessageLengthAMD = 0x9143;
        public const uint MaxDebugMessageLengthARB = 0x9143;
        public const uint MaxDebugMessageLengthKHR = 0x9143;
        public const uint MaxDeep3dTextureDepthNV = 0x90d1;
        public const uint MaxDeep3dTextureWidthHeightNV = 0x90d0;
        public const uint MaxDeformationOrderSGIX = 0x8197;
        public const uint MaxDepth = 0x8280;
        public const uint MaxDepthTextureSamples = 0x910f;
        public const uint MaxDrawBuffers = 0x8824;
        public const uint MaxDrawBuffersARB = 0x8824;
        public const uint MaxDrawBuffersATI = 0x8824;
        public const uint MaxDrawBuffersEXT = 0x8824;
        public const uint MaxDrawBuffersNV = 0x8824;
        public const uint MaxDualSourceDrawBuffers = 0x88fc;
        public const uint MaxElementIndex = 0x8d6b;
        public const uint MaxElementsIndices = 0x80e9;
        public const uint MaxElementsIndicesEXT = 0x80e9;
        public const uint MaxElementsVertices = 0x80e8;
        public const uint MaxElementsVerticesEXT = 0x80e8;
        public const uint MaxEXT = 0x8008;
        public const uint MaxFogFuncPointsSGIS = 0x812c;
        public const uint MaxFragmentAtomicCounterBuffers = 0x92d0;
        public const uint MaxFragmentAtomicCounters = 0x92d6;
        public const uint MaxFragmentBindableUniformsEXT = 0x8de3;
        public const uint MaxFragmentImageUniforms = 0x90ce;
        public const uint MaxFragmentInputComponents = 0x9125;
        public const uint MaxFragmentInterpolationOffset = 0x8e5c;
        public const uint MaxFragmentInterpolationOffsetNV = 0x8e5c;
        public const uint MaxFragmentInterpolationOffsetOES = 0x8e5c;
        public const uint MaxFragmentLightsSGIX = 0x8404;
        public const uint MaxFragmentProgramLocalParametersNV = 0x8868;
        public const uint MaxFragmentShaderStorageBlocks = 0x90da;
        public const uint MaxFragmentUniformBlocks = 0x8a2d;
        public const uint MaxFragmentUniformComponents = 0x8b49;
        public const uint MaxFragmentUniformComponentsARB = 0x8b49;
        public const uint MaxFragmentUniformVectors = 0x8dfd;
        public const uint MaxFramebufferHeight = 0x9316;
        public const uint MaxFramebufferLayers = 0x9317;
        public const uint MaxFramebufferLayersEXT = 0x9317;
        public const uint MaxFramebufferSamples = 0x9318;
        public const uint MaxFramebufferWidth = 0x9315;
        public const uint MaxFramezoomFactorSGIX = 0x818d;
        public const uint MaxGeneralCombinersNV = 0x854d;
        public const uint MaxGeometryAtomicCounterBuffers = 0x92cf;
        public const uint MaxGeometryAtomicCounterBuffersEXT = 0x92cf;
        public const uint MaxGeometryAtomicCounters = 0x92d5;
        public const uint MaxGeometryAtomicCountersEXT = 0x92d5;
        public const uint MaxGeometryBindableUniformsEXT = 0x8de4;
        public const uint MaxGeometryImageUniforms = 0x90cd;
        public const uint MaxGeometryImageUniformsEXT = 0x90cd;
        public const uint MaxGeometryInputComponents = 0x9123;
        public const uint MaxGeometryInputComponentsEXT = 0x9123;
        public const uint MaxGeometryOutputComponents = 0x9124;
        public const uint MaxGeometryOutputComponentsEXT = 0x9124;
        public const uint MaxGeometryOutputVertices = 0x8de0;
        public const uint MaxGeometryOutputVerticesARB = 0x8de0;
        public const uint MaxGeometryOutputVerticesEXT = 0x8de0;
        public const uint MaxGeometryProgramInvocationsNV = 0x8e5a;
        public const uint MaxGeometryShaderInvocations = 0x8e5a;
        public const uint MaxGeometryShaderInvocationsEXT = 0x8e5a;
        public const uint MaxGeometryShaderStorageBlocks = 0x90d7;
        public const uint MaxGeometryShaderStorageBlocksEXT = 0x90d7;
        public const uint MaxGeometryTextureImageUnits = 0x8c29;
        public const uint MaxGeometryTextureImageUnitsARB = 0x8c29;
        public const uint MaxGeometryTextureImageUnitsEXT = 0x8c29;
        public const uint MaxGeometryTotalOutputComponents = 0x8de1;
        public const uint MaxGeometryTotalOutputComponentsARB = 0x8de1;
        public const uint MaxGeometryTotalOutputComponentsEXT = 0x8de1;
        public const uint MaxGeometryUniformBlocks = 0x8a2c;
        public const uint MaxGeometryUniformBlocksEXT = 0x8a2c;
        public const uint MaxGeometryUniformComponents = 0x8ddf;
        public const uint MaxGeometryUniformComponentsARB = 0x8ddf;
        public const uint MaxGeometryUniformComponentsEXT = 0x8ddf;
        public const uint MaxGeometryVaryingComponentsARB = 0x8ddd;
        public const uint MaxGeometryVaryingComponentsEXT = 0x8ddd;
        public const uint MaxHeight = 0x827f;
        public const uint MaxImageSamples = 0x906d;
        public const uint MaxImageSamplesEXT = 0x906d;
        public const uint MaxImageUnits = 0x8f38;
        public const uint MaxImageUnitsEXT = 0x8f38;
        public const uint MaxIntegerSamples = 0x9110;
        public const uint MaxLabelLength = 0x82e8;
        public const uint MaxLabelLengthKHR = 0x82e8;
        public const uint MaxLayers = 0x8281;
        public const uint MaxMapTessellationNV = 0x86d6;
        public const uint MaxMatrixPaletteStackDepthARB = 0x8841;
        public const uint MaxMultisampleCoverageModesNV = 0x8e11;
        public const uint MaxMultiviewBuffersEXT = 0x90f2;
        public const uint MaxNameLength = 0x92f6;
        public const uint MaxNumActiveVariables = 0x92f7;
        public const uint MaxNumCompatibleSubroutines = 0x92f8;
        public const uint MaxOptimizedVertexShaderInstructionsEXT = 0x87ca;
        public const uint MaxOptimizedVertexShaderInvariantsEXT = 0x87cd;
        public const uint MaxOptimizedVertexShaderLocalConstantsEXT = 0x87cc;
        public const uint MaxOptimizedVertexShaderLocalsEXT = 0x87ce;
        public const uint MaxOptimizedVertexShaderVariantsEXT = 0x87cb;
        public const uint MaxPaletteMatricesARB = 0x8842;
        public const uint MaxPaletteMatricesOES = 0x8842;
        public const uint MaxPatchVertices = 0x8e7d;
        public const uint MaxPatchVerticesEXT = 0x8e7d;
        public const uint MaxPixelTransform2dStackDepthEXT = 0x8337;
        public const uint MaxPnTrianglesTesselationLevelATI = 0x87f1;
        public const uint MaxProgramAddressRegistersARB = 0x88b1;
        public const uint MaxProgramAluInstructionsARB = 0x880b;
        public const uint MaxProgramAttribComponentsNV = 0x8908;
        public const uint MaxProgramAttribsARB = 0x88ad;
        public const uint MaxProgramCallDepthNV = 0x88f5;
        public const uint MaxProgramEnvParametersARB = 0x88b5;
        public const uint MaxProgramExecInstructionsNV = 0x88f4;
        public const uint MaxProgramGenericAttribsNV = 0x8da5;
        public const uint MaxProgramGenericResultsNV = 0x8da6;
        public const uint MaxProgramIfDepthNV = 0x88f6;
        public const uint MaxProgramInstructionsARB = 0x88a1;
        public const uint MaxProgramLocalParametersARB = 0x88b4;
        public const uint MaxProgramLoopCountNV = 0x88f8;
        public const uint MaxProgramLoopDepthNV = 0x88f7;
        public const uint MaxProgramMatricesARB = 0x862f;
        public const uint MaxProgramMatrixStackDepthARB = 0x862e;
        public const uint MaxProgramNativeAddressRegistersARB = 0x88b3;
        public const uint MaxProgramNativeAluInstructionsARB = 0x880e;
        public const uint MaxProgramNativeAttribsARB = 0x88af;
        public const uint MaxProgramNativeInstructionsARB = 0x88a3;
        public const uint MaxProgramNativeParametersARB = 0x88ab;
        public const uint MaxProgramNativeTemporariesARB = 0x88a7;
        public const uint MaxProgramNativeTexIndirectionsARB = 0x8810;
        public const uint MaxProgramNativeTexInstructionsARB = 0x880f;
        public const uint MaxProgramOutputVerticesNV = 0x8c27;
        public const uint MaxProgramParameterBufferBindingsNV = 0x8da0;
        public const uint MaxProgramParameterBufferSizeNV = 0x8da1;
        public const uint MaxProgramParametersARB = 0x88a9;
        public const uint MaxProgramPatchAttribsNV = 0x86d8;
        public const uint MaxProgramResultComponentsNV = 0x8909;
        public const uint MaxProgramSubroutineNumNV = 0x8f45;
        public const uint MaxProgramSubroutineParametersNV = 0x8f44;
        public const uint MaxProgramTemporariesARB = 0x88a5;
        public const uint MaxProgramTexIndirectionsARB = 0x880d;
        public const uint MaxProgramTexInstructionsARB = 0x880c;
        public const uint MaxProgramTexelOffset = 0x8905;
        public const uint MaxProgramTexelOffsetEXT = 0x8905;
        public const uint MaxProgramTexelOffsetNV = 0x8905;
        public const uint MaxProgramTextureGatherComponentsARB = 0x8f9f;
        public const uint MaxProgramTextureGatherOffset = 0x8e5f;
        public const uint MaxProgramTextureGatherOffsetARB = 0x8e5f;
        public const uint MaxProgramTextureGatherOffsetNV = 0x8e5f;
        public const uint MaxProgramTotalOutputComponentsNV = 0x8c28;
        public const uint MaxRationalEvalOrderNV = 0x86d7;
        public const uint MaxRectangleTextureSize = 0x84f8;
        public const uint MaxRectangleTextureSizeARB = 0x84f8;
        public const uint MaxRectangleTextureSizeNV = 0x84f8;
        public const uint MaxRenderbufferSize = 0x84e8;
        public const uint MaxRenderbufferSizeEXT = 0x84e8;
        public const uint MaxRenderbufferSizeOES = 0x84e8;
        public const uint MaxSampleMaskWords = 0x8e59;
        public const uint MaxSampleMaskWordsNV = 0x8e59;
        public const uint MaxSamples = 0x8d57;
        public const uint MaxSamplesAngle = 0x8d57;
        public const uint MaxSamplesAPPLE = 0x8d57;
        public const uint MaxSamplesEXT = 0x8d57;
        public const uint MaxSamplesIMG = 0x9135;
        public const uint MaxSamplesNV = 0x8d57;
        public const uint MaxServerWaitTimeout = 0x9111;
        public const uint MaxServerWaitTimeoutAPPLE = 0x9111;
        public const uint MaxShaderBufferAddressNV = 0x8f35;
        public const uint MaxShaderPixelLocalStorageFastSizeEXT = 0x8f63;
        public const uint MaxShaderPixelLocalStorageSizeEXT = 0x8f67;
        public const uint MaxShaderStorageBlockSize = 0x90de;
        public const uint MaxShaderStorageBufferBindings = 0x90dd;
        public const uint MaxShininessNV = 0x8504;
        public const uint MaxSparse3dTextureSizeAMD = 0x9199;
        public const uint MaxSparse3dTextureSizeARB = 0x9199;
        public const uint MaxSparseArrayTextureLayers = 0x919a;
        public const uint MaxSparseArrayTextureLayersARB = 0x919a;
        public const uint MaxSparseTextureSizeAMD = 0x9198;
        public const uint MaxSparseTextureSizeARB = 0x9198;
        public const uint MaxSpotExponentNV = 0x8505;
        public const uint MaxSubroutineUniformLocations = 0x8de8;
        public const uint MaxSubroutines = 0x8de7;
        public const uint MaxTessControlAtomicCounterBuffers = 0x92cd;
        public const uint MaxTessControlAtomicCounterBuffersEXT = 0x92cd;
        public const uint MaxTessControlAtomicCounters = 0x92d3;
        public const uint MaxTessControlAtomicCountersEXT = 0x92d3;
        public const uint MaxTessControlImageUniforms = 0x90cb;
        public const uint MaxTessControlImageUniformsEXT = 0x90cb;
        public const uint MaxTessControlInputComponents = 0x886c;
        public const uint MaxTessControlInputComponentsEXT = 0x886c;
        public const uint MaxTessControlOutputComponents = 0x8e83;
        public const uint MaxTessControlOutputComponentsEXT = 0x8e83;
        public const uint MaxTessControlShaderStorageBlocks = 0x90d8;
        public const uint MaxTessControlShaderStorageBlocksEXT = 0x90d8;
        public const uint MaxTessControlTextureImageUnits = 0x8e81;
        public const uint MaxTessControlTextureImageUnitsEXT = 0x8e81;
        public const uint MaxTessControlTotalOutputComponents = 0x8e85;
        public const uint MaxTessControlTotalOutputComponentsEXT = 0x8e85;
        public const uint MaxTessControlUniformBlocks = 0x8e89;
        public const uint MaxTessControlUniformBlocksEXT = 0x8e89;
        public const uint MaxTessControlUniformComponents = 0x8e7f;
        public const uint MaxTessControlUniformComponentsEXT = 0x8e7f;
        public const uint MaxTessEvaluationAtomicCounterBuffers = 0x92ce;
        public const uint MaxTessEvaluationAtomicCounterBuffersEXT = 0x92ce;
        public const uint MaxTessEvaluationAtomicCounters = 0x92d4;
        public const uint MaxTessEvaluationAtomicCountersEXT = 0x92d4;
        public const uint MaxTessEvaluationImageUniforms = 0x90cc;
        public const uint MaxTessEvaluationImageUniformsEXT = 0x90cc;
        public const uint MaxTessEvaluationInputComponents = 0x886d;
        public const uint MaxTessEvaluationInputComponentsEXT = 0x886d;
        public const uint MaxTessEvaluationOutputComponents = 0x8e86;
        public const uint MaxTessEvaluationOutputComponentsEXT = 0x8e86;
        public const uint MaxTessEvaluationShaderStorageBlocks = 0x90d9;
        public const uint MaxTessEvaluationShaderStorageBlocksEXT = 0x90d9;
        public const uint MaxTessEvaluationTextureImageUnits = 0x8e82;
        public const uint MaxTessEvaluationTextureImageUnitsEXT = 0x8e82;
        public const uint MaxTessEvaluationUniformBlocks = 0x8e8a;
        public const uint MaxTessEvaluationUniformBlocksEXT = 0x8e8a;
        public const uint MaxTessEvaluationUniformComponents = 0x8e80;
        public const uint MaxTessEvaluationUniformComponentsEXT = 0x8e80;
        public const uint MaxTessGenLevel = 0x8e7e;
        public const uint MaxTessGenLevelEXT = 0x8e7e;
        public const uint MaxTessPatchComponents = 0x8e84;
        public const uint MaxTessPatchComponentsEXT = 0x8e84;
        public const uint MaxTextureBufferSize = 0x8c2b;
        public const uint MaxTextureBufferSizeARB = 0x8c2b;
        public const uint MaxTextureBufferSizeEXT = 0x8c2b;
        public const uint MaxTextureCoordsARB = 0x8871;
        public const uint MaxTextureCoordsNV = 0x8871;
        public const uint MaxTextureImageUnits = 0x8872;
        public const uint MaxTextureImageUnitsARB = 0x8872;
        public const uint MaxTextureImageUnitsNV = 0x8872;
        public const uint MaxTextureLodBias = 0x84fd;
        public const uint MaxTextureLodBiasEXT = 0x84fd;
        public const uint MaxTextureMaxAnisotropyEXT = 0x84ff;
        public const uint MaxTextureSize = 0xd33;
        public const uint MaxTextureUnitsARB = 0x84e2;
        public const uint MaxTrackMatricesNV = 0x862f;
        public const uint MaxTrackMatrixStackDepthNV = 0x862e;
        public const uint MaxTransformFeedbackBuffers = 0x8e70;
        public const uint MaxTransformFeedbackInterleavedComponents = 0x8c8a;
        public const uint MaxTransformFeedbackInterleavedComponentsEXT = 0x8c8a;
        public const uint MaxTransformFeedbackInterleavedComponentsNV = 0x8c8a;
        public const uint MaxTransformFeedbackSeparateAttribs = 0x8c8b;
        public const uint MaxTransformFeedbackSeparateAttribsEXT = 0x8c8b;
        public const uint MaxTransformFeedbackSeparateAttribsNV = 0x8c8b;
        public const uint MaxTransformFeedbackSeparateComponents = 0x8c80;
        public const uint MaxTransformFeedbackSeparateComponentsEXT = 0x8c80;
        public const uint MaxTransformFeedbackSeparateComponentsNV = 0x8c80;
        public const uint MaxUniformBlockSize = 0x8a30;
        public const uint MaxUniformBufferBindings = 0x8a2f;
        public const uint MaxUniformLocations = 0x826e;
        public const uint MaxVaryingComponents = 0x8b4b;
        public const uint MaxVaryingComponentsEXT = 0x8b4b;
        public const uint MaxVaryingFloats = 0x8b4b;
        public const uint MaxVaryingFloatsARB = 0x8b4b;
        public const uint MaxVaryingVectors = 0x8dfc;
        public const uint MaxVertexArrayRangeElementNV = 0x8520;
        public const uint MaxVertexAtomicCounterBuffers = 0x92cc;
        public const uint MaxVertexAtomicCounters = 0x92d2;
        public const uint MaxVertexAttribBindings = 0x82da;
        public const uint MaxVertexAttribRelativeOffset = 0x82d9;
        public const uint MaxVertexAttribStride = 0x82e5;
        public const uint MaxVertexAttribs = 0x8869;
        public const uint MaxVertexAttribsARB = 0x8869;
        public const uint MaxVertexBindableUniformsEXT = 0x8de2;
        public const uint MaxVertexHintPGI = 0x1a22d;
        public const uint MaxVertexImageUniforms = 0x90ca;
        public const uint MaxVertexOutputComponents = 0x9122;
        public const uint MaxVertexShaderInstructionsEXT = 0x87c5;
        public const uint MaxVertexShaderInvariantsEXT = 0x87c7;
        public const uint MaxVertexShaderLocalConstantsEXT = 0x87c8;
        public const uint MaxVertexShaderLocalsEXT = 0x87c9;
        public const uint MaxVertexShaderStorageBlocks = 0x90d6;
        public const uint MaxVertexShaderVariantsEXT = 0x87c6;
        public const uint MaxVertexStreams = 0x8e71;
        public const uint MaxVertexStreamsATI = 0x876b;
        public const uint MaxVertexTextureImageUnits = 0x8b4c;
        public const uint MaxVertexTextureImageUnitsARB = 0x8b4c;
        public const uint MaxVertexUniformBlocks = 0x8a2b;
        public const uint MaxVertexUniformComponents = 0x8b4a;
        public const uint MaxVertexUniformComponentsARB = 0x8b4a;
        public const uint MaxVertexUniformVectors = 0x8dfb;
        public const uint MaxVertexUnitsARB = 0x86a4;
        public const uint MaxVertexUnitsOES = 0x86a4;
        public const uint MaxVertexVaryingComponentsARB = 0x8dde;
        public const uint MaxVertexVaryingComponentsEXT = 0x8dde;
        public const uint MaxViewportDims = 0xd3a;
        public const uint MaxViewports = 0x825b;
        public const uint MaxWidth = 0x827e;
        public const uint MediumFloat = 0x8df1;
        public const uint MediumInt = 0x8df4;
        public const uint Min = 0x8007;
        public const uint MinEXT = 0x8007;
        public const uint MinFragmentInterpolationOffset = 0x8e5b;
        public const uint MinFragmentInterpolationOffsetNV = 0x8e5b;
        public const uint MinFragmentInterpolationOffsetOES = 0x8e5b;
        public const uint MinLodWarningAMD = 0x919c;
        public const uint MinMapBufferAlignment = 0x90bc;
        public const uint MinProgramTexelOffset = 0x8904;
        public const uint MinProgramTexelOffsetEXT = 0x8904;
        public const uint MinProgramTexelOffsetNV = 0x8904;
        public const uint MinProgramTextureGatherOffset = 0x8e5e;
        public const uint MinProgramTextureGatherOffsetARB = 0x8e5e;
        public const uint MinProgramTextureGatherOffsetNV = 0x8e5e;
        public const uint MinSampleShadingValue = 0x8c37;
        public const uint MinSampleShadingValueARB = 0x8c37;
        public const uint MinSampleShadingValueOES = 0x8c37;
        public const uint MinSparseLevelAMD = 0x919b;
        public const uint MinSparseLevelARB = 0x919b;
        public const uint Minmax = 0x802e;
        public const uint MinmaxEXT = 0x802e;
        public const uint MinmaxFormat = 0x802f;
        public const uint MinmaxFormatEXT = 0x802f;
        public const uint MinmaxSink = 0x8030;
        public const uint MinmaxSinkEXT = 0x8030;
        public const uint MinorVersion = 0x821c;
        public const uint MinusClampedNV = 0x92b3;
        public const uint MinusNV = 0x929f;
        public const uint Mipmap = 0x8293;
        public const uint MirrorClampATI = 0x8742;
        public const uint MirrorClampEXT = 0x8742;
        public const uint MirrorClampToBorderEXT = 0x8912;
        public const uint MirrorClampToEdge = 0x8743;
        public const uint MirrorClampToEdgeATI = 0x8743;
        public const uint MirrorClampToEdgeEXT = 0x8743;
        public const uint MirroredRepeat = 0x8370;
        public const uint MirroredRepeatARB = 0x8370;
        public const uint MirroredRepeatIBM = 0x8370;
        public const uint MirroredRepeatOES = 0x8370;
        public const uint MiterRevertNV = 0x90a7;
        public const uint MiterTruncateNV = 0x90a8;
        public const uint ModelviewMatrixFloatAsIntBitsOES = 0x898d;
        public const uint ModelviewProjectionNV = 0x8629;
        public const uint Modelview0ARB = 0x1700;
        public const uint Modelview0EXT = 0x1700;
        public const uint Modelview0MatrixEXT = 0xba6;
        public const uint Modelview0StackDepthEXT = 0xba3;
        public const uint Modelview1ARB = 0x850a;
        public const uint Modelview1EXT = 0x850a;
        public const uint Modelview1MatrixEXT = 0x8506;
        public const uint Modelview1StackDepthEXT = 0x8502;
        public const uint Modelview10ARB = 0x872a;
        public const uint Modelview11ARB = 0x872b;
        public const uint Modelview12ARB = 0x872c;
        public const uint Modelview13ARB = 0x872d;
        public const uint Modelview14ARB = 0x872e;
        public const uint Modelview15ARB = 0x872f;
        public const uint Modelview16ARB = 0x8730;
        public const uint Modelview17ARB = 0x8731;
        public const uint Modelview18ARB = 0x8732;
        public const uint Modelview19ARB = 0x8733;
        public const uint Modelview2ARB = 0x8722;
        public const uint Modelview20ARB = 0x8734;
        public const uint Modelview21ARB = 0x8735;
        public const uint Modelview22ARB = 0x8736;
        public const uint Modelview23ARB = 0x8737;
        public const uint Modelview24ARB = 0x8738;
        public const uint Modelview25ARB = 0x8739;
        public const uint Modelview26ARB = 0x873a;
        public const uint Modelview27ARB = 0x873b;
        public const uint Modelview28ARB = 0x873c;
        public const uint Modelview29ARB = 0x873d;
        public const uint Modelview3ARB = 0x8723;
        public const uint Modelview30ARB = 0x873e;
        public const uint Modelview31ARB = 0x873f;
        public const uint Modelview4ARB = 0x8724;
        public const uint Modelview5ARB = 0x8725;
        public const uint Modelview6ARB = 0x8726;
        public const uint Modelview7ARB = 0x8727;
        public const uint Modelview8ARB = 0x8728;
        public const uint Modelview9ARB = 0x8729;
        public const uint ModulateAddATI = 0x8744;
        public const uint ModulateColorIMG = 0x8c04;
        public const uint ModulateSignedAddATI = 0x8745;
        public const uint ModulateSubtractATI = 0x8746;
        public const uint MovATI = 0x8961;
        public const uint MoveToContinuesNV = 0x90b6;
        public const uint MoveToResetsNV = 0x90b5;
        public const uint MulATI = 0x8964;
        public const uint MultiplyKHR = 0x9294;
        public const uint MultiplyNV = 0x9294;
        public const uint Multisample = 0x809d;
        public const uint Multisample3dfx = 0x86b2;
        public const uint MultisampleARB = 0x809d;
        public const uint MultisampleCoverageModesNV = 0x8e12;
        public const uint MultisampleEXT = 0x809d;
        public const uint MultisampleFilterHintNV = 0x8534;
        public const uint MultisampleSGIS = 0x809d;
        public const uint MultiviewEXT = 0x90f1;
        public const uint MvpMatrixEXT = 0x87e3;
        public const uint NameLength = 0x92f9;
        public const uint NamedStringLengthARB = 0x8de9;
        public const uint NamedStringTypeARB = 0x8dea;
        public const uint Nand = 0x150e;
        public const uint NativeGraphicsBeginHintPGI = 0x1a203;
        public const uint NativeGraphicsEndHintPGI = 0x1a204;
        public const uint NativeGraphicsHandlePGI = 0x1a202;
        public const uint Nearest = 0x2600;
        public const uint NearestClipmapLinearSGIX = 0x844e;
        public const uint NearestClipmapNearestSGIX = 0x844d;
        public const uint NearestMipmapLinear = 0x2702;
        public const uint NearestMipmapNearest = 0x2700;
        public const uint NegativeOneEXT = 0x87df;
        public const uint NegativeWEXT = 0x87dc;
        public const uint NegativeXEXT = 0x87d9;
        public const uint NegativeYEXT = 0x87da;
        public const uint NegativeZEXT = 0x87db;
        public const uint Never = 0x200;
        public const uint NextVideoCaptureBufferStatusNV = 0x9025;
        public const uint Nicest = 0x1102;
        public const uint NoResetNotificationARB = 0x8261;
        public const uint NoResetNotificationEXT = 0x8261;
        public const uint Noop = 0x1505;
        public const uint Nor = 0x1508;
        public const uint NormalArrayAddressNV = 0x8f22;
        public const uint NormalArrayBufferBindingARB = 0x8897;
        public const uint NormalArrayCountEXT = 0x8080;
        public const uint NormalArrayEXT = 0x8075;
        public const uint NormalArrayLengthNV = 0x8f2c;
        public const uint NormalArrayListIBM = 0x1929f;
        public const uint NormalArrayListStrideIBM = 0x192a9;
        public const uint NormalArrayParallelPointersIntel = 0x83f6;
        public const uint NormalArrayPointerEXT = 0x808f;
        public const uint NormalArrayStrideEXT = 0x807f;
        public const uint NormalArrayTypeEXT = 0x807e;
        public const uint NormalMapARB = 0x8511;
        public const uint NormalMapEXT = 0x8511;
        public const uint NormalMapNV = 0x8511;
        public const uint NormalMapOES = 0x8511;
        public const uint NormalizedRangeEXT = 0x87e0;
        public const uint Notequal = 0x205;
        public const uint NumActiveVariables = 0x9304;
        public const uint NumCompatibleSubroutines = 0x8e4a;
        public const uint NumCompressedTextureFormats = 0x86a2;
        public const uint NumCompressedTextureFormatsARB = 0x86a2;
        public const uint NumExtensions = 0x821d;
        public const uint NumFillStreamsNV = 0x8e29;
        public const uint NumFragmentConstantsATI = 0x896f;
        public const uint NumFragmentRegistersATI = 0x896e;
        public const uint NumGeneralCombinersNV = 0x854e;
        public const uint NumInputInterpolatorComponentsATI = 0x8973;
        public const uint NumInstructionsPerPassATI = 0x8971;
        public const uint NumInstructionsTotalATI = 0x8972;
        public const uint NumLoopbackComponentsATI = 0x8974;
        public const uint NumPassesATI = 0x8970;
        public const uint NumProgramBinaryFormats = 0x87fe;
        public const uint NumProgramBinaryFormatsOES = 0x87fe;
        public const uint NumSampleCounts = 0x9380;
        public const uint NumShaderBinaryFormats = 0x8df9;
        public const uint NumShadingLanguageVersions = 0x82e9;
        public const uint NumVideoCaptureStreamsNV = 0x9024;
        public const uint NumVirtualPageSizesARB = 0x91a8;
        public const uint ObjectActiveAttributeMaxLengthARB = 0x8b8a;
        public const uint ObjectActiveAttributesARB = 0x8b89;
        public const uint ObjectActiveUniformMaxLengthARB = 0x8b87;
        public const uint ObjectActiveUniformsARB = 0x8b86;
        public const uint ObjectAttachedObjectsARB = 0x8b85;
        public const uint ObjectBufferSizeATI = 0x8764;
        public const uint ObjectBufferUsageATI = 0x8765;
        public const uint ObjectCompileStatusARB = 0x8b81;
        public const uint ObjectDeleteStatusARB = 0x8b80;
        public const uint ObjectDistanceToLineSGIS = 0x81f3;
        public const uint ObjectDistanceToPointSGIS = 0x81f1;
        public const uint ObjectInfoLogLengthARB = 0x8b84;
        public const uint ObjectLineSGIS = 0x81f7;
        public const uint ObjectLinkStatusARB = 0x8b82;
        public const uint ObjectPointSGIS = 0x81f5;
        public const uint ObjectShaderSourceLengthARB = 0x8b88;
        public const uint ObjectSubtypeARB = 0x8b4f;
        public const uint ObjectType = 0x9112;
        public const uint ObjectTypeAPPLE = 0x9112;
        public const uint ObjectTypeARB = 0x8b4e;
        public const uint ObjectValidateStatusARB = 0x8b83;
        public const uint OcclusionQueryEventMaskAMD = 0x874f;
        public const uint OcclusionTestHP = 0x8165;
        public const uint OcclusionTestResultHP = 0x8166;
        public const uint Offset = 0x92fc;
        public const uint OffsetHiloProjectiveTexture2dNV = 0x8856;
        public const uint OffsetHiloProjectiveTextureRectangleNV = 0x8857;
        public const uint OffsetHiloTexture2dNV = 0x8854;
        public const uint OffsetHiloTextureRectangleNV = 0x8855;
        public const uint OffsetProjectiveTexture2dNV = 0x8850;
        public const uint OffsetProjectiveTexture2dScaleNV = 0x8851;
        public const uint OffsetProjectiveTextureRectangleNV = 0x8852;
        public const uint OffsetProjectiveTextureRectangleScaleNV = 0x8853;
        public const uint OffsetTexture2dBiasNV = 0x86e3;
        public const uint OffsetTexture2dMatrixNV = 0x86e1;
        public const uint OffsetTexture2dNV = 0x86e8;
        public const uint OffsetTexture2dScaleNV = 0x86e2;
        public const uint OffsetTextureBiasNV = 0x86e3;
        public const uint OffsetTextureMatrixNV = 0x86e1;
        public const uint OffsetTextureRectangleNV = 0x864c;
        public const uint OffsetTextureRectangleScaleNV = 0x864d;
        public const uint OffsetTextureScaleNV = 0x86e2;
        public const uint OneEXT = 0x87de;
        public const uint OneMinusConstantAlpha = 0x8004;
        public const uint OneMinusConstantAlphaEXT = 0x8004;
        public const uint OneMinusConstantColor = 0x8002;
        public const uint OneMinusConstantColorEXT = 0x8002;
        public const uint OneMinusDstAlpha = 0x305;
        public const uint OneMinusDstColor = 0x307;
        public const uint OneMinusSrcAlpha = 0x303;
        public const uint OneMinusSrcColor = 0x301;
        public const uint OneMinusSrc1Alpha = 0x88fb;
        public const uint OneMinusSrc1Color = 0x88fa;
        public const uint OpAddEXT = 0x8787;
        public const uint OpClampEXT = 0x878e;
        public const uint OpCrossProductEXT = 0x8797;
        public const uint OpDot3EXT = 0x8784;
        public const uint OpDot4EXT = 0x8785;
        public const uint OpExpBase2EXT = 0x8791;
        public const uint OpFloorEXT = 0x878f;
        public const uint OpFracEXT = 0x8789;
        public const uint OpIndexEXT = 0x8782;
        public const uint OpLogBase2EXT = 0x8792;
        public const uint OpMaddEXT = 0x8788;
        public const uint OpMaxEXT = 0x878a;
        public const uint OpMinEXT = 0x878b;
        public const uint OpMovEXT = 0x8799;
        public const uint OpMulEXT = 0x8786;
        public const uint OpMultiplyMatrixEXT = 0x8798;
        public const uint OpNegateEXT = 0x8783;
        public const uint OpPowerEXT = 0x8793;
        public const uint OpRecipEXT = 0x8794;
        public const uint OpRecipSqrtEXT = 0x8795;
        public const uint OpRoundEXT = 0x8790;
        public const uint OpSetGeEXT = 0x878c;
        public const uint OpSetLtEXT = 0x878d;
        public const uint OpSubEXT = 0x8796;
        public const uint Or = 0x1507;
        public const uint OrInverted = 0x150d;
        public const uint OrReverse = 0x150b;
        public const uint OutOfMemory = 0x505;
        public const uint OutputColor0EXT = 0x879b;
        public const uint OutputColor1EXT = 0x879c;
        public const uint OutputFogEXT = 0x87bd;
        public const uint OutputTextureCoord0EXT = 0x879d;
        public const uint OutputTextureCoord1EXT = 0x879e;
        public const uint OutputTextureCoord10EXT = 0x87a7;
        public const uint OutputTextureCoord11EXT = 0x87a8;
        public const uint OutputTextureCoord12EXT = 0x87a9;
        public const uint OutputTextureCoord13EXT = 0x87aa;
        public const uint OutputTextureCoord14EXT = 0x87ab;
        public const uint OutputTextureCoord15EXT = 0x87ac;
        public const uint OutputTextureCoord16EXT = 0x87ad;
        public const uint OutputTextureCoord17EXT = 0x87ae;
        public const uint OutputTextureCoord18EXT = 0x87af;
        public const uint OutputTextureCoord19EXT = 0x87b0;
        public const uint OutputTextureCoord2EXT = 0x879f;
        public const uint OutputTextureCoord20EXT = 0x87b1;
        public const uint OutputTextureCoord21EXT = 0x87b2;
        public const uint OutputTextureCoord22EXT = 0x87b3;
        public const uint OutputTextureCoord23EXT = 0x87b4;
        public const uint OutputTextureCoord24EXT = 0x87b5;
        public const uint OutputTextureCoord25EXT = 0x87b6;
        public const uint OutputTextureCoord26EXT = 0x87b7;
        public const uint OutputTextureCoord27EXT = 0x87b8;
        public const uint OutputTextureCoord28EXT = 0x87b9;
        public const uint OutputTextureCoord29EXT = 0x87ba;
        public const uint OutputTextureCoord3EXT = 0x87a0;
        public const uint OutputTextureCoord30EXT = 0x87bb;
        public const uint OutputTextureCoord31EXT = 0x87bc;
        public const uint OutputTextureCoord4EXT = 0x87a1;
        public const uint OutputTextureCoord5EXT = 0x87a2;
        public const uint OutputTextureCoord6EXT = 0x87a3;
        public const uint OutputTextureCoord7EXT = 0x87a4;
        public const uint OutputTextureCoord8EXT = 0x87a5;
        public const uint OutputTextureCoord9EXT = 0x87a6;
        public const uint OutputVertexEXT = 0x879a;
        public const uint OverlayKHR = 0x9296;
        public const uint OverlayNV = 0x9296;
        public const uint PackAlignment = 0xd05;
        public const uint PackCmykHintEXT = 0x800e;
        public const uint PackCompressedBlockDepth = 0x912d;
        public const uint PackCompressedBlockHeight = 0x912c;
        public const uint PackCompressedBlockSize = 0x912e;
        public const uint PackCompressedBlockWidth = 0x912b;
        public const uint PackImageDepthSGIS = 0x8131;
        public const uint PackImageHeight = 0x806c;
        public const uint PackImageHeightEXT = 0x806c;
        public const uint PackInvertMesa = 0x8758;
        public const uint PackLsbFirst = 0xd01;
        public const uint PackResampleOml = 0x8984;
        public const uint PackResampleSGIX = 0x842c;
        public const uint PackReverseRowOrderAngle = 0x93a4;
        public const uint PackRowBytesAPPLE = 0x8a15;
        public const uint PackRowLength = 0xd02;
        public const uint PackSkipImages = 0x806b;
        public const uint PackSkipImagesEXT = 0x806b;
        public const uint PackSkipPixels = 0xd04;
        public const uint PackSkipRows = 0xd03;
        public const uint PackSkipVolumesSGIS = 0x8130;
        public const uint PackSubsampleRateSGIX = 0x85a0;
        public const uint PackSwapBytes = 0xd00;
        public const uint Palette4R5G6B5OES = 0x8b92;
        public const uint Palette4Rgb5A1OES = 0x8b94;
        public const uint Palette4Rgb8OES = 0x8b90;
        public const uint Palette4Rgba4OES = 0x8b93;
        public const uint Palette4Rgba8OES = 0x8b91;
        public const uint Palette8R5G6B5OES = 0x8b97;
        public const uint Palette8Rgb5A1OES = 0x8b99;
        public const uint Palette8Rgb8OES = 0x8b95;
        public const uint Palette8Rgba4OES = 0x8b98;
        public const uint Palette8Rgba8OES = 0x8b96;
        public const uint ParallelArraysIntel = 0x83f4;
        public const uint ParameterBufferARB = 0x80ee;
        public const uint ParameterBufferBindingARB = 0x80ef;
        public const uint PartialSuccessNV = 0x902e;
        public const uint PassThroughNV = 0x86e6;
        public const uint PatchDefaultInnerLevel = 0x8e73;
        public const uint PatchDefaultOuterLevel = 0x8e74;
        public const uint PatchVertices = 0x8e72;
        public const uint PatchVerticesEXT = 0x8e72;
        public const uint Patches = 0xe;
        public const uint PatchesEXT = 0xe;
        public const uint PathClientLengthNV = 0x907f;
        public const uint PathCommandCountNV = 0x909d;
        public const uint PathComputedLengthNV = 0x90a0;
        public const uint PathCoordCountNV = 0x909e;
        public const uint PathCoverDepthFuncNV = 0x90bf;
        public const uint PathDashArrayCountNV = 0x909f;
        public const uint PathDashCapsNV = 0x907b;
        public const uint PathDashOffsetNV = 0x907e;
        public const uint PathDashOffsetResetNV = 0x90b4;
        public const uint PathEndCapsNV = 0x9076;
        public const uint PathErrorPositionNV = 0x90ab;
        public const uint PathFillBoundingBoxNV = 0x90a1;
        public const uint PathFillCoverModeNV = 0x9082;
        public const uint PathFillMaskNV = 0x9081;
        public const uint PathFillModeNV = 0x9080;
        public const uint PathFogGenModeNV = 0x90ac;
        public const uint PathFormatPsNV = 0x9071;
        public const uint PathFormatSvgNV = 0x9070;
        public const uint PathGenCoeffNV = 0x90b1;
        public const uint PathGenColorFormatNV = 0x90b2;
        public const uint PathGenComponentsNV = 0x90b3;
        public const uint PathGenModeNV = 0x90b0;
        public const uint PathInitialDashCapNV = 0x907c;
        public const uint PathInitialEndCapNV = 0x9077;
        public const uint PathJoinStyleNV = 0x9079;
        public const uint PathMiterLimitNV = 0x907a;
        public const uint PathObjectBoundingBoxNV = 0x908a;
        public const uint PathStencilDepthOffsetFactorNV = 0x90bd;
        public const uint PathStencilDepthOffsetUnitsNV = 0x90be;
        public const uint PathStencilFuncNV = 0x90b7;
        public const uint PathStencilRefNV = 0x90b8;
        public const uint PathStencilValueMaskNV = 0x90b9;
        public const uint PathStrokeBoundingBoxNV = 0x90a2;
        public const uint PathStrokeCoverModeNV = 0x9083;
        public const uint PathStrokeMaskNV = 0x9084;
        public const uint PathStrokeWidthNV = 0x9075;
        public const uint PathTerminalDashCapNV = 0x907d;
        public const uint PathTerminalEndCapNV = 0x9078;
        public const uint PerStageConstantsNV = 0x8535;
        public const uint PercentageAMD = 0x8bc3;
        public const uint PerfmonGlobalModeQCOM = 0x8fa0;
        public const uint PerfmonResultAMD = 0x8bc6;
        public const uint PerfmonResultAvailableAMD = 0x8bc4;
        public const uint PerfmonResultSizeAMD = 0x8bc5;
        public const uint PerformanceMonitorAMD = 0x9152;
        public const uint PerfqueryCounterDataBool32Intel = 0x94fc;
        public const uint PerfqueryCounterDataDoubleIntel = 0x94fb;
        public const uint PerfqueryCounterDataFloatIntel = 0x94fa;
        public const uint PerfqueryCounterDataUint32Intel = 0x94f8;
        public const uint PerfqueryCounterDataUint64Intel = 0x94f9;
        public const uint PerfqueryCounterDescLengthMaxIntel = 0x94ff;
        public const uint PerfqueryCounterDurationNormIntel = 0x94f1;
        public const uint PerfqueryCounterDurationRawIntel = 0x94f2;
        public const uint PerfqueryCounterEventIntel = 0x94f0;
        public const uint PerfqueryCounterNameLengthMaxIntel = 0x94fe;
        public const uint PerfqueryCounterRawIntel = 0x94f4;
        public const uint PerfqueryCounterThroughputIntel = 0x94f3;
        public const uint PerfqueryCounterTimestampIntel = 0x94f5;
        public const uint PerfqueryDonotFlushIntel = 0x83f9;
        public const uint PerfqueryFlushIntel = 0x83fa;
        public const uint PerfqueryGpaExtendedCountersIntel = 0x9500;
        public const uint PerfqueryQueryNameLengthMaxIntel = 0x94fd;
        public const uint PerfqueryWaitIntel = 0x83fb;
        public const uint PerturbEXT = 0x85ae;
        public const uint PhongHintWin = 0x80eb;
        public const uint PhongWin = 0x80ea;
        public const uint PinlightNV = 0x92a8;
        public const uint PixelCountAvailableNV = 0x8867;
        public const uint PixelCountNV = 0x8866;
        public const uint PixelCounterBitsNV = 0x8864;
        public const uint PixelCubicWeightEXT = 0x8333;
        public const uint PixelFragmentAlphaSourceSGIS = 0x8355;
        public const uint PixelFragmentRgbSourceSGIS = 0x8354;
        public const uint PixelGroupColorSGIS = 0x8356;
        public const uint PixelMagFilterEXT = 0x8331;
        public const uint PixelMinFilterEXT = 0x8332;
        public const uint PixelPackBuffer = 0x88eb;
        public const uint PixelPackBufferARB = 0x88eb;
        public const uint PixelPackBufferBinding = 0x88ed;
        public const uint PixelPackBufferBindingARB = 0x88ed;
        public const uint PixelPackBufferBindingEXT = 0x88ed;
        public const uint PixelPackBufferEXT = 0x88eb;
        public const uint PixelSubsample2424SGIX = 0x85a3;
        public const uint PixelSubsample4242SGIX = 0x85a4;
        public const uint PixelSubsample4444SGIX = 0x85a2;
        public const uint PixelTexGenModeSGIX = 0x832b;
        public const uint PixelTexGenSGIX = 0x8139;
        public const uint PixelTextureSGIS = 0x8353;
        public const uint PixelTileBestAlignmentSGIX = 0x813e;
        public const uint PixelTileCacheIncrementSGIX = 0x813f;
        public const uint PixelTileCacheSizeSGIX = 0x8145;
        public const uint PixelTileGridDepthSGIX = 0x8144;
        public const uint PixelTileGridHeightSGIX = 0x8143;
        public const uint PixelTileGridWidthSGIX = 0x8142;
        public const uint PixelTileHeightSGIX = 0x8141;
        public const uint PixelTileWidthSGIX = 0x8140;
        public const uint PixelTransform2dEXT = 0x8330;
        public const uint PixelTransform2dMatrixEXT = 0x8338;
        public const uint PixelTransform2dStackDepthEXT = 0x8336;
        public const uint PixelUnpackBuffer = 0x88ec;
        public const uint PixelUnpackBufferARB = 0x88ec;
        public const uint PixelUnpackBufferBinding = 0x88ef;
        public const uint PixelUnpackBufferBindingARB = 0x88ef;
        public const uint PixelUnpackBufferBindingEXT = 0x88ef;
        public const uint PixelUnpackBufferEXT = 0x88ec;
        public const uint PlusClampedAlphaNV = 0x92b2;
        public const uint PlusClampedNV = 0x92b1;
        public const uint PlusDarkerNV = 0x9292;
        public const uint PlusNV = 0x9291;
        public const uint PnTrianglesATI = 0x87f0;
        public const uint PnTrianglesNormalModeATI = 0x87f3;
        public const uint PnTrianglesNormalModeLinearATI = 0x87f7;
        public const uint PnTrianglesNormalModeQuadraticATI = 0x87f8;
        public const uint PnTrianglesPointModeATI = 0x87f2;
        public const uint PnTrianglesPointModeCubicATI = 0x87f6;
        public const uint PnTrianglesPointModeLinearATI = 0x87f5;
        public const uint PnTrianglesTesselationLevelATI = 0x87f4;
        public const uint Point = 0x1b00;
        public const uint PointDistanceAttenuationARB = 0x8129;
        public const uint PointFadeThresholdSize = 0x8128;
        public const uint PointFadeThresholdSizeARB = 0x8128;
        public const uint PointFadeThresholdSizeEXT = 0x8128;
        public const uint PointFadeThresholdSizeSGIS = 0x8128;
        public const uint PointSize = 0xb11;
        public const uint PointSizeArrayBufferBindingOES = 0x8b9f;
        public const uint PointSizeArrayOES = 0x8b9c;
        public const uint PointSizeArrayPointerOES = 0x898c;
        public const uint PointSizeArrayStrideOES = 0x898b;
        public const uint PointSizeArrayTypeOES = 0x898a;
        public const uint PointSizeGranularity = 0xb13;
        public const uint PointSizeMaxARB = 0x8127;
        public const uint PointSizeMaxEXT = 0x8127;
        public const uint PointSizeMaxSGIS = 0x8127;
        public const uint PointSizeMinARB = 0x8126;
        public const uint PointSizeMinEXT = 0x8126;
        public const uint PointSizeMinSGIS = 0x8126;
        public const uint PointSizeRange = 0xb12;
        public const uint PointSpriteARB = 0x8861;
        public const uint PointSpriteCoordOrigin = 0x8ca0;
        public const uint PointSpriteNV = 0x8861;
        public const uint PointSpriteOES = 0x8861;
        public const uint PointSpriteRModeNV = 0x8863;
        public const uint Points = 0x0;
        public const uint PolygonMode = 0xb40;
        public const uint PolygonOffsetBiasEXT = 0x8039;
        public const uint PolygonOffsetEXT = 0x8037;
        public const uint PolygonOffsetFactor = 0x8038;
        public const uint PolygonOffsetFactorEXT = 0x8038;
        public const uint PolygonOffsetFill = 0x8037;
        public const uint PolygonOffsetLine = 0x2a02;
        public const uint PolygonOffsetPoint = 0x2a01;
        public const uint PolygonOffsetUnits = 0x2a00;
        public const uint PolygonSmooth = 0xb41;
        public const uint PolygonSmoothHint = 0xc53;
        public const uint PostColorMatrixAlphaBias = 0x80bb;
        public const uint PostColorMatrixAlphaBiasSGI = 0x80bb;
        public const uint PostColorMatrixAlphaScale = 0x80b7;
        public const uint PostColorMatrixAlphaScaleSGI = 0x80b7;
        public const uint PostColorMatrixBlueBias = 0x80ba;
        public const uint PostColorMatrixBlueBiasSGI = 0x80ba;
        public const uint PostColorMatrixBlueScale = 0x80b6;
        public const uint PostColorMatrixBlueScaleSGI = 0x80b6;
        public const uint PostColorMatrixColorTable = 0x80d2;
        public const uint PostColorMatrixColorTableSGI = 0x80d2;
        public const uint PostColorMatrixGreenBias = 0x80b9;
        public const uint PostColorMatrixGreenBiasSGI = 0x80b9;
        public const uint PostColorMatrixGreenScale = 0x80b5;
        public const uint PostColorMatrixGreenScaleSGI = 0x80b5;
        public const uint PostColorMatrixRedBias = 0x80b8;
        public const uint PostColorMatrixRedBiasSGI = 0x80b8;
        public const uint PostColorMatrixRedScale = 0x80b4;
        public const uint PostColorMatrixRedScaleSGI = 0x80b4;
        public const uint PostConvolutionAlphaBias = 0x8023;
        public const uint PostConvolutionAlphaBiasEXT = 0x8023;
        public const uint PostConvolutionAlphaScale = 0x801f;
        public const uint PostConvolutionAlphaScaleEXT = 0x801f;
        public const uint PostConvolutionBlueBias = 0x8022;
        public const uint PostConvolutionBlueBiasEXT = 0x8022;
        public const uint PostConvolutionBlueScale = 0x801e;
        public const uint PostConvolutionBlueScaleEXT = 0x801e;
        public const uint PostConvolutionColorTable = 0x80d1;
        public const uint PostConvolutionColorTableSGI = 0x80d1;
        public const uint PostConvolutionGreenBias = 0x8021;
        public const uint PostConvolutionGreenBiasEXT = 0x8021;
        public const uint PostConvolutionGreenScale = 0x801d;
        public const uint PostConvolutionGreenScaleEXT = 0x801d;
        public const uint PostConvolutionRedBias = 0x8020;
        public const uint PostConvolutionRedBiasEXT = 0x8020;
        public const uint PostConvolutionRedScale = 0x801c;
        public const uint PostConvolutionRedScaleEXT = 0x801c;
        public const uint PostImageTransformColorTableHP = 0x8162;
        public const uint PostTextureFilterBiasRangeSGIX = 0x817b;
        public const uint PostTextureFilterBiasSGIX = 0x8179;
        public const uint PostTextureFilterScaleRangeSGIX = 0x817c;
        public const uint PostTextureFilterScaleSGIX = 0x817a;
        public const uint PreferDoublebufferHintPGI = 0x1a1f8;
        public const uint PresentDurationNV = 0x8e2b;
        public const uint PresentTimeNV = 0x8e2a;
        public const uint PreserveATI = 0x8762;
        public const uint PreviousTextureInputNV = 0x86e4;
        public const uint PrimaryColorNV = 0x852c;
        public const uint PrimitiveBoundingBoxEXT = 0x92be;
        public const uint PrimitiveIdNV = 0x8c7c;
        public const uint PrimitiveRestart = 0x8f9d;
        public const uint PrimitiveRestartFixedIndex = 0x8d69;
        public const uint PrimitiveRestartForPatchesSupported = 0x8221;
        public const uint PrimitiveRestartIndex = 0x8f9e;
        public const uint PrimitiveRestartIndexNV = 0x8559;
        public const uint PrimitiveRestartNV = 0x8558;
        public const uint PrimitivesGenerated = 0x8c87;
        public const uint PrimitivesGeneratedEXT = 0x8c87;
        public const uint PrimitivesGeneratedNV = 0x8c87;
        public const uint Program = 0x82e2;
        public const uint ProgramAddressRegistersARB = 0x88b0;
        public const uint ProgramAluInstructionsARB = 0x8805;
        public const uint ProgramAttribComponentsNV = 0x8906;
        public const uint ProgramAttribsARB = 0x88ac;
        public const uint ProgramBinaryAngle = 0x93a6;
        public const uint ProgramBinaryFormats = 0x87ff;
        public const uint ProgramBinaryFormatsOES = 0x87ff;
        public const uint ProgramBinaryLength = 0x8741;
        public const uint ProgramBinaryLengthOES = 0x8741;
        public const uint ProgramBinaryRetrievableHint = 0x8257;
        public const uint ProgramBindingARB = 0x8677;
        public const uint ProgramErrorPositionARB = 0x864b;
        public const uint ProgramErrorPositionNV = 0x864b;
        public const uint ProgramErrorStringARB = 0x8874;
        public const uint ProgramErrorStringNV = 0x8874;
        public const uint ProgramFormatARB = 0x8876;
        public const uint ProgramFormatAsciiARB = 0x8875;
        public const uint ProgramInput = 0x92e3;
        public const uint ProgramInstructionsARB = 0x88a0;
        public const uint ProgramKHR = 0x82e2;
        public const uint ProgramLengthARB = 0x8627;
        public const uint ProgramLengthNV = 0x8627;
        public const uint ProgramMatrixEXT = 0x8e2d;
        public const uint ProgramMatrixStackDepthEXT = 0x8e2f;
        public const uint ProgramNativeAddressRegistersARB = 0x88b2;
        public const uint ProgramNativeAluInstructionsARB = 0x8808;
        public const uint ProgramNativeAttribsARB = 0x88ae;
        public const uint ProgramNativeInstructionsARB = 0x88a2;
        public const uint ProgramNativeParametersARB = 0x88aa;
        public const uint ProgramNativeTemporariesARB = 0x88a6;
        public const uint ProgramNativeTexIndirectionsARB = 0x880a;
        public const uint ProgramNativeTexInstructionsARB = 0x8809;
        public const uint ProgramOutput = 0x92e4;
        public const uint ProgramParameterNV = 0x8644;
        public const uint ProgramParametersARB = 0x88a8;
        public const uint ProgramPipeline = 0x82e4;
        public const uint ProgramPipelineBinding = 0x825a;
        public const uint ProgramPipelineBindingEXT = 0x825a;
        public const uint ProgramPipelineObjectEXT = 0x8a4f;
        public const uint ProgramPointSize = 0x8642;
        public const uint ProgramPointSizeARB = 0x8642;
        public const uint ProgramPointSizeEXT = 0x8642;
        public const uint ProgramResidentNV = 0x8647;
        public const uint ProgramResultComponentsNV = 0x8907;
        public const uint ProgramSeparable = 0x8258;
        public const uint ProgramSeparableEXT = 0x8258;
        public const uint ProgramStringARB = 0x8628;
        public const uint ProgramStringNV = 0x8628;
        public const uint ProgramTargetNV = 0x8646;
        public const uint ProgramTemporariesARB = 0x88a4;
        public const uint ProgramTexIndirectionsARB = 0x8807;
        public const uint ProgramTexInstructionsARB = 0x8806;
        public const uint ProgramUnderNativeLimitsARB = 0x88b6;
        public const uint ProjectionMatrixFloatAsIntBitsOES = 0x898e;
        public const uint ProvokingVertex = 0x8e4f;
        public const uint ProvokingVertexEXT = 0x8e4f;
        public const uint ProxyColorTable = 0x80d3;
        public const uint ProxyColorTableSGI = 0x80d3;
        public const uint ProxyHistogram = 0x8025;
        public const uint ProxyHistogramEXT = 0x8025;
        public const uint ProxyPostColorMatrixColorTable = 0x80d5;
        public const uint ProxyPostColorMatrixColorTableSGI = 0x80d5;
        public const uint ProxyPostConvolutionColorTable = 0x80d4;
        public const uint ProxyPostConvolutionColorTableSGI = 0x80d4;
        public const uint ProxyPostImageTransformColorTableHP = 0x8163;
        public const uint ProxyTexture1d = 0x8063;
        public const uint ProxyTexture1dArray = 0x8c19;
        public const uint ProxyTexture1dArrayEXT = 0x8c19;
        public const uint ProxyTexture1dEXT = 0x8063;
        public const uint ProxyTexture1dStackMesax = 0x875b;
        public const uint ProxyTexture2d = 0x8064;
        public const uint ProxyTexture2dArray = 0x8c1b;
        public const uint ProxyTexture2dArrayEXT = 0x8c1b;
        public const uint ProxyTexture2dEXT = 0x8064;
        public const uint ProxyTexture2dMultisample = 0x9101;
        public const uint ProxyTexture2dMultisampleArray = 0x9103;
        public const uint ProxyTexture2dStackMesax = 0x875c;
        public const uint ProxyTexture3d = 0x8070;
        public const uint ProxyTexture3dEXT = 0x8070;
        public const uint ProxyTexture4dSGIS = 0x8135;
        public const uint ProxyTextureColorTableSGI = 0x80bd;
        public const uint ProxyTextureCubeMap = 0x851b;
        public const uint ProxyTextureCubeMapARB = 0x851b;
        public const uint ProxyTextureCubeMapArray = 0x900b;
        public const uint ProxyTextureCubeMapArrayARB = 0x900b;
        public const uint ProxyTextureCubeMapEXT = 0x851b;
        public const uint ProxyTextureRectangle = 0x84f7;
        public const uint ProxyTextureRectangleARB = 0x84f7;
        public const uint ProxyTextureRectangleNV = 0x84f7;
        public const uint PurgeableAPPLE = 0x8a1d;
        public const uint QuadAlpha4SGIS = 0x811e;
        public const uint QuadAlpha8SGIS = 0x811f;
        public const uint QuadIntensity4SGIS = 0x8122;
        public const uint QuadIntensity8SGIS = 0x8123;
        public const uint QuadLuminance4SGIS = 0x8120;
        public const uint QuadLuminance8SGIS = 0x8121;
        public const uint QuadMeshSun = 0x8614;
        public const uint QuadTextureSelectSGIS = 0x8125;
        public const uint QuadsEXT = 0x7;
        public const uint QuadsFollowProvokingVertexConvention = 0x8e4c;
        public const uint QuadsFollowProvokingVertexConventionEXT = 0x8e4c;
        public const uint Query = 0x82e3;
        public const uint QueryBuffer = 0x9192;
        public const uint QueryBufferAMD = 0x9192;
        public const uint QueryBufferBinding = 0x9193;
        public const uint QueryBufferBindingAMD = 0x9193;
        public const uint QueryByRegionNoWait = 0x8e16;
        public const uint QueryByRegionNoWaitNV = 0x8e16;
        public const uint QueryByRegionWait = 0x8e15;
        public const uint QueryByRegionWaitNV = 0x8e15;
        public const uint QueryCounterBits = 0x8864;
        public const uint QueryCounterBitsARB = 0x8864;
        public const uint QueryCounterBitsEXT = 0x8864;
        public const uint QueryKHR = 0x82e3;
        public const uint QueryNoWait = 0x8e14;
        public const uint QueryNoWaitNV = 0x8e14;
        public const uint QueryObjectAMD = 0x9153;
        public const uint QueryObjectEXT = 0x9153;
        public const uint QueryResult = 0x8866;
        public const uint QueryResultARB = 0x8866;
        public const uint QueryResultAvailable = 0x8867;
        public const uint QueryResultAvailableARB = 0x8867;
        public const uint QueryResultAvailableEXT = 0x8867;
        public const uint QueryResultEXT = 0x8866;
        public const uint QueryResultNoWait = 0x9194;
        public const uint QueryResultNoWaitAMD = 0x9194;
        public const uint QueryWait = 0x8e13;
        public const uint QueryWaitNV = 0x8e13;
        public const uint R11fG11fB10f = 0x8c3a;
        public const uint R11fG11fB10fEXT = 0x8c3a;
        public const uint R16 = 0x822a;
        public const uint R16Snorm = 0x8f98;
        public const uint R16f = 0x822d;
        public const uint R16fEXT = 0x822d;
        public const uint R16i = 0x8233;
        public const uint R16ui = 0x8234;
        public const uint R1uiC3fV3fSun = 0x85c6;
        public const uint R1uiC4fN3fV3fSun = 0x85c8;
        public const uint R1uiC4ubV3fSun = 0x85c5;
        public const uint R1uiN3fV3fSun = 0x85c7;
        public const uint R1uiT2fC4fN3fV3fSun = 0x85cb;
        public const uint R1uiT2fN3fV3fSun = 0x85ca;
        public const uint R1uiT2fV3fSun = 0x85c9;
        public const uint R1uiV3fSun = 0x85c4;
        public const uint R3G3B2 = 0x2a10;
        public const uint R32f = 0x822e;
        public const uint R32fEXT = 0x822e;
        public const uint R32i = 0x8235;
        public const uint R32ui = 0x8236;
        public const uint R8 = 0x8229;
        public const uint R8EXT = 0x8229;
        public const uint R8Snorm = 0x8f94;
        public const uint R8i = 0x8231;
        public const uint R8ui = 0x8232;
        public const uint RasterPositionUnclippedIBM = 0x19262;
        public const uint RasterizerDiscard = 0x8c89;
        public const uint RasterizerDiscardEXT = 0x8c89;
        public const uint RasterizerDiscardNV = 0x8c89;
        public const uint ReadBuffer = 0xc02;
        public const uint ReadBufferEXT = 0xc02;
        public const uint ReadBufferNV = 0xc02;
        public const uint ReadFramebuffer = 0x8ca8;
        public const uint ReadFramebufferAngle = 0x8ca8;
        public const uint ReadFramebufferAPPLE = 0x8ca8;
        public const uint ReadFramebufferBinding = 0x8caa;
        public const uint ReadFramebufferBindingAngle = 0x8caa;
        public const uint ReadFramebufferBindingAPPLE = 0x8caa;
        public const uint ReadFramebufferBindingEXT = 0x8caa;
        public const uint ReadFramebufferBindingNV = 0x8caa;
        public const uint ReadFramebufferEXT = 0x8ca8;
        public const uint ReadFramebufferNV = 0x8ca8;
        public const uint ReadOnly = 0x88b8;
        public const uint ReadOnlyARB = 0x88b8;
        public const uint ReadPixelDataRangeLengthNV = 0x887b;
        public const uint ReadPixelDataRangeNV = 0x8879;
        public const uint ReadPixelDataRangePointerNV = 0x887d;
        public const uint ReadPixels = 0x828c;
        public const uint ReadPixelsFormat = 0x828d;
        public const uint ReadPixelsType = 0x828e;
        public const uint ReadWrite = 0x88ba;
        public const uint ReadWriteARB = 0x88ba;
        public const uint RecipAddSignedAlphaIMG = 0x8c05;
        public const uint ReclaimMemoryHintPGI = 0x1a1fe;
        public const uint Red = 0x1903;
        public const uint RedEXT = 0x1903;
        public const uint RedInteger = 0x8d94;
        public const uint RedIntegerEXT = 0x8d94;
        public const uint RedMaxClampIngr = 0x8564;
        public const uint RedMinClampIngr = 0x8560;
        public const uint RedNV = 0x1903;
        public const uint RedSnorm = 0x8f90;
        public const uint Reduce = 0x8016;
        public const uint ReduceEXT = 0x8016;
        public const uint ReferencePlaneEquationSGIX = 0x817e;
        public const uint ReferencePlaneSGIX = 0x817d;
        public const uint ReferencedByComputeShader = 0x930b;
        public const uint ReferencedByFragmentShader = 0x930a;
        public const uint ReferencedByGeometryShader = 0x9309;
        public const uint ReferencedByGeometryShaderEXT = 0x9309;
        public const uint ReferencedByTessControlShader = 0x9307;
        public const uint ReferencedByTessControlShaderEXT = 0x9307;
        public const uint ReferencedByTessEvaluationShader = 0x9308;
        public const uint ReferencedByTessEvaluationShaderEXT = 0x9308;
        public const uint ReferencedByVertexShader = 0x9306;
        public const uint ReflectionMapARB = 0x8512;
        public const uint ReflectionMapEXT = 0x8512;
        public const uint ReflectionMapNV = 0x8512;
        public const uint ReflectionMapOES = 0x8512;
        public const uint Reg0ATI = 0x8921;
        public const uint Reg1ATI = 0x8922;
        public const uint Reg10ATI = 0x892b;
        public const uint Reg11ATI = 0x892c;
        public const uint Reg12ATI = 0x892d;
        public const uint Reg13ATI = 0x892e;
        public const uint Reg14ATI = 0x892f;
        public const uint Reg15ATI = 0x8930;
        public const uint Reg16ATI = 0x8931;
        public const uint Reg17ATI = 0x8932;
        public const uint Reg18ATI = 0x8933;
        public const uint Reg19ATI = 0x8934;
        public const uint Reg2ATI = 0x8923;
        public const uint Reg20ATI = 0x8935;
        public const uint Reg21ATI = 0x8936;
        public const uint Reg22ATI = 0x8937;
        public const uint Reg23ATI = 0x8938;
        public const uint Reg24ATI = 0x8939;
        public const uint Reg25ATI = 0x893a;
        public const uint Reg26ATI = 0x893b;
        public const uint Reg27ATI = 0x893c;
        public const uint Reg28ATI = 0x893d;
        public const uint Reg29ATI = 0x893e;
        public const uint Reg3ATI = 0x8924;
        public const uint Reg30ATI = 0x893f;
        public const uint Reg31ATI = 0x8940;
        public const uint Reg4ATI = 0x8925;
        public const uint Reg5ATI = 0x8926;
        public const uint Reg6ATI = 0x8927;
        public const uint Reg7ATI = 0x8928;
        public const uint Reg8ATI = 0x8929;
        public const uint Reg9ATI = 0x892a;
        public const uint RegisterCombinersNV = 0x8522;
        public const uint ReleasedAPPLE = 0x8a19;
        public const uint RenderDirectToFramebufferQCOM = 0x8fb3;
        public const uint Renderbuffer = 0x8d41;
        public const uint RenderbufferAlphaSize = 0x8d53;
        public const uint RenderbufferAlphaSizeEXT = 0x8d53;
        public const uint RenderbufferAlphaSizeOES = 0x8d53;
        public const uint RenderbufferBinding = 0x8ca7;
        public const uint RenderbufferBindingEXT = 0x8ca7;
        public const uint RenderbufferBindingOES = 0x8ca7;
        public const uint RenderbufferBlueSize = 0x8d52;
        public const uint RenderbufferBlueSizeEXT = 0x8d52;
        public const uint RenderbufferBlueSizeOES = 0x8d52;
        public const uint RenderbufferColorSamplesNV = 0x8e10;
        public const uint RenderbufferCoverageSamplesNV = 0x8cab;
        public const uint RenderbufferDepthSize = 0x8d54;
        public const uint RenderbufferDepthSizeEXT = 0x8d54;
        public const uint RenderbufferDepthSizeOES = 0x8d54;
        public const uint RenderbufferEXT = 0x8d41;
        public const uint RenderbufferFreeMemoryATI = 0x87fd;
        public const uint RenderbufferGreenSize = 0x8d51;
        public const uint RenderbufferGreenSizeEXT = 0x8d51;
        public const uint RenderbufferGreenSizeOES = 0x8d51;
        public const uint RenderbufferHeight = 0x8d43;
        public const uint RenderbufferHeightEXT = 0x8d43;
        public const uint RenderbufferHeightOES = 0x8d43;
        public const uint RenderbufferInternalFormat = 0x8d44;
        public const uint RenderbufferInternalFormatEXT = 0x8d44;
        public const uint RenderbufferInternalFormatOES = 0x8d44;
        public const uint RenderbufferOES = 0x8d41;
        public const uint RenderbufferRedSize = 0x8d50;
        public const uint RenderbufferRedSizeEXT = 0x8d50;
        public const uint RenderbufferRedSizeOES = 0x8d50;
        public const uint RenderbufferSamples = 0x8cab;
        public const uint RenderbufferSamplesAngle = 0x8cab;
        public const uint RenderbufferSamplesAPPLE = 0x8cab;
        public const uint RenderbufferSamplesEXT = 0x8cab;
        public const uint RenderbufferSamplesIMG = 0x9133;
        public const uint RenderbufferSamplesNV = 0x8cab;
        public const uint RenderbufferStencilSize = 0x8d55;
        public const uint RenderbufferStencilSizeEXT = 0x8d55;
        public const uint RenderbufferStencilSizeOES = 0x8d55;
        public const uint RenderbufferWidth = 0x8d42;
        public const uint RenderbufferWidthEXT = 0x8d42;
        public const uint RenderbufferWidthOES = 0x8d42;
        public const uint Renderer = 0x1f01;
        public const uint Repeat = 0x2901;
        public const uint Replace = 0x1e01;
        public const uint ReplaceEXT = 0x8062;
        public const uint ReplaceValueAMD = 0x874b;
        public const uint ReplacementCodeArrayPointerSun = 0x85c3;
        public const uint ReplacementCodeArrayStrideSun = 0x85c2;
        public const uint ReplacementCodeArraySun = 0x85c0;
        public const uint ReplacementCodeArrayTypeSun = 0x85c1;
        public const uint ReplacementCodeSun = 0x81d8;
        public const uint ReplicateBorder = 0x8153;
        public const uint ReplicateBorderHP = 0x8153;
        public const uint RequiredTextureImageUnitsOES = 0x8d68;
        public const uint ResampleAverageOml = 0x8988;
        public const uint ResampleDecimateOml = 0x8989;
        public const uint ResampleDecimateSGIX = 0x8430;
        public const uint ResampleReplicateOml = 0x8986;
        public const uint ResampleReplicateSGIX = 0x842e;
        public const uint ResampleZeroFillOml = 0x8987;
        public const uint ResampleZeroFillSGIX = 0x842f;
        public const uint RescaleNormalEXT = 0x803a;
        public const uint ResetNotificationStrategyARB = 0x8256;
        public const uint ResetNotificationStrategyEXT = 0x8256;
        public const uint RetainedAPPLE = 0x8a1b;
        public const uint Rg = 0x8227;
        public const uint RgEXT = 0x8227;
        public const uint RgInteger = 0x8228;
        public const uint RgSnorm = 0x8f91;
        public const uint Rg16 = 0x822c;
        public const uint Rg16Snorm = 0x8f99;
        public const uint Rg16f = 0x822f;
        public const uint Rg16fEXT = 0x822f;
        public const uint Rg16i = 0x8239;
        public const uint Rg16ui = 0x823a;
        public const uint Rg32f = 0x8230;
        public const uint Rg32fEXT = 0x8230;
        public const uint Rg32i = 0x823b;
        public const uint Rg32ui = 0x823c;
        public const uint Rg8 = 0x822b;
        public const uint Rg8EXT = 0x822b;
        public const uint Rg8Snorm = 0x8f95;
        public const uint Rg8i = 0x8237;
        public const uint Rg8ui = 0x8238;
        public const uint Rgb = 0x1907;
        public const uint Rgb422APPLE = 0x8a1f;
        public const uint RgbFloat16APPLE = 0x881b;
        public const uint RgbFloat16ATI = 0x881b;
        public const uint RgbFloat32APPLE = 0x8815;
        public const uint RgbFloat32ATI = 0x8815;
        public const uint RgbInteger = 0x8d98;
        public const uint RgbIntegerEXT = 0x8d98;
        public const uint RgbRaw422APPLE = 0x8a51;
        public const uint RgbS3tc = 0x83a0;
        public const uint RgbSnorm = 0x8f92;
        public const uint Rgb10 = 0x8052;
        public const uint Rgb10A2 = 0x8059;
        public const uint Rgb10A2EXT = 0x8059;
        public const uint Rgb10A2ui = 0x906f;
        public const uint Rgb10EXT = 0x8052;
        public const uint Rgb12 = 0x8053;
        public const uint Rgb12EXT = 0x8053;
        public const uint Rgb16 = 0x8054;
        public const uint Rgb16EXT = 0x8054;
        public const uint Rgb16Snorm = 0x8f9a;
        public const uint Rgb16f = 0x881b;
        public const uint Rgb16fARB = 0x881b;
        public const uint Rgb16fEXT = 0x881b;
        public const uint Rgb16i = 0x8d89;
        public const uint Rgb16iEXT = 0x8d89;
        public const uint Rgb16ui = 0x8d77;
        public const uint Rgb16uiEXT = 0x8d77;
        public const uint Rgb2EXT = 0x804e;
        public const uint Rgb32f = 0x8815;
        public const uint Rgb32fARB = 0x8815;
        public const uint Rgb32fEXT = 0x8815;
        public const uint Rgb32i = 0x8d83;
        public const uint Rgb32iEXT = 0x8d83;
        public const uint Rgb32ui = 0x8d71;
        public const uint Rgb32uiEXT = 0x8d71;
        public const uint Rgb4 = 0x804f;
        public const uint Rgb4EXT = 0x804f;
        public const uint Rgb4S3tc = 0x83a1;
        public const uint Rgb5 = 0x8050;
        public const uint Rgb5A1 = 0x8057;
        public const uint Rgb5A1EXT = 0x8057;
        public const uint Rgb5A1OES = 0x8057;
        public const uint Rgb5EXT = 0x8050;
        public const uint Rgb565 = 0x8d62;
        public const uint Rgb565OES = 0x8d62;
        public const uint Rgb8 = 0x8051;
        public const uint Rgb8EXT = 0x8051;
        public const uint Rgb8OES = 0x8051;
        public const uint Rgb8Snorm = 0x8f96;
        public const uint Rgb8i = 0x8d8f;
        public const uint Rgb8iEXT = 0x8d8f;
        public const uint Rgb8ui = 0x8d7d;
        public const uint Rgb8uiEXT = 0x8d7d;
        public const uint Rgb9E5 = 0x8c3d;
        public const uint Rgb9E5EXT = 0x8c3d;
        public const uint Rgba = 0x1908;
        public const uint RgbaDxt5S3tc = 0x83a4;
        public const uint RgbaFloatModeARB = 0x8820;
        public const uint RgbaFloatModeATI = 0x8820;
        public const uint RgbaFloat16APPLE = 0x881a;
        public const uint RgbaFloat16ATI = 0x881a;
        public const uint RgbaFloat32APPLE = 0x8814;
        public const uint RgbaFloat32ATI = 0x8814;
        public const uint RgbaInteger = 0x8d99;
        public const uint RgbaIntegerEXT = 0x8d99;
        public const uint RgbaIntegerModeEXT = 0x8d9e;
        public const uint RgbaS3tc = 0x83a2;
        public const uint RgbaSignedComponentsEXT = 0x8c3c;
        public const uint RgbaSnorm = 0x8f93;
        public const uint RgbaUnsignedDotProductMappingNV = 0x86d9;
        public const uint Rgba12 = 0x805a;
        public const uint Rgba12EXT = 0x805a;
        public const uint Rgba16 = 0x805b;
        public const uint Rgba16EXT = 0x805b;
        public const uint Rgba16Snorm = 0x8f9b;
        public const uint Rgba16f = 0x881a;
        public const uint Rgba16fARB = 0x881a;
        public const uint Rgba16fEXT = 0x881a;
        public const uint Rgba16i = 0x8d88;
        public const uint Rgba16iEXT = 0x8d88;
        public const uint Rgba16ui = 0x8d76;
        public const uint Rgba16uiEXT = 0x8d76;
        public const uint Rgba2 = 0x8055;
        public const uint Rgba2EXT = 0x8055;
        public const uint Rgba32f = 0x8814;
        public const uint Rgba32fARB = 0x8814;
        public const uint Rgba32fEXT = 0x8814;
        public const uint Rgba32i = 0x8d82;
        public const uint Rgba32iEXT = 0x8d82;
        public const uint Rgba32ui = 0x8d70;
        public const uint Rgba32uiEXT = 0x8d70;
        public const uint Rgba4 = 0x8056;
        public const uint Rgba4Dxt5S3tc = 0x83a5;
        public const uint Rgba4EXT = 0x8056;
        public const uint Rgba4OES = 0x8056;
        public const uint Rgba4S3tc = 0x83a3;
        public const uint Rgba8 = 0x8058;
        public const uint Rgba8EXT = 0x8058;
        public const uint Rgba8OES = 0x8058;
        public const uint Rgba8Snorm = 0x8f97;
        public const uint Rgba8i = 0x8d8e;
        public const uint Rgba8iEXT = 0x8d8e;
        public const uint Rgba8ui = 0x8d7c;
        public const uint Rgba8uiEXT = 0x8d7c;
        public const uint Right = 0x407;
        public const uint RoundNV = 0x90a4;
        public const uint SampleAlphaToCoverage = 0x809e;
        public const uint SampleAlphaToCoverageARB = 0x809e;
        public const uint SampleAlphaToMaskEXT = 0x809e;
        public const uint SampleAlphaToMaskSGIS = 0x809e;
        public const uint SampleAlphaToOne = 0x809f;
        public const uint SampleAlphaToOneARB = 0x809f;
        public const uint SampleAlphaToOneEXT = 0x809f;
        public const uint SampleAlphaToOneSGIS = 0x809f;
        public const uint SampleBuffers = 0x80a8;
        public const uint SampleBuffers3dfx = 0x86b3;
        public const uint SampleBuffersARB = 0x80a8;
        public const uint SampleBuffersEXT = 0x80a8;
        public const uint SampleBuffersSGIS = 0x80a8;
        public const uint SampleCoverage = 0x80a0;
        public const uint SampleCoverageARB = 0x80a0;
        public const uint SampleCoverageInvert = 0x80ab;
        public const uint SampleCoverageInvertARB = 0x80ab;
        public const uint SampleCoverageValue = 0x80aa;
        public const uint SampleCoverageValueARB = 0x80aa;
        public const uint SampleMask = 0x8e51;
        public const uint SampleMaskEXT = 0x80a0;
        public const uint SampleMaskInvertEXT = 0x80ab;
        public const uint SampleMaskInvertSGIS = 0x80ab;
        public const uint SampleMaskNV = 0x8e51;
        public const uint SampleMaskSGIS = 0x80a0;
        public const uint SampleMaskValue = 0x8e52;
        public const uint SampleMaskValueEXT = 0x80aa;
        public const uint SampleMaskValueNV = 0x8e52;
        public const uint SampleMaskValueSGIS = 0x80aa;
        public const uint SamplePatternEXT = 0x80ac;
        public const uint SamplePatternSGIS = 0x80ac;
        public const uint SamplePosition = 0x8e50;
        public const uint SamplePositionNV = 0x8e50;
        public const uint SampleShading = 0x8c36;
        public const uint SampleShadingARB = 0x8c36;
        public const uint SampleShadingOES = 0x8c36;
        public const uint Sampler = 0x82e6;
        public const uint Sampler1dArray = 0x8dc0;
        public const uint Sampler1dArrayEXT = 0x8dc0;
        public const uint Sampler1dArrayShadow = 0x8dc3;
        public const uint Sampler1dArrayShadowEXT = 0x8dc3;
        public const uint Sampler2dArray = 0x8dc1;
        public const uint Sampler2dArrayEXT = 0x8dc1;
        public const uint Sampler2dArrayShadow = 0x8dc4;
        public const uint Sampler2dArrayShadowEXT = 0x8dc4;
        public const uint Sampler2dArrayShadowNV = 0x8dc4;
        public const uint Sampler2dMultisample = 0x9108;
        public const uint Sampler2dMultisampleArray = 0x910b;
        public const uint Sampler2dMultisampleArrayOES = 0x910b;
        public const uint SamplerBinding = 0x8919;
        public const uint SamplerBuffer = 0x8dc2;
        public const uint SamplerBufferAMD = 0x9001;
        public const uint SamplerBufferEXT = 0x8dc2;
        public const uint SamplerCubeMapArray = 0x900c;
        public const uint SamplerCubeMapArrayARB = 0x900c;
        public const uint SamplerCubeMapArrayEXT = 0x900c;
        public const uint SamplerCubeMapArrayShadow = 0x900d;
        public const uint SamplerCubeMapArrayShadowARB = 0x900d;
        public const uint SamplerCubeMapArrayShadowEXT = 0x900d;
        public const uint SamplerCubeShadow = 0x8dc5;
        public const uint SamplerCubeShadowEXT = 0x8dc5;
        public const uint SamplerCubeShadowNV = 0x8dc5;
        public const uint SamplerExternalOES = 0x8d66;
        public const uint SamplerKHR = 0x82e6;
        public const uint SamplerObjectAMD = 0x9155;
        public const uint SamplerRenderbufferNV = 0x8e56;
        public const uint Samples = 0x80a9;
        public const uint Samples3dfx = 0x86b4;
        public const uint SamplesARB = 0x80a9;
        public const uint SamplesEXT = 0x80a9;
        public const uint SamplesPassed = 0x8914;
        public const uint SamplesPassedARB = 0x8914;
        public const uint SamplesSGIS = 0x80a9;
        public const uint ScalarEXT = 0x87be;
        public const uint ScaleByFourNV = 0x853f;
        public const uint ScaleByOneHalfNV = 0x8540;
        public const uint ScaleByTwoNV = 0x853e;
        public const uint ScalebiasHintSGIX = 0x8322;
        public const uint ScaledResolveFastestEXT = 0x90ba;
        public const uint ScaledResolveNicestEXT = 0x90bb;
        public const uint ScissorBox = 0xc10;
        public const uint ScissorTest = 0xc11;
        public const uint ScreenCoordinatesRend = 0x8490;
        public const uint ScreenKHR = 0x9295;
        public const uint ScreenNV = 0x9295;
        public const uint SecondaryColorArrayAddressNV = 0x8f27;
        public const uint SecondaryColorArrayBufferBindingARB = 0x889c;
        public const uint SecondaryColorArrayEXT = 0x845e;
        public const uint SecondaryColorArrayLengthNV = 0x8f31;
        public const uint SecondaryColorArrayListIBM = 0x192a5;
        public const uint SecondaryColorArrayListStrideIBM = 0x192af;
        public const uint SecondaryColorArrayPointerEXT = 0x845d;
        public const uint SecondaryColorArraySizeEXT = 0x845a;
        public const uint SecondaryColorArrayStrideEXT = 0x845c;
        public const uint SecondaryColorArrayTypeEXT = 0x845b;
        public const uint SecondaryColorNV = 0x852d;
        public const uint SecondaryInterpolatorATI = 0x896d;
        public const uint Separable2d = 0x8012;
        public const uint Separable2dEXT = 0x8012;
        public const uint SeparateAttribs = 0x8c8d;
        public const uint SeparateAttribsEXT = 0x8c8d;
        public const uint SeparateAttribsNV = 0x8c8d;
        public const uint SeparateSpecularColorEXT = 0x81fa;
        public const uint Set = 0x150f;
        public const uint SetAMD = 0x874a;
        public const uint SgxBinaryIMG = 0x8c0a;
        public const uint SgxProgramBinaryIMG = 0x9130;
        public const uint Shader = 0x82e1;
        public const uint ShaderBinaryDmp = 0x9250;
        public const uint ShaderBinaryFormats = 0x8df8;
        public const uint ShaderBinaryViv = 0x8fc4;
        public const uint ShaderCompiler = 0x8dfa;
        public const uint ShaderConsistentNV = 0x86dd;
        public const uint ShaderImageAtomic = 0x82a6;
        public const uint ShaderImageLoad = 0x82a4;
        public const uint ShaderImageStore = 0x82a5;
        public const uint ShaderIncludeARB = 0x8dae;
        public const uint ShaderKHR = 0x82e1;
        public const uint ShaderObjectARB = 0x8b48;
        public const uint ShaderObjectEXT = 0x8b48;
        public const uint ShaderOperationNV = 0x86df;
        public const uint ShaderPixelLocalStorageEXT = 0x8f64;
        public const uint ShaderSourceLength = 0x8b88;
        public const uint ShaderStorageBlock = 0x92e6;
        public const uint ShaderStorageBuffer = 0x90d2;
        public const uint ShaderStorageBufferBinding = 0x90d3;
        public const uint ShaderStorageBufferOffsetAlignment = 0x90df;
        public const uint ShaderStorageBufferSize = 0x90d5;
        public const uint ShaderStorageBufferStart = 0x90d4;
        public const uint ShaderType = 0x8b4f;
        public const uint ShadingLanguageVersion = 0x8b8c;
        public const uint ShadingLanguageVersionARB = 0x8b8c;
        public const uint ShadowAmbientSGIX = 0x80bf;
        public const uint ShadowAttenuationEXT = 0x834e;
        public const uint SharedTexturePaletteEXT = 0x81fb;
        public const uint SharpenTextureFuncPointsSGIS = 0x80b0;
        public const uint Short = 0x1402;
        public const uint Signaled = 0x9119;
        public const uint SignaledAPPLE = 0x9119;
        public const uint SignedAlphaNV = 0x8705;
        public const uint SignedAlpha8NV = 0x8706;
        public const uint SignedHiloNV = 0x86f9;
        public const uint SignedHilo16NV = 0x86fa;
        public const uint SignedHilo8NV = 0x885f;
        public const uint SignedIdentityNV = 0x853c;
        public const uint SignedIntensityNV = 0x8707;
        public const uint SignedIntensity8NV = 0x8708;
        public const uint SignedLuminanceAlphaNV = 0x8703;
        public const uint SignedLuminanceNV = 0x8701;
        public const uint SignedLuminance8Alpha8NV = 0x8704;
        public const uint SignedLuminance8NV = 0x8702;
        public const uint SignedNegateNV = 0x853d;
        public const uint SignedNormalized = 0x8f9c;
        public const uint SignedRgbNV = 0x86fe;
        public const uint SignedRgbUnsignedAlphaNV = 0x870c;
        public const uint SignedRgb8NV = 0x86ff;
        public const uint SignedRgb8UnsignedAlpha8NV = 0x870d;
        public const uint SignedRgbaNV = 0x86fb;
        public const uint SignedRgba8NV = 0x86fc;
        public const uint SimultaneousTextureAndDepthTest = 0x82ac;
        public const uint SimultaneousTextureAndDepthWrite = 0x82ae;
        public const uint SimultaneousTextureAndStencilTest = 0x82ad;
        public const uint SimultaneousTextureAndStencilWrite = 0x82af;
        public const uint SingleColorEXT = 0x81f9;
        public const uint SkipDecodeEXT = 0x8a4a;
        public const uint SkipMissingGlyphNV = 0x90a9;
        public const uint SliceAccumSun = 0x85cc;
        public const uint SluminanceAlphaEXT = 0x8c44;
        public const uint SluminanceAlphaNV = 0x8c44;
        public const uint SluminanceEXT = 0x8c46;
        public const uint SluminanceNV = 0x8c46;
        public const uint Sluminance8Alpha8EXT = 0x8c45;
        public const uint Sluminance8Alpha8NV = 0x8c45;
        public const uint Sluminance8EXT = 0x8c47;
        public const uint Sluminance8NV = 0x8c47;
        public const uint SmCountNV = 0x933b;
        public const uint SmoothLineWidthGranularity = 0xb23;
        public const uint SmoothLineWidthRange = 0xb22;
        public const uint SmoothPointSizeGranularity = 0xb13;
        public const uint SmoothPointSizeRange = 0xb12;
        public const uint SoftlightKHR = 0x929c;
        public const uint SoftlightNV = 0x929c;
        public const uint Spare0NV = 0x852e;
        public const uint Spare0PlusSecondaryColorNV = 0x8532;
        public const uint Spare1NV = 0x852f;
        public const uint SparseTextureFullArrayCubeMipmapsARB = 0x91a9;
        public const uint SpriteAxialSGIX = 0x814c;
        public const uint SpriteAxisSGIX = 0x814a;
        public const uint SpriteEyeAlignedSGIX = 0x814e;
        public const uint SpriteModeSGIX = 0x8149;
        public const uint SpriteObjectAlignedSGIX = 0x814d;
        public const uint SpriteSGIX = 0x8148;
        public const uint SpriteTranslationSGIX = 0x814b;
        public const uint SquareNV = 0x90a3;
        public const uint SrcAlpha = 0x302;
        public const uint SrcAlphaSaturate = 0x308;
        public const uint SrcAtopNV = 0x928e;
        public const uint SrcColor = 0x300;
        public const uint SrcInNV = 0x928a;
        public const uint SrcNV = 0x9286;
        public const uint SrcOutNV = 0x928c;
        public const uint SrcOverNV = 0x9288;
        public const uint Src1Color = 0x88f9;
        public const uint Srgb = 0x8c40;
        public const uint SrgbAlpha = 0x8c42;
        public const uint SrgbAlphaEXT = 0x8c42;
        public const uint SrgbDecodeARB = 0x8299;
        public const uint SrgbEXT = 0x8c40;
        public const uint SrgbRead = 0x8297;
        public const uint SrgbWrite = 0x8298;
        public const uint Srgb8 = 0x8c41;
        public const uint Srgb8Alpha8 = 0x8c43;
        public const uint Srgb8Alpha8EXT = 0x8c43;
        public const uint Srgb8EXT = 0x8c41;
        public const uint Srgb8NV = 0x8c41;
        public const uint StackOverflowKHR = 0x503;
        public const uint StackUnderflowKHR = 0x504;
        public const uint StandardFontNameNV = 0x9072;
        public const uint StateRestore = 0x8bdc;
        public const uint StaticATI = 0x8760;
        public const uint StaticCopy = 0x88e6;
        public const uint StaticCopyARB = 0x88e6;
        public const uint StaticDraw = 0x88e4;
        public const uint StaticDrawARB = 0x88e4;
        public const uint StaticRead = 0x88e5;
        public const uint StaticReadARB = 0x88e5;
        public const uint StaticVertexArrayIBM = 0x19295;
        public const uint Stencil = 0x1802;
        public const uint StencilAttachment = 0x8d20;
        public const uint StencilAttachmentEXT = 0x8d20;
        public const uint StencilAttachmentOES = 0x8d20;
        public const uint StencilBackFail = 0x8801;
        public const uint StencilBackFailATI = 0x8801;
        public const uint StencilBackFunc = 0x8800;
        public const uint StencilBackFuncATI = 0x8800;
        public const uint StencilBackOpValueAMD = 0x874d;
        public const uint StencilBackPassDepthFail = 0x8802;
        public const uint StencilBackPassDepthFailATI = 0x8802;
        public const uint StencilBackPassDepthPass = 0x8803;
        public const uint StencilBackPassDepthPassATI = 0x8803;
        public const uint StencilBackRef = 0x8ca3;
        public const uint StencilBackValueMask = 0x8ca4;
        public const uint StencilBackWritemask = 0x8ca5;
        public const uint StencilClearTagValueEXT = 0x88f3;
        public const uint StencilClearValue = 0xb91;
        public const uint StencilComponents = 0x8285;
        public const uint StencilEXT = 0x1802;
        public const uint StencilFail = 0xb94;
        public const uint StencilFunc = 0xb92;
        public const uint StencilIndex = 0x1901;
        public const uint StencilIndexOES = 0x1901;
        public const uint StencilIndex1 = 0x8d46;
        public const uint StencilIndex1EXT = 0x8d46;
        public const uint StencilIndex1OES = 0x8d46;
        public const uint StencilIndex16 = 0x8d49;
        public const uint StencilIndex16EXT = 0x8d49;
        public const uint StencilIndex4 = 0x8d47;
        public const uint StencilIndex4EXT = 0x8d47;
        public const uint StencilIndex4OES = 0x8d47;
        public const uint StencilIndex8 = 0x8d48;
        public const uint StencilIndex8EXT = 0x8d48;
        public const uint StencilIndex8OES = 0x8d48;
        public const uint StencilOpValueAMD = 0x874c;
        public const uint StencilPassDepthFail = 0xb95;
        public const uint StencilPassDepthPass = 0xb96;
        public const uint StencilRef = 0xb97;
        public const uint StencilRenderable = 0x8288;
        public const uint StencilTagBitsEXT = 0x88f2;
        public const uint StencilTest = 0xb90;
        public const uint StencilTestTwoSideEXT = 0x8910;
        public const uint StencilValueMask = 0xb93;
        public const uint StencilWritemask = 0xb98;
        public const uint Stereo = 0xc33;
        public const uint StorageCachedAPPLE = 0x85be;
        public const uint StorageClientAPPLE = 0x85b4;
        public const uint StoragePrivateAPPLE = 0x85bd;
        public const uint StorageSharedAPPLE = 0x85bf;
        public const uint StreamCopy = 0x88e2;
        public const uint StreamCopyARB = 0x88e2;
        public const uint StreamDraw = 0x88e0;
        public const uint StreamDrawARB = 0x88e0;
        public const uint StreamRasterizationAMD = 0x91a0;
        public const uint StreamRead = 0x88e1;
        public const uint StreamReadARB = 0x88e1;
        public const uint StrictDepthfuncHintPGI = 0x1a216;
        public const uint StrictLightingHintPGI = 0x1a217;
        public const uint StrictScissorHintPGI = 0x1a218;
        public const uint SubATI = 0x8965;
        public const uint SubpixelBits = 0xd50;
        public const uint SubsampleDistanceAMD = 0x883f;
        public const uint SubtractARB = 0x84e7;
        public const uint SuccessNV = 0x902f;
        public const uint SurfaceMappedNV = 0x8700;
        public const uint SurfaceRegisteredNV = 0x86fd;
        public const uint SurfaceStateNV = 0x86eb;
        public const uint SwizzleStqATI = 0x8977;
        public const uint SwizzleStqDqATI = 0x8979;
        public const uint SwizzleStrATI = 0x8976;
        public const uint SwizzleStrDrATI = 0x8978;
        public const uint SwizzleStrqATI = 0x897a;
        public const uint SwizzleStrqDqATI = 0x897b;
        public const uint SyncClEventARB = 0x8240;
        public const uint SyncClEventCompleteARB = 0x8241;
        public const uint SyncCondition = 0x9113;
        public const uint SyncConditionAPPLE = 0x9113;
        public const uint SyncFence = 0x9116;
        public const uint SyncFenceAPPLE = 0x9116;
        public const uint SyncFlags = 0x9115;
        public const uint SyncFlagsAPPLE = 0x9115;
        public const uint SyncGpuCommandsComplete = 0x9117;
        public const uint SyncGpuCommandsCompleteAPPLE = 0x9117;
        public const uint SyncObjectAPPLE = 0x8a53;
        public const uint SyncStatus = 0x9114;
        public const uint SyncStatusAPPLE = 0x9114;
        public const uint SyncX11FenceEXT = 0x90e1;
        public const uint SystemFontNameNV = 0x9073;
        public const uint T2fIuiN3fV2fEXT = 0x81b3;
        public const uint T2fIuiN3fV3fEXT = 0x81b4;
        public const uint T2fIuiV2fEXT = 0x81b1;
        public const uint T2fIuiV3fEXT = 0x81b2;
        public const uint TableTooLarge = 0x8031;
        public const uint TableTooLargeEXT = 0x8031;
        public const uint TangentArrayEXT = 0x8439;
        public const uint TangentArrayPointerEXT = 0x8442;
        public const uint TangentArrayStrideEXT = 0x843f;
        public const uint TangentArrayTypeEXT = 0x843e;
        public const uint TessControlOutputVertices = 0x8e75;
        public const uint TessControlOutputVerticesEXT = 0x8e75;
        public const uint TessControlProgramNV = 0x891e;
        public const uint TessControlProgramParameterBufferNV = 0x8c74;
        public const uint TessControlShader = 0x8e88;
        public const uint TessControlShaderEXT = 0x8e88;
        public const uint TessControlSubroutine = 0x92e9;
        public const uint TessControlSubroutineUniform = 0x92ef;
        public const uint TessControlTexture = 0x829c;
        public const uint TessEvaluationProgramNV = 0x891f;
        public const uint TessEvaluationProgramParameterBufferNV = 0x8c75;
        public const uint TessEvaluationShader = 0x8e87;
        public const uint TessEvaluationShaderEXT = 0x8e87;
        public const uint TessEvaluationSubroutine = 0x92ea;
        public const uint TessEvaluationSubroutineUniform = 0x92f0;
        public const uint TessEvaluationTexture = 0x829d;
        public const uint TessGenMode = 0x8e76;
        public const uint TessGenModeEXT = 0x8e76;
        public const uint TessGenPointMode = 0x8e79;
        public const uint TessGenPointModeEXT = 0x8e79;
        public const uint TessGenSpacing = 0x8e77;
        public const uint TessGenSpacingEXT = 0x8e77;
        public const uint TessGenVertexOrder = 0x8e78;
        public const uint TessGenVertexOrderEXT = 0x8e78;
        public const uint TessellationFactorAMD = 0x9005;
        public const uint TessellationModeAMD = 0x9004;
        public const uint TextFragmentShaderATI = 0x8200;
        public const uint Texture = 0x1702;
        public const uint Texture1d = 0xde0;
        public const uint Texture1dArray = 0x8c18;
        public const uint Texture1dArrayEXT = 0x8c18;
        public const uint Texture1dBindingEXT = 0x8068;
        public const uint Texture1dStackBindingMesax = 0x875d;
        public const uint Texture1dStackMesax = 0x8759;
        public const uint Texture2d = 0xde1;
        public const uint Texture2dArray = 0x8c1a;
        public const uint Texture2dArrayEXT = 0x8c1a;
        public const uint Texture2dBindingEXT = 0x8069;
        public const uint Texture2dMultisample = 0x9100;
        public const uint Texture2dMultisampleArray = 0x9102;
        public const uint Texture2dMultisampleArrayOES = 0x9102;
        public const uint Texture2dStackBindingMesax = 0x875e;
        public const uint Texture2dStackMesax = 0x875a;
        public const uint Texture3d = 0x806f;
        public const uint Texture3dBindingEXT = 0x806a;
        public const uint Texture3dEXT = 0x806f;
        public const uint Texture3dOES = 0x806f;
        public const uint Texture4dBindingSGIS = 0x814f;
        public const uint Texture4dSGIS = 0x8134;
        public const uint Texture4dsizeSGIS = 0x8136;
        public const uint TextureAlphaModulateIMG = 0x8c06;
        public const uint TextureAlphaSize = 0x805f;
        public const uint TextureAlphaSizeEXT = 0x805f;
        public const uint TextureAlphaType = 0x8c13;
        public const uint TextureAlphaTypeARB = 0x8c13;
        public const uint TextureApplicationModeEXT = 0x834f;
        public const uint TextureBaseLevel = 0x813c;
        public const uint TextureBaseLevelSGIS = 0x813c;
        public const uint TextureBinding1d = 0x8068;
        public const uint TextureBinding1dArray = 0x8c1c;
        public const uint TextureBinding1dArrayEXT = 0x8c1c;
        public const uint TextureBinding2d = 0x8069;
        public const uint TextureBinding2dArray = 0x8c1d;
        public const uint TextureBinding2dArrayEXT = 0x8c1d;
        public const uint TextureBinding2dMultisample = 0x9104;
        public const uint TextureBinding2dMultisampleArray = 0x9105;
        public const uint TextureBinding2dMultisampleArrayOES = 0x9105;
        public const uint TextureBinding3d = 0x806a;
        public const uint TextureBinding3dOES = 0x806a;
        public const uint TextureBindingBuffer = 0x8c2c;
        public const uint TextureBindingBufferARB = 0x8c2c;
        public const uint TextureBindingBufferEXT = 0x8c2c;
        public const uint TextureBindingCubeMap = 0x8514;
        public const uint TextureBindingCubeMapARB = 0x8514;
        public const uint TextureBindingCubeMapArray = 0x900a;
        public const uint TextureBindingCubeMapArrayARB = 0x900a;
        public const uint TextureBindingCubeMapArrayEXT = 0x900a;
        public const uint TextureBindingCubeMapEXT = 0x8514;
        public const uint TextureBindingCubeMapOES = 0x8514;
        public const uint TextureBindingExternalOES = 0x8d67;
        public const uint TextureBindingRectangle = 0x84f6;
        public const uint TextureBindingRectangleARB = 0x84f6;
        public const uint TextureBindingRectangleNV = 0x84f6;
        public const uint TextureBindingRenderbufferNV = 0x8e53;
        public const uint TextureBlueSize = 0x805e;
        public const uint TextureBlueSizeEXT = 0x805e;
        public const uint TextureBlueType = 0x8c12;
        public const uint TextureBlueTypeARB = 0x8c12;
        public const uint TextureBorderColor = 0x1004;
        public const uint TextureBorderColorEXT = 0x1004;
        public const uint TextureBorderColorNV = 0x1004;
        public const uint TextureBorderValuesNV = 0x871a;
        public const uint TextureBuffer = 0x8c2a;
        public const uint TextureBufferARB = 0x8c2a;
        public const uint TextureBufferBinding = 0x8c2a;
        public const uint TextureBufferBindingEXT = 0x8c2a;
        public const uint TextureBufferDataStoreBinding = 0x8c2d;
        public const uint TextureBufferDataStoreBindingARB = 0x8c2d;
        public const uint TextureBufferDataStoreBindingEXT = 0x8c2d;
        public const uint TextureBufferEXT = 0x8c2a;
        public const uint TextureBufferFormatARB = 0x8c2e;
        public const uint TextureBufferFormatEXT = 0x8c2e;
        public const uint TextureBufferOffset = 0x919d;
        public const uint TextureBufferOffsetAlignment = 0x919f;
        public const uint TextureBufferOffsetAlignmentEXT = 0x919f;
        public const uint TextureBufferOffsetEXT = 0x919d;
        public const uint TextureBufferSize = 0x919e;
        public const uint TextureBufferSizeEXT = 0x919e;
        public const uint TextureClipmapCenterSGIX = 0x8171;
        public const uint TextureClipmapDepthSGIX = 0x8176;
        public const uint TextureClipmapFrameSGIX = 0x8172;
        public const uint TextureClipmapLodOffsetSGIX = 0x8175;
        public const uint TextureClipmapOffsetSGIX = 0x8173;
        public const uint TextureClipmapVirtualDepthSGIX = 0x8174;
        public const uint TextureColorSamplesNV = 0x9046;
        public const uint TextureColorTableSGI = 0x80bc;
        public const uint TextureColorWritemaskSGIS = 0x81ef;
        public const uint TextureCompareFailValueARB = 0x80bf;
        public const uint TextureCompareFunc = 0x884d;
        public const uint TextureCompareFuncARB = 0x884d;
        public const uint TextureCompareFuncEXT = 0x884d;
        public const uint TextureCompareMode = 0x884c;
        public const uint TextureCompareModeARB = 0x884c;
        public const uint TextureCompareModeEXT = 0x884c;
        public const uint TextureCompareOperatorSGIX = 0x819b;
        public const uint TextureCompareSGIX = 0x819a;
        public const uint TextureCompressed = 0x86a1;
        public const uint TextureCompressedARB = 0x86a1;
        public const uint TextureCompressedBlockHeight = 0x82b2;
        public const uint TextureCompressedBlockSize = 0x82b3;
        public const uint TextureCompressedBlockWidth = 0x82b1;
        public const uint TextureCompressedImageSize = 0x86a0;
        public const uint TextureCompressedImageSizeARB = 0x86a0;
        public const uint TextureCompressionHint = 0x84ef;
        public const uint TextureCompressionHintARB = 0x84ef;
        public const uint TextureConstantDataSunx = 0x81d6;
        public const uint TextureCoordArrayAddressNV = 0x8f25;
        public const uint TextureCoordArrayBufferBindingARB = 0x889a;
        public const uint TextureCoordArrayCountEXT = 0x808b;
        public const uint TextureCoordArrayEXT = 0x8078;
        public const uint TextureCoordArrayLengthNV = 0x8f2f;
        public const uint TextureCoordArrayListIBM = 0x192a2;
        public const uint TextureCoordArrayListStrideIBM = 0x192ac;
        public const uint TextureCoordArrayParallelPointersIntel = 0x83f8;
        public const uint TextureCoordArrayPointerEXT = 0x8092;
        public const uint TextureCoordArraySizeEXT = 0x8088;
        public const uint TextureCoordArrayStrideEXT = 0x808a;
        public const uint TextureCoordArrayTypeEXT = 0x8089;
        public const uint TextureCoordNV = 0x8c79;
        public const uint TextureCoverageSamplesNV = 0x9045;
        public const uint TextureCropRectOES = 0x8b9d;
        public const uint TextureCubeMap = 0x8513;
        public const uint TextureCubeMapARB = 0x8513;
        public const uint TextureCubeMapArray = 0x9009;
        public const uint TextureCubeMapArrayARB = 0x9009;
        public const uint TextureCubeMapArrayEXT = 0x9009;
        public const uint TextureCubeMapEXT = 0x8513;
        public const uint TextureCubeMapNegativeX = 0x8516;
        public const uint TextureCubeMapNegativeXARB = 0x8516;
        public const uint TextureCubeMapNegativeXEXT = 0x8516;
        public const uint TextureCubeMapNegativeXOES = 0x8516;
        public const uint TextureCubeMapNegativeY = 0x8518;
        public const uint TextureCubeMapNegativeYARB = 0x8518;
        public const uint TextureCubeMapNegativeYEXT = 0x8518;
        public const uint TextureCubeMapNegativeYOES = 0x8518;
        public const uint TextureCubeMapNegativeZ = 0x851a;
        public const uint TextureCubeMapNegativeZARB = 0x851a;
        public const uint TextureCubeMapNegativeZEXT = 0x851a;
        public const uint TextureCubeMapNegativeZOES = 0x851a;
        public const uint TextureCubeMapOES = 0x8513;
        public const uint TextureCubeMapPositiveX = 0x8515;
        public const uint TextureCubeMapPositiveXARB = 0x8515;
        public const uint TextureCubeMapPositiveXEXT = 0x8515;
        public const uint TextureCubeMapPositiveXOES = 0x8515;
        public const uint TextureCubeMapPositiveY = 0x8517;
        public const uint TextureCubeMapPositiveYARB = 0x8517;
        public const uint TextureCubeMapPositiveYEXT = 0x8517;
        public const uint TextureCubeMapPositiveYOES = 0x8517;
        public const uint TextureCubeMapPositiveZ = 0x8519;
        public const uint TextureCubeMapPositiveZARB = 0x8519;
        public const uint TextureCubeMapPositiveZEXT = 0x8519;
        public const uint TextureCubeMapPositiveZOES = 0x8519;
        public const uint TextureCubeMapSeamless = 0x884f;
        public const uint TextureDeformationSGIX = 0x8195;
        public const uint TextureDepth = 0x8071;
        public const uint TextureDepthEXT = 0x8071;
        public const uint TextureDepthQCOM = 0x8bd4;
        public const uint TextureDepthSize = 0x884a;
        public const uint TextureDepthSizeARB = 0x884a;
        public const uint TextureDepthType = 0x8c16;
        public const uint TextureDepthTypeARB = 0x8c16;
        public const uint TextureDsSizeNV = 0x871d;
        public const uint TextureDtSizeNV = 0x871e;
        public const uint TextureEnvBiasSGIX = 0x80be;
        public const uint TextureExternalOES = 0x8d65;
        public const uint TextureFilterControlEXT = 0x8500;
        public const uint TextureFilter4SizeSGIS = 0x8147;
        public const uint TextureFixedSampleLocations = 0x9107;
        public const uint TextureFloatComponentsNV = 0x888c;
        public const uint TextureFormatQCOM = 0x8bd6;
        public const uint TextureFreeMemoryATI = 0x87fc;
        public const uint TextureGather = 0x82a2;
        public const uint TextureGatherShadow = 0x82a3;
        public const uint TextureGenModeOES = 0x2500;
        public const uint TextureGenStrOES = 0x8d60;
        public const uint TextureGequalRSGIX = 0x819d;
        public const uint TextureGreenSize = 0x805d;
        public const uint TextureGreenSizeEXT = 0x805d;
        public const uint TextureGreenType = 0x8c11;
        public const uint TextureGreenTypeARB = 0x8c11;
        public const uint TextureHeight = 0x1001;
        public const uint TextureHeightQCOM = 0x8bd3;
        public const uint TextureHiSizeNV = 0x871b;
        public const uint TextureImageFormat = 0x828f;
        public const uint TextureImageType = 0x8290;
        public const uint TextureImageValidQCOM = 0x8bd8;
        public const uint TextureImmutableFormat = 0x912f;
        public const uint TextureImmutableFormatEXT = 0x912f;
        public const uint TextureImmutableLevels = 0x82df;
        public const uint TextureIndexSizeEXT = 0x80ed;
        public const uint TextureIntensitySizeEXT = 0x8061;
        public const uint TextureIntensityTypeARB = 0x8c15;
        public const uint TextureInternalFormat = 0x1003;
        public const uint TextureInternalFormatQCOM = 0x8bd5;
        public const uint TextureLequalRSGIX = 0x819c;
        public const uint TextureLightEXT = 0x8350;
        public const uint TextureLightingModeHP = 0x8167;
        public const uint TextureLoSizeNV = 0x871c;
        public const uint TextureLodBias = 0x8501;
        public const uint TextureLodBiasEXT = 0x8501;
        public const uint TextureLodBiasRSGIX = 0x8190;
        public const uint TextureLodBiasSSGIX = 0x818e;
        public const uint TextureLodBiasTSGIX = 0x818f;
        public const uint TextureLuminanceSizeEXT = 0x8060;
        public const uint TextureLuminanceTypeARB = 0x8c14;
        public const uint TextureMagFilter = 0x2800;
        public const uint TextureMagSizeNV = 0x871f;
        public const uint TextureMaterialFaceEXT = 0x8351;
        public const uint TextureMaterialParameterEXT = 0x8352;
        public const uint TextureMatrixFloatAsIntBitsOES = 0x898f;
        public const uint TextureMaxAnisotropyEXT = 0x84fe;
        public const uint TextureMaxClampRSGIX = 0x836b;
        public const uint TextureMaxClampSSGIX = 0x8369;
        public const uint TextureMaxClampTSGIX = 0x836a;
        public const uint TextureMaxLevel = 0x813d;
        public const uint TextureMaxLevelAPPLE = 0x813d;
        public const uint TextureMaxLevelSGIS = 0x813d;
        public const uint TextureMaxLod = 0x813b;
        public const uint TextureMaxLodSGIS = 0x813b;
        public const uint TextureMemoryLayoutIntel = 0x83ff;
        public const uint TextureMinFilter = 0x2801;
        public const uint TextureMinLod = 0x813a;
        public const uint TextureMinLodSGIS = 0x813a;
        public const uint TextureMultiBufferHintSGIX = 0x812e;
        public const uint TextureNormalEXT = 0x85af;
        public const uint TextureNumLevelsQCOM = 0x8bd9;
        public const uint TextureObjectValidQCOM = 0x8bdb;
        public const uint TexturePostSpecularHP = 0x8168;
        public const uint TexturePreSpecularHP = 0x8169;
        public const uint TexturePriorityEXT = 0x8066;
        public const uint TextureRangeLengthAPPLE = 0x85b7;
        public const uint TextureRangePointerAPPLE = 0x85b8;
        public const uint TextureRectangle = 0x84f5;
        public const uint TextureRectangleARB = 0x84f5;
        public const uint TextureRectangleNV = 0x84f5;
        public const uint TextureRedSize = 0x805c;
        public const uint TextureRedSizeEXT = 0x805c;
        public const uint TextureRedType = 0x8c10;
        public const uint TextureRedTypeARB = 0x8c10;
        public const uint TextureRenderbufferDataStoreBindingNV = 0x8e54;
        public const uint TextureRenderbufferNV = 0x8e55;
        public const uint TextureResidentEXT = 0x8067;
        public const uint TextureSamples = 0x9106;
        public const uint TextureSamplesIMG = 0x9136;
        public const uint TextureShaderNV = 0x86de;
        public const uint TextureShadow = 0x82a1;
        public const uint TextureSharedSize = 0x8c3f;
        public const uint TextureSharedSizeEXT = 0x8c3f;
        public const uint TextureSparseARB = 0x91a6;
        public const uint TextureSrgbDecodeEXT = 0x8a48;
        public const uint TextureStencilSize = 0x88f1;
        public const uint TextureStencilSizeEXT = 0x88f1;
        public const uint TextureStorageHintAPPLE = 0x85bc;
        public const uint TextureSwizzleA = 0x8e45;
        public const uint TextureSwizzleAEXT = 0x8e45;
        public const uint TextureSwizzleB = 0x8e44;
        public const uint TextureSwizzleBEXT = 0x8e44;
        public const uint TextureSwizzleG = 0x8e43;
        public const uint TextureSwizzleGEXT = 0x8e43;
        public const uint TextureSwizzleR = 0x8e42;
        public const uint TextureSwizzleREXT = 0x8e42;
        public const uint TextureSwizzleRgba = 0x8e46;
        public const uint TextureSwizzleRgbaEXT = 0x8e46;
        public const uint TextureTargetQCOM = 0x8bda;
        public const uint TextureTooLargeEXT = 0x8065;
        public const uint TextureTypeQCOM = 0x8bd7;
        public const uint TextureUnsignedRemapModeNV = 0x888f;
        public const uint TextureUsageAngle = 0x93a2;
        public const uint TextureView = 0x82b5;
        public const uint TextureViewMinLayer = 0x82dd;
        public const uint TextureViewMinLayerEXT = 0x82dd;
        public const uint TextureViewMinLevel = 0x82db;
        public const uint TextureViewMinLevelEXT = 0x82db;
        public const uint TextureViewNumLayers = 0x82de;
        public const uint TextureViewNumLayersEXT = 0x82de;
        public const uint TextureViewNumLevels = 0x82dc;
        public const uint TextureViewNumLevelsEXT = 0x82dc;
        public const uint TextureWidth = 0x1000;
        public const uint TextureWidthQCOM = 0x8bd2;
        public const uint TextureWrapQSGIS = 0x8137;
        public const uint TextureWrapR = 0x8072;
        public const uint TextureWrapREXT = 0x8072;
        public const uint TextureWrapROES = 0x8072;
        public const uint TextureWrapS = 0x2802;
        public const uint TextureWrapT = 0x2803;
        public const uint Texture0 = 0x84c0;
        public const uint Texture0ARB = 0x84c0;
        public const uint Texture1 = 0x84c1;
        public const uint Texture1ARB = 0x84c1;
        public const uint Texture10 = 0x84ca;
        public const uint Texture10ARB = 0x84ca;
        public const uint Texture11 = 0x84cb;
        public const uint Texture11ARB = 0x84cb;
        public const uint Texture12 = 0x84cc;
        public const uint Texture12ARB = 0x84cc;
        public const uint Texture13 = 0x84cd;
        public const uint Texture13ARB = 0x84cd;
        public const uint Texture14 = 0x84ce;
        public const uint Texture14ARB = 0x84ce;
        public const uint Texture15 = 0x84cf;
        public const uint Texture15ARB = 0x84cf;
        public const uint Texture16 = 0x84d0;
        public const uint Texture16ARB = 0x84d0;
        public const uint Texture17 = 0x84d1;
        public const uint Texture17ARB = 0x84d1;
        public const uint Texture18 = 0x84d2;
        public const uint Texture18ARB = 0x84d2;
        public const uint Texture19 = 0x84d3;
        public const uint Texture19ARB = 0x84d3;
        public const uint Texture2 = 0x84c2;
        public const uint Texture2ARB = 0x84c2;
        public const uint Texture20 = 0x84d4;
        public const uint Texture20ARB = 0x84d4;
        public const uint Texture21 = 0x84d5;
        public const uint Texture21ARB = 0x84d5;
        public const uint Texture22 = 0x84d6;
        public const uint Texture22ARB = 0x84d6;
        public const uint Texture23 = 0x84d7;
        public const uint Texture23ARB = 0x84d7;
        public const uint Texture24 = 0x84d8;
        public const uint Texture24ARB = 0x84d8;
        public const uint Texture25 = 0x84d9;
        public const uint Texture25ARB = 0x84d9;
        public const uint Texture26 = 0x84da;
        public const uint Texture26ARB = 0x84da;
        public const uint Texture27 = 0x84db;
        public const uint Texture27ARB = 0x84db;
        public const uint Texture28 = 0x84dc;
        public const uint Texture28ARB = 0x84dc;
        public const uint Texture29 = 0x84dd;
        public const uint Texture29ARB = 0x84dd;
        public const uint Texture3 = 0x84c3;
        public const uint Texture3ARB = 0x84c3;
        public const uint Texture30 = 0x84de;
        public const uint Texture30ARB = 0x84de;
        public const uint Texture31 = 0x84df;
        public const uint Texture31ARB = 0x84df;
        public const uint Texture4 = 0x84c4;
        public const uint Texture4ARB = 0x84c4;
        public const uint Texture5 = 0x84c5;
        public const uint Texture5ARB = 0x84c5;
        public const uint Texture6 = 0x84c6;
        public const uint Texture6ARB = 0x84c6;
        public const uint Texture7 = 0x84c7;
        public const uint Texture7ARB = 0x84c7;
        public const uint Texture8 = 0x84c8;
        public const uint Texture8ARB = 0x84c8;
        public const uint Texture9 = 0x84c9;
        public const uint Texture9ARB = 0x84c9;
        public const uint TimeElapsed = 0x88bf;
        public const uint TimeElapsedEXT = 0x88bf;
        public const uint TimeoutExpired = 0x911b;
        public const uint TimeoutExpiredAPPLE = 0x911b;
        public const uint Timestamp = 0x8e28;
        public const uint TimestampEXT = 0x8e28;
        public const uint TopLevelArraySize = 0x930c;
        public const uint TopLevelArrayStride = 0x930d;
        public const uint TrackMatrixNV = 0x8648;
        public const uint TrackMatrixTransformNV = 0x8649;
        public const uint TransformFeedback = 0x8e22;
        public const uint TransformFeedbackActive = 0x8e24;
        public const uint TransformFeedbackAttribsNV = 0x8c7e;
        public const uint TransformFeedbackBinding = 0x8e25;
        public const uint TransformFeedbackBindingNV = 0x8e25;
        public const uint TransformFeedbackBuffer = 0x8c8e;
        public const uint TransformFeedbackBufferActive = 0x8e24;
        public const uint TransformFeedbackBufferActiveNV = 0x8e24;
        public const uint TransformFeedbackBufferBinding = 0x8c8f;
        public const uint TransformFeedbackBufferBindingEXT = 0x8c8f;
        public const uint TransformFeedbackBufferBindingNV = 0x8c8f;
        public const uint TransformFeedbackBufferEXT = 0x8c8e;
        public const uint TransformFeedbackBufferIndex = 0x934b;
        public const uint TransformFeedbackBufferMode = 0x8c7f;
        public const uint TransformFeedbackBufferModeEXT = 0x8c7f;
        public const uint TransformFeedbackBufferModeNV = 0x8c7f;
        public const uint TransformFeedbackBufferNV = 0x8c8e;
        public const uint TransformFeedbackBufferPaused = 0x8e23;
        public const uint TransformFeedbackBufferPausedNV = 0x8e23;
        public const uint TransformFeedbackBufferSize = 0x8c85;
        public const uint TransformFeedbackBufferSizeEXT = 0x8c85;
        public const uint TransformFeedbackBufferSizeNV = 0x8c85;
        public const uint TransformFeedbackBufferStart = 0x8c84;
        public const uint TransformFeedbackBufferStartEXT = 0x8c84;
        public const uint TransformFeedbackBufferStartNV = 0x8c84;
        public const uint TransformFeedbackBufferStride = 0x934c;
        public const uint TransformFeedbackNV = 0x8e22;
        public const uint TransformFeedbackPaused = 0x8e23;
        public const uint TransformFeedbackPrimitivesWritten = 0x8c88;
        public const uint TransformFeedbackPrimitivesWrittenEXT = 0x8c88;
        public const uint TransformFeedbackPrimitivesWrittenNV = 0x8c88;
        public const uint TransformFeedbackRecordNV = 0x8c86;
        public const uint TransformFeedbackVarying = 0x92f4;
        public const uint TransformFeedbackVaryingMaxLength = 0x8c76;
        public const uint TransformFeedbackVaryingMaxLengthEXT = 0x8c76;
        public const uint TransformFeedbackVaryings = 0x8c83;
        public const uint TransformFeedbackVaryingsEXT = 0x8c83;
        public const uint TransformFeedbackVaryingsNV = 0x8c83;
        public const uint TransformHintAPPLE = 0x85b1;
        public const uint Translate2dNV = 0x9090;
        public const uint Translate3dNV = 0x9091;
        public const uint TranslateXNV = 0x908e;
        public const uint TranslateYNV = 0x908f;
        public const uint TranslatedShaderSourceLengthAngle = 0x93a0;
        public const uint TransposeAffine2dNV = 0x9096;
        public const uint TransposeAffine3dNV = 0x9098;
        public const uint TransposeColorMatrixARB = 0x84e6;
        public const uint TransposeCurrentMatrixARB = 0x88b7;
        public const uint TransposeModelviewMatrixARB = 0x84e3;
        public const uint TransposeNV = 0x862c;
        public const uint TransposeProgramMatrixEXT = 0x8e2e;
        public const uint TransposeProjectionMatrixARB = 0x84e4;
        public const uint TransposeTextureMatrixARB = 0x84e5;
        public const uint TriangleFan = 0x6;
        public const uint TriangleListSun = 0x81d7;
        public const uint TriangleMeshSun = 0x8615;
        public const uint TriangleStrip = 0x5;
        public const uint TriangleStripAdjacency = 0xd;
        public const uint TriangleStripAdjacencyARB = 0xd;
        public const uint TriangleStripAdjacencyEXT = 0xd;
        public const uint Triangles = 0x4;
        public const uint TrianglesAdjacency = 0xc;
        public const uint TrianglesAdjacencyARB = 0xc;
        public const uint TrianglesAdjacencyEXT = 0xc;
        public const uint TriangularNV = 0x90a5;
        public const uint Type = 0x92fa;
        public const uint UncorrelatedNV = 0x9282;
        public const uint UndefinedAPPLE = 0x8a1c;
        public const uint UndefinedVertex = 0x8260;
        public const uint UndefinedVertexEXT = 0x8260;
        public const uint Uniform = 0x92e1;
        public const uint UniformArrayStride = 0x8a3c;
        public const uint UniformAtomicCounterBufferIndex = 0x92da;
        public const uint UniformBlock = 0x92e2;
        public const uint UniformBlockActiveUniformIndices = 0x8a43;
        public const uint UniformBlockActiveUniforms = 0x8a42;
        public const uint UniformBlockBinding = 0x8a3f;
        public const uint UniformBlockDataSize = 0x8a40;
        public const uint UniformBlockIndex = 0x8a3a;
        public const uint UniformBlockNameLength = 0x8a41;
        public const uint UniformBlockReferencedByComputeShader = 0x90ec;
        public const uint UniformBlockReferencedByFragmentShader = 0x8a46;
        public const uint UniformBlockReferencedByGeometryShader = 0x8a45;
        public const uint UniformBlockReferencedByTessControlShader = 0x84f0;
        public const uint UniformBlockReferencedByTessEvaluationShader = 0x84f1;
        public const uint UniformBlockReferencedByVertexShader = 0x8a44;
        public const uint UniformBuffer = 0x8a11;
        public const uint UniformBufferBinding = 0x8a28;
        public const uint UniformBufferBindingEXT = 0x8def;
        public const uint UniformBufferEXT = 0x8dee;
        public const uint UniformBufferOffsetAlignment = 0x8a34;
        public const uint UniformBufferSize = 0x8a2a;
        public const uint UniformBufferStart = 0x8a29;
        public const uint UniformIsRowMajor = 0x8a3e;
        public const uint UniformMatrixStride = 0x8a3d;
        public const uint UniformNameLength = 0x8a39;
        public const uint UniformOffset = 0x8a3b;
        public const uint UniformSize = 0x8a38;
        public const uint UniformType = 0x8a37;
        public const uint UnknownContextResetARB = 0x8255;
        public const uint UnknownContextResetEXT = 0x8255;
        public const uint UnpackAlignment = 0xcf5;
        public const uint UnpackClientStorageAPPLE = 0x85b2;
        public const uint UnpackCmykHintEXT = 0x800f;
        public const uint UnpackCompressedBlockDepth = 0x9129;
        public const uint UnpackCompressedBlockHeight = 0x9128;
        public const uint UnpackCompressedBlockSize = 0x912a;
        public const uint UnpackCompressedBlockWidth = 0x9127;
        public const uint UnpackConstantDataSunx = 0x81d5;
        public const uint UnpackImageDepthSGIS = 0x8133;
        public const uint UnpackImageHeight = 0x806e;
        public const uint UnpackImageHeightEXT = 0x806e;
        public const uint UnpackLsbFirst = 0xcf1;
        public const uint UnpackResampleOml = 0x8985;
        public const uint UnpackResampleSGIX = 0x842d;
        public const uint UnpackRowBytesAPPLE = 0x8a16;
        public const uint UnpackRowLength = 0xcf2;
        public const uint UnpackRowLengthEXT = 0xcf2;
        public const uint UnpackSkipImages = 0x806d;
        public const uint UnpackSkipImagesEXT = 0x806d;
        public const uint UnpackSkipPixels = 0xcf4;
        public const uint UnpackSkipPixelsEXT = 0xcf4;
        public const uint UnpackSkipRows = 0xcf3;
        public const uint UnpackSkipRowsEXT = 0xcf3;
        public const uint UnpackSkipVolumesSGIS = 0x8132;
        public const uint UnpackSubsampleRateSGIX = 0x85a1;
        public const uint UnpackSwapBytes = 0xcf0;
        public const uint Unsignaled = 0x9118;
        public const uint UnsignaledAPPLE = 0x9118;
        public const uint UnsignedByte = 0x1401;
        public const uint UnsignedByte233Rev = 0x8362;
        public const uint UnsignedByte332 = 0x8032;
        public const uint UnsignedByte332EXT = 0x8032;
        public const uint UnsignedIdentityNV = 0x8536;
        public const uint UnsignedInt = 0x1405;
        public const uint UnsignedInt1010102 = 0x8036;
        public const uint UnsignedInt1010102EXT = 0x8036;
        public const uint UnsignedInt1010102OES = 0x8df6;
        public const uint UnsignedInt10f11f11fRev = 0x8c3b;
        public const uint UnsignedInt10f11f11fRevEXT = 0x8c3b;
        public const uint UnsignedInt2101010Rev = 0x8368;
        public const uint UnsignedInt2101010RevEXT = 0x8368;
        public const uint UnsignedInt248 = 0x84fa;
        public const uint UnsignedInt248EXT = 0x84fa;
        public const uint UnsignedInt248NV = 0x84fa;
        public const uint UnsignedInt248OES = 0x84fa;
        public const uint UnsignedInt5999Rev = 0x8c3e;
        public const uint UnsignedInt5999RevEXT = 0x8c3e;
        public const uint UnsignedInt8888 = 0x8035;
        public const uint UnsignedInt8888EXT = 0x8035;
        public const uint UnsignedInt8888Rev = 0x8367;
        public const uint UnsignedInt88S8S8RevNV = 0x86db;
        public const uint UnsignedIntAtomicCounter = 0x92db;
        public const uint UnsignedIntImage1d = 0x9062;
        public const uint UnsignedIntImage1dArray = 0x9068;
        public const uint UnsignedIntImage1dArrayEXT = 0x9068;
        public const uint UnsignedIntImage1dEXT = 0x9062;
        public const uint UnsignedIntImage2d = 0x9063;
        public const uint UnsignedIntImage2dArray = 0x9069;
        public const uint UnsignedIntImage2dArrayEXT = 0x9069;
        public const uint UnsignedIntImage2dEXT = 0x9063;
        public const uint UnsignedIntImage2dMultisample = 0x906b;
        public const uint UnsignedIntImage2dMultisampleArray = 0x906c;
        public const uint UnsignedIntImage2dMultisampleArrayEXT = 0x906c;
        public const uint UnsignedIntImage2dMultisampleEXT = 0x906b;
        public const uint UnsignedIntImage2dRect = 0x9065;
        public const uint UnsignedIntImage2dRectEXT = 0x9065;
        public const uint UnsignedIntImage3d = 0x9064;
        public const uint UnsignedIntImage3dEXT = 0x9064;
        public const uint UnsignedIntImageBuffer = 0x9067;
        public const uint UnsignedIntImageBufferEXT = 0x9067;
        public const uint UnsignedIntImageCube = 0x9066;
        public const uint UnsignedIntImageCubeEXT = 0x9066;
        public const uint UnsignedIntImageCubeMapArray = 0x906a;
        public const uint UnsignedIntImageCubeMapArrayEXT = 0x906a;
        public const uint UnsignedIntS8S888NV = 0x86da;
        public const uint UnsignedIntSampler1d = 0x8dd1;
        public const uint UnsignedIntSampler1dArray = 0x8dd6;
        public const uint UnsignedIntSampler1dArrayEXT = 0x8dd6;
        public const uint UnsignedIntSampler1dEXT = 0x8dd1;
        public const uint UnsignedIntSampler2d = 0x8dd2;
        public const uint UnsignedIntSampler2dArray = 0x8dd7;
        public const uint UnsignedIntSampler2dArrayEXT = 0x8dd7;
        public const uint UnsignedIntSampler2dEXT = 0x8dd2;
        public const uint UnsignedIntSampler2dMultisample = 0x910a;
        public const uint UnsignedIntSampler2dMultisampleArray = 0x910d;
        public const uint UnsignedIntSampler2dMultisampleArrayOES = 0x910d;
        public const uint UnsignedIntSampler2dRect = 0x8dd5;
        public const uint UnsignedIntSampler2dRectEXT = 0x8dd5;
        public const uint UnsignedIntSampler3d = 0x8dd3;
        public const uint UnsignedIntSampler3dEXT = 0x8dd3;
        public const uint UnsignedIntSamplerBuffer = 0x8dd8;
        public const uint UnsignedIntSamplerBufferAMD = 0x9003;
        public const uint UnsignedIntSamplerBufferEXT = 0x8dd8;
        public const uint UnsignedIntSamplerCube = 0x8dd4;
        public const uint UnsignedIntSamplerCubeEXT = 0x8dd4;
        public const uint UnsignedIntSamplerCubeMapArray = 0x900f;
        public const uint UnsignedIntSamplerCubeMapArrayARB = 0x900f;
        public const uint UnsignedIntSamplerCubeMapArrayEXT = 0x900f;
        public const uint UnsignedIntSamplerRenderbufferNV = 0x8e58;
        public const uint UnsignedIntVec2 = 0x8dc6;
        public const uint UnsignedIntVec2EXT = 0x8dc6;
        public const uint UnsignedIntVec3 = 0x8dc7;
        public const uint UnsignedIntVec3EXT = 0x8dc7;
        public const uint UnsignedIntVec4 = 0x8dc8;
        public const uint UnsignedIntVec4EXT = 0x8dc8;
        public const uint UnsignedInt16NV = 0x8ff0;
        public const uint UnsignedInt16Vec2NV = 0x8ff1;
        public const uint UnsignedInt16Vec3NV = 0x8ff2;
        public const uint UnsignedInt16Vec4NV = 0x8ff3;
        public const uint UnsignedInt64AMD = 0x8bc2;
        public const uint UnsignedInt64ARB = 0x140f;
        public const uint UnsignedInt64NV = 0x140f;
        public const uint UnsignedInt64Vec2NV = 0x8ff5;
        public const uint UnsignedInt64Vec3NV = 0x8ff6;
        public const uint UnsignedInt64Vec4NV = 0x8ff7;
        public const uint UnsignedInt8NV = 0x8fec;
        public const uint UnsignedInt8Vec2NV = 0x8fed;
        public const uint UnsignedInt8Vec3NV = 0x8fee;
        public const uint UnsignedInt8Vec4NV = 0x8fef;
        public const uint UnsignedInvertNV = 0x8537;
        public const uint UnsignedNormalized = 0x8c17;
        public const uint UnsignedNormalizedARB = 0x8c17;
        public const uint UnsignedNormalizedEXT = 0x8c17;
        public const uint UnsignedShort = 0x1403;
        public const uint UnsignedShort1555Rev = 0x8366;
        public const uint UnsignedShort1555RevEXT = 0x8366;
        public const uint UnsignedShort4444 = 0x8033;
        public const uint UnsignedShort4444EXT = 0x8033;
        public const uint UnsignedShort4444Rev = 0x8365;
        public const uint UnsignedShort4444RevEXT = 0x8365;
        public const uint UnsignedShort4444RevIMG = 0x8365;
        public const uint UnsignedShort5551 = 0x8034;
        public const uint UnsignedShort5551EXT = 0x8034;
        public const uint UnsignedShort565 = 0x8363;
        public const uint UnsignedShort565Rev = 0x8364;
        public const uint UnsignedShort88APPLE = 0x85ba;
        public const uint UnsignedShort88Mesa = 0x85ba;
        public const uint UnsignedShort88RevAPPLE = 0x85bb;
        public const uint UnsignedShort88RevMesa = 0x85bb;
        public const uint UpperLeft = 0x8ca2;
        public const uint UseMissingGlyphNV = 0x90aa;
        public const uint Utf16NV = 0x909b;
        public const uint Utf8NV = 0x909a;
        public const uint ValidateStatus = 0x8b83;
        public const uint VariableANV = 0x8523;
        public const uint VariableBNV = 0x8524;
        public const uint VariableCNV = 0x8525;
        public const uint VariableDNV = 0x8526;
        public const uint VariableENV = 0x8527;
        public const uint VariableFNV = 0x8528;
        public const uint VariableGNV = 0x8529;
        public const uint VariantArrayEXT = 0x87e8;
        public const uint VariantArrayPointerEXT = 0x87e9;
        public const uint VariantArrayStrideEXT = 0x87e6;
        public const uint VariantArrayTypeEXT = 0x87e7;
        public const uint VariantDatatypeEXT = 0x87e5;
        public const uint VariantEXT = 0x87c1;
        public const uint VariantValueEXT = 0x87e4;
        public const uint VboFreeMemoryATI = 0x87fb;
        public const uint VectorEXT = 0x87bf;
        public const uint Vendor = 0x1f00;
        public const uint Version = 0x1f02;
        public const uint VertexArrayAddressNV = 0x8f21;
        public const uint VertexArrayBinding = 0x85b5;
        public const uint VertexArrayBindingAPPLE = 0x85b5;
        public const uint VertexArrayBindingOES = 0x85b5;
        public const uint VertexArrayBufferBindingARB = 0x8896;
        public const uint VertexArrayCountEXT = 0x807d;
        public const uint VertexArrayEXT = 0x8074;
        public const uint VertexArrayKHR = 0x8074;
        public const uint VertexArrayLengthNV = 0x8f2b;
        public const uint VertexArrayListIBM = 0x1929e;
        public const uint VertexArrayListStrideIBM = 0x192a8;
        public const uint VertexArrayObjectAMD = 0x9154;
        public const uint VertexArrayObjectEXT = 0x9154;
        public const uint VertexArrayParallelPointersIntel = 0x83f5;
        public const uint VertexArrayPointerEXT = 0x808e;
        public const uint VertexArrayRangeAPPLE = 0x851d;
        public const uint VertexArrayRangeLengthAPPLE = 0x851e;
        public const uint VertexArrayRangeLengthNV = 0x851e;
        public const uint VertexArrayRangeNV = 0x851d;
        public const uint VertexArrayRangePointerAPPLE = 0x8521;
        public const uint VertexArrayRangePointerNV = 0x8521;
        public const uint VertexArrayRangeValidNV = 0x851f;
        public const uint VertexArrayRangeWithoutFlushNV = 0x8533;
        public const uint VertexArraySizeEXT = 0x807a;
        public const uint VertexArrayStorageHintAPPLE = 0x851f;
        public const uint VertexArrayStrideEXT = 0x807c;
        public const uint VertexArrayTypeEXT = 0x807b;
        public const uint VertexAttribArrayAddressNV = 0x8f20;
        public const uint VertexAttribArrayBufferBinding = 0x889f;
        public const uint VertexAttribArrayBufferBindingARB = 0x889f;
        public const uint VertexAttribArrayDivisor = 0x88fe;
        public const uint VertexAttribArrayDivisorAngle = 0x88fe;
        public const uint VertexAttribArrayDivisorARB = 0x88fe;
        public const uint VertexAttribArrayDivisorEXT = 0x88fe;
        public const uint VertexAttribArrayDivisorNV = 0x88fe;
        public const uint VertexAttribArrayEnabled = 0x8622;
        public const uint VertexAttribArrayEnabledARB = 0x8622;
        public const uint VertexAttribArrayInteger = 0x88fd;
        public const uint VertexAttribArrayIntegerEXT = 0x88fd;
        public const uint VertexAttribArrayIntegerNV = 0x88fd;
        public const uint VertexAttribArrayLengthNV = 0x8f2a;
        public const uint VertexAttribArrayLong = 0x874e;
        public const uint VertexAttribArrayNormalized = 0x886a;
        public const uint VertexAttribArrayNormalizedARB = 0x886a;
        public const uint VertexAttribArrayPointer = 0x8645;
        public const uint VertexAttribArrayPointerARB = 0x8645;
        public const uint VertexAttribArraySize = 0x8623;
        public const uint VertexAttribArraySizeARB = 0x8623;
        public const uint VertexAttribArrayStride = 0x8624;
        public const uint VertexAttribArrayStrideARB = 0x8624;
        public const uint VertexAttribArrayType = 0x8625;
        public const uint VertexAttribArrayTypeARB = 0x8625;
        public const uint VertexAttribArrayUnifiedNV = 0x8f1e;
        public const uint VertexAttribArray0NV = 0x8650;
        public const uint VertexAttribArray1NV = 0x8651;
        public const uint VertexAttribArray10NV = 0x865a;
        public const uint VertexAttribArray11NV = 0x865b;
        public const uint VertexAttribArray12NV = 0x865c;
        public const uint VertexAttribArray13NV = 0x865d;
        public const uint VertexAttribArray14NV = 0x865e;
        public const uint VertexAttribArray15NV = 0x865f;
        public const uint VertexAttribArray2NV = 0x8652;
        public const uint VertexAttribArray3NV = 0x8653;
        public const uint VertexAttribArray4NV = 0x8654;
        public const uint VertexAttribArray5NV = 0x8655;
        public const uint VertexAttribArray6NV = 0x8656;
        public const uint VertexAttribArray7NV = 0x8657;
        public const uint VertexAttribArray8NV = 0x8658;
        public const uint VertexAttribArray9NV = 0x8659;
        public const uint VertexAttribBinding = 0x82d4;
        public const uint VertexAttribMap1APPLE = 0x8a00;
        public const uint VertexAttribMap1CoeffAPPLE = 0x8a03;
        public const uint VertexAttribMap1DomainAPPLE = 0x8a05;
        public const uint VertexAttribMap1OrderAPPLE = 0x8a04;
        public const uint VertexAttribMap1SizeAPPLE = 0x8a02;
        public const uint VertexAttribMap2APPLE = 0x8a01;
        public const uint VertexAttribMap2CoeffAPPLE = 0x8a07;
        public const uint VertexAttribMap2DomainAPPLE = 0x8a09;
        public const uint VertexAttribMap2OrderAPPLE = 0x8a08;
        public const uint VertexAttribMap2SizeAPPLE = 0x8a06;
        public const uint VertexAttribRelativeOffset = 0x82d5;
        public const uint VertexBindingBuffer = 0x8f4f;
        public const uint VertexBindingDivisor = 0x82d6;
        public const uint VertexBindingOffset = 0x82d7;
        public const uint VertexBindingStride = 0x82d8;
        public const uint VertexBlendARB = 0x86a7;
        public const uint VertexConsistentHintPGI = 0x1a22b;
        public const uint VertexDataHintPGI = 0x1a22a;
        public const uint VertexElementSwizzleAMD = 0x91a4;
        public const uint VertexIdNV = 0x8c7b;
        public const uint VertexIdSwizzleAMD = 0x91a5;
        public const uint VertexPreclipHintSGIX = 0x83ef;
        public const uint VertexPreclipSGIX = 0x83ee;
        public const uint VertexProgramARB = 0x8620;
        public const uint VertexProgramBindingNV = 0x864a;
        public const uint VertexProgramNV = 0x8620;
        public const uint VertexProgramParameterBufferNV = 0x8da2;
        public const uint VertexProgramPointSize = 0x8642;
        public const uint VertexProgramPointSizeARB = 0x8642;
        public const uint VertexProgramPointSizeNV = 0x8642;
        public const uint VertexProgramTwoSideARB = 0x8643;
        public const uint VertexProgramTwoSideNV = 0x8643;
        public const uint VertexShaderBindingEXT = 0x8781;
        public const uint VertexShaderEXT = 0x8780;
        public const uint VertexShaderInstructionsEXT = 0x87cf;
        public const uint VertexShaderInvariantsEXT = 0x87d1;
        public const uint VertexShaderLocalConstantsEXT = 0x87d2;
        public const uint VertexShaderLocalsEXT = 0x87d3;
        public const uint VertexShaderOptimizedEXT = 0x87d4;
        public const uint VertexShaderVariantsEXT = 0x87d0;
        public const uint VertexSourceATI = 0x8774;
        public const uint VertexStateProgramNV = 0x8621;
        public const uint VertexStream0ATI = 0x876c;
        public const uint VertexStream1ATI = 0x876d;
        public const uint VertexStream2ATI = 0x876e;
        public const uint VertexStream3ATI = 0x876f;
        public const uint VertexStream4ATI = 0x8770;
        public const uint VertexStream5ATI = 0x8771;
        public const uint VertexStream6ATI = 0x8772;
        public const uint VertexStream7ATI = 0x8773;
        public const uint VertexSubroutine = 0x92e8;
        public const uint VertexSubroutineUniform = 0x92ee;
        public const uint VertexTexture = 0x829b;
        public const uint VertexWeightArrayEXT = 0x850c;
        public const uint VertexWeightArrayPointerEXT = 0x8510;
        public const uint VertexWeightArraySizeEXT = 0x850d;
        public const uint VertexWeightArrayStrideEXT = 0x850f;
        public const uint VertexWeightArrayTypeEXT = 0x850e;
        public const uint VertexWeightingEXT = 0x8509;
        public const uint VibranceBiasNV = 0x8719;
        public const uint VibranceScaleNV = 0x8713;
        public const uint VideoBufferBindingNV = 0x9021;
        public const uint VideoBufferInternalFormatNV = 0x902d;
        public const uint VideoBufferNV = 0x9020;
        public const uint VideoBufferPitchNV = 0x9028;
        public const uint VideoCaptureFieldLowerHeightNV = 0x903b;
        public const uint VideoCaptureFieldUpperHeightNV = 0x903a;
        public const uint VideoCaptureFrameHeightNV = 0x9039;
        public const uint VideoCaptureFrameWidthNV = 0x9038;
        public const uint VideoCaptureSurfaceOriginNV = 0x903c;
        public const uint VideoCaptureTo422SupportedNV = 0x9026;
        public const uint VideoColorConversionMatrixNV = 0x9029;
        public const uint VideoColorConversionMaxNV = 0x902a;
        public const uint VideoColorConversionMinNV = 0x902b;
        public const uint VideoColorConversionOffsetNV = 0x902c;
        public const uint ViewClass128Bits = 0x82c4;
        public const uint ViewClass16Bits = 0x82ca;
        public const uint ViewClass24Bits = 0x82c9;
        public const uint ViewClass32Bits = 0x82c8;
        public const uint ViewClass48Bits = 0x82c7;
        public const uint ViewClass64Bits = 0x82c6;
        public const uint ViewClass8Bits = 0x82cb;
        public const uint ViewClass96Bits = 0x82c5;
        public const uint ViewClassBptcFloat = 0x82d3;
        public const uint ViewClassBptcUnorm = 0x82d2;
        public const uint ViewClassRgtc1Red = 0x82d0;
        public const uint ViewClassRgtc2Rg = 0x82d1;
        public const uint ViewClassS3tcDxt1Rgb = 0x82cc;
        public const uint ViewClassS3tcDxt1Rgba = 0x82cd;
        public const uint ViewClassS3tcDxt3Rgba = 0x82ce;
        public const uint ViewClassS3tcDxt5Rgba = 0x82cf;
        public const uint ViewCompatibilityClass = 0x82b6;
        public const uint Viewport = 0xba2;
        public const uint ViewportBoundsRange = 0x825d;
        public const uint ViewportIndexProvokingVertex = 0x825f;
        public const uint ViewportSubpixelBits = 0x825c;
        public const uint VirtualPageSizeIndexARB = 0x91a7;
        public const uint VirtualPageSizeXAMD = 0x9195;
        public const uint VirtualPageSizeXARB = 0x9195;
        public const uint VirtualPageSizeYAMD = 0x9196;
        public const uint VirtualPageSizeYARB = 0x9196;
        public const uint VirtualPageSizeZAMD = 0x9197;
        public const uint VirtualPageSizeZARB = 0x9197;
        public const uint VividlightNV = 0x92a6;
        public const uint VolatileAPPLE = 0x8a1a;
        public const uint WEXT = 0x87d8;
        public const uint WaitFailed = 0x911d;
        public const uint WaitFailedAPPLE = 0x911d;
        public const uint WarpSizeNV = 0x9339;
        public const uint WarpsPerSmNV = 0x933a;
        public const uint WeightArrayARB = 0x86ad;
        public const uint WeightArrayBufferBindingARB = 0x889e;
        public const uint WeightArrayBufferBindingOES = 0x889e;
        public const uint WeightArrayOES = 0x86ad;
        public const uint WeightArrayPointerARB = 0x86ac;
        public const uint WeightArrayPointerOES = 0x86ac;
        public const uint WeightArraySizeARB = 0x86ab;
        public const uint WeightArraySizeOES = 0x86ab;
        public const uint WeightArrayStrideARB = 0x86aa;
        public const uint WeightArrayStrideOES = 0x86aa;
        public const uint WeightArrayTypeARB = 0x86a9;
        public const uint WeightArrayTypeOES = 0x86a9;
        public const uint WeightSumUnityARB = 0x86a6;
        public const uint WideLineHintPGI = 0x1a222;
        public const uint WrapBorderSun = 0x81d4;
        public const uint WriteDiscardNV = 0x88be;
        public const uint WriteOnly = 0x88b9;
        public const uint WriteOnlyARB = 0x88b9;
        public const uint WriteOnlyOES = 0x88b9;
        public const uint WritePixelDataRangeLengthNV = 0x887a;
        public const uint WritePixelDataRangeNV = 0x8878;
        public const uint WritePixelDataRangePointerNV = 0x887c;
        public const uint WriteonlyRenderingQCOM = 0x8823;
        public const uint XEXT = 0x87d5;
        public const uint Xor = 0x1506;
        public const uint XorNV = 0x1506;
        public const uint YEXT = 0x87d6;
        public const uint Ycbaycr8a4224NV = 0x9032;
        public const uint Ycbcr422APPLE = 0x85b9;
        public const uint YcbcrMesa = 0x8757;
        public const uint Ycbycr8422NV = 0x9031;
        public const uint Ycrcb422SGIX = 0x81bb;
        public const uint Ycrcb444SGIX = 0x81bc;
        public const uint YcrcbSGIX = 0x8318;
        public const uint YcrcbaSGIX = 0x8319;
        public const uint ZEXT = 0x87d7;
        public const uint Z400BinaryAMD = 0x8740;
        public const uint Z4y12z4cb12z4a12z4y12z4cr12z4a124224NV = 0x9036;
        public const uint Z4y12z4cb12z4cr12444NV = 0x9037;
        public const uint Z4y12z4cb12z4y12z4cr12422NV = 0x9035;
        public const uint Z6y10z6cb10z6a10z6y10z6cr10z6a104224NV = 0x9034;
        public const uint Z6y10z6cb10z6y10z6cr10422NV = 0x9033;
        public const uint ZeroEXT = 0x87dd;
    }
    public enum AttribMask : uint
    {
        ColorBufferBit = 0x4000,
        DepthBufferBit = 0x100,
        MultisampleBit3dfx = 0x20000000,
        MultisampleBitARB = 0x20000000,
        MultisampleBitEXT = 0x20000000,
        StencilBufferBit = 0x400,
    }
    public enum AlphaFunction : uint
    {
        Always = 0x207,
        Equal = 0x202,
        Gequal = 0x206,
        Greater = 0x204,
        Lequal = 0x203,
        Less = 0x201,
        Never = 0x200,
        Notequal = 0x205,
    }
    public enum BlendEquationModeEXT : uint
    {
        AlphaMaxSGIX = 0x8321,
        AlphaMinSGIX = 0x8320,
        FuncAddEXT = 0x8006,
        FuncReverseSubtractEXT = 0x800b,
        FuncSubtractEXT = 0x800a,
        MaxEXT = 0x8008,
        MinEXT = 0x8007,
    }
    public enum BlendingFactorDest : uint
    {
        ConstantAlphaEXT = 0x8003,
        ConstantColorEXT = 0x8001,
        DstAlpha = 0x304,
        One = 0x1,
        OneMinusConstantAlphaEXT = 0x8004,
        OneMinusConstantColorEXT = 0x8002,
        OneMinusDstAlpha = 0x305,
        OneMinusSrcAlpha = 0x303,
        OneMinusSrcColor = 0x301,
        SrcAlpha = 0x302,
        SrcColor = 0x300,
        Zero = 0x0,
    }
    public enum BlendingFactorSrc : uint
    {
        ConstantAlphaEXT = 0x8003,
        ConstantColorEXT = 0x8001,
        DstAlpha = 0x304,
        DstColor = 0x306,
        One = 0x1,
        OneMinusConstantAlphaEXT = 0x8004,
        OneMinusConstantColorEXT = 0x8002,
        OneMinusDstAlpha = 0x305,
        OneMinusDstColor = 0x307,
        OneMinusSrcAlpha = 0x303,
        SrcAlpha = 0x302,
        SrcAlphaSaturate = 0x308,
        Zero = 0x0,
    }
    public enum Boolean : uint
    {
        False = 0x0,
        True = 0x1,
    }
    public enum ClearBufferMask : uint
    {
        ColorBufferBit = 0x4000,
        CoverageBufferBitNV = 0x8000,
        DepthBufferBit = 0x100,
        StencilBufferBit = 0x400,
    }
    public enum ClipPlaneName : uint
    {
        ClipDistance0 = 0x3000,
        ClipDistance1 = 0x3001,
        ClipDistance2 = 0x3002,
        ClipDistance3 = 0x3003,
        ClipDistance4 = 0x3004,
        ClipDistance5 = 0x3005,
        ClipDistance6 = 0x3006,
        ClipDistance7 = 0x3007,
    }
    public enum ColorMaterialFace : uint
    {
        Back = 0x405,
        Front = 0x404,
        FrontAndBack = 0x408,
    }
    public enum ColorPointerType : uint
    {
        Byte = 0x1400,
        Double = 0x140a,
        Float = 0x1406,
        Int = 0x1404,
        Short = 0x1402,
        UnsignedByte = 0x1401,
        UnsignedInt = 0x1405,
        UnsignedShort = 0x1403,
    }
    public enum ColorTableParameterPNameSGI : uint
    {
        ColorTableBias = 0x80d7,
        ColorTableBiasSGI = 0x80d7,
        ColorTableScale = 0x80d6,
        ColorTableScaleSGI = 0x80d6,
    }
    public enum ColorTableTargetSGI : uint
    {
        ColorTable = 0x80d0,
        ColorTableSGI = 0x80d0,
        PostColorMatrixColorTable = 0x80d2,
        PostColorMatrixColorTableSGI = 0x80d2,
        PostConvolutionColorTable = 0x80d1,
        PostConvolutionColorTableSGI = 0x80d1,
        ProxyColorTable = 0x80d3,
        ProxyColorTableSGI = 0x80d3,
        ProxyPostColorMatrixColorTable = 0x80d5,
        ProxyPostColorMatrixColorTableSGI = 0x80d5,
        ProxyPostConvolutionColorTable = 0x80d4,
        ProxyPostConvolutionColorTableSGI = 0x80d4,
        ProxyTextureColorTableSGI = 0x80bd,
        TextureColorTableSGI = 0x80bc,
    }
    public enum ContextFlagMask : uint
    {
        ContextFlagDebugBit = 0x2,
        ContextFlagDebugBitKHR = 0x2,
        ContextFlagForwardCompatibleBit = 0x1,
        ContextFlagRobustAccessBitARB = 0x4,
    }
    public enum ContextProfileMask : uint
    {
        ContextCompatibilityProfileBit = 0x2,
        ContextCoreProfileBit = 0x1,
    }
    public enum ConvolutionBorderModeEXT : uint
    {
        Reduce = 0x8016,
        ReduceEXT = 0x8016,
    }
    public enum ConvolutionParameterEXT : uint
    {
        ConvolutionBorderMode = 0x8013,
        ConvolutionBorderModeEXT = 0x8013,
        ConvolutionFilterBias = 0x8015,
        ConvolutionFilterBiasEXT = 0x8015,
        ConvolutionFilterScale = 0x8014,
        ConvolutionFilterScaleEXT = 0x8014,
    }
    public enum ConvolutionTargetEXT : uint
    {
        Convolution1d = 0x8010,
        Convolution1dEXT = 0x8010,
        Convolution2d = 0x8011,
        Convolution2dEXT = 0x8011,
    }
    public enum CullFaceMode : uint
    {
        Back = 0x405,
        Front = 0x404,
        FrontAndBack = 0x408,
    }
    public enum DepthFunction : uint
    {
        Always = 0x207,
        Equal = 0x202,
        Gequal = 0x206,
        Greater = 0x204,
        Lequal = 0x203,
        Less = 0x201,
        Never = 0x200,
        Notequal = 0x205,
    }
    public enum DrawBufferMode : uint
    {
        Back = 0x405,
        BackLeft = 0x402,
        BackRight = 0x403,
        Front = 0x404,
        FrontAndBack = 0x408,
        FrontLeft = 0x400,
        FrontRight = 0x401,
        Left = 0x406,
        None = 0x0,
        NoneOES = 0x0,
        Right = 0x407,
    }
    public enum EnableCap : uint
    {
        AsyncDrawPixelsSGIX = 0x835d,
        AsyncHistogramSGIX = 0x832c,
        AsyncReadPixelsSGIX = 0x835e,
        AsyncTexImageSGIX = 0x835c,
        Blend = 0xbe2,
        CalligraphicFragmentSGIX = 0x8183,
        ColorLogicOp = 0xbf2,
        ColorTableSGI = 0x80d0,
        Convolution1dEXT = 0x8010,
        Convolution2dEXT = 0x8011,
        CullFace = 0xb44,
        DepthTest = 0xb71,
        Dither = 0xbd0,
        FogOffsetSGIX = 0x8198,
        FragmentColorMaterialSGIX = 0x8401,
        FragmentLight0SGIX = 0x840c,
        FragmentLight1SGIX = 0x840d,
        FragmentLight2SGIX = 0x840e,
        FragmentLight3SGIX = 0x840f,
        FragmentLight4SGIX = 0x8410,
        FragmentLight5SGIX = 0x8411,
        FragmentLight6SGIX = 0x8412,
        FragmentLight7SGIX = 0x8413,
        FragmentLightingSGIX = 0x8400,
        FramezoomSGIX = 0x818b,
        HistogramEXT = 0x8024,
        InterlaceSGIX = 0x8094,
        IrInstrument1SGIX = 0x817f,
        LineSmooth = 0xb20,
        MinmaxEXT = 0x802e,
        MultisampleSGIS = 0x809d,
        PixelTextureSGIS = 0x8353,
        PixelTexGenSGIX = 0x8139,
        PolygonOffsetFill = 0x8037,
        PolygonOffsetLine = 0x2a02,
        PolygonOffsetPoint = 0x2a01,
        PolygonSmooth = 0xb41,
        PostColorMatrixColorTableSGI = 0x80d2,
        PostConvolutionColorTableSGI = 0x80d1,
        ReferencePlaneSGIX = 0x817d,
        RescaleNormalEXT = 0x803a,
        SampleAlphaToMaskSGIS = 0x809e,
        SampleAlphaToOneSGIS = 0x809f,
        SampleMaskSGIS = 0x80a0,
        ScissorTest = 0xc11,
        Separable2dEXT = 0x8012,
        SharedTexturePaletteEXT = 0x81fb,
        SpriteSGIX = 0x8148,
        StencilTest = 0xb90,
        Texture1d = 0xde0,
        Texture2d = 0xde1,
        Texture3dEXT = 0x806f,
        Texture4dSGIS = 0x8134,
        TextureColorTableSGI = 0x80bc,
    }
    public enum ErrorCode : uint
    {
        InvalidEnum = 0x500,
        InvalidFramebufferOperation = 0x506,
        InvalidFramebufferOperationEXT = 0x506,
        InvalidFramebufferOperationOES = 0x506,
        InvalidOperation = 0x502,
        InvalidValue = 0x501,
        NoError = 0x0,
        OutOfMemory = 0x505,
        TableTooLarge = 0x8031,
        TableTooLargeEXT = 0x8031,
        TextureTooLargeEXT = 0x8065,
    }
    public enum FfdTargetSGIX : uint
    {
        GeometryDeformationSGIX = 0x8194,
        TextureDeformationSGIX = 0x8195,
    }
    public enum FogCoordinatePointerType : uint
    {
        Float = 0x1406,
        Double = 0x140a,
    }
    public enum FogMode : uint
    {
        FogFuncSGIS = 0x812a,
        Linear = 0x2601,
    }
    public enum FogParameter : uint
    {
        FogOffsetValueSGIX = 0x8199,
    }
    public enum FogPointerTypeEXT : uint
    {
        Float = 0x1406,
        Double = 0x140a,
    }
    public enum FogPointerTypeIBM : uint
    {
        Float = 0x1406,
        Double = 0x140a,
    }
    public enum FragmentLightModelParameterSGIX : uint
    {
        FragmentLightModelAmbientSGIX = 0x840a,
        FragmentLightModelLocalViewerSGIX = 0x8408,
        FragmentLightModelNormalInterpolationSGIX = 0x840b,
        FragmentLightModelTwoSideSGIX = 0x8409,
    }
    public enum FrontFaceDirection : uint
    {
        Ccw = 0x901,
        Cw = 0x900,
    }
    public enum GetColorTableParameterPNameSGI : uint
    {
        ColorTableAlphaSizeSGI = 0x80dd,
        ColorTableBiasSGI = 0x80d7,
        ColorTableBlueSizeSGI = 0x80dc,
        ColorTableFormatSGI = 0x80d8,
        ColorTableGreenSizeSGI = 0x80db,
        ColorTableIntensitySizeSGI = 0x80df,
        ColorTableLuminanceSizeSGI = 0x80de,
        ColorTableRedSizeSGI = 0x80da,
        ColorTableScaleSGI = 0x80d6,
        ColorTableWidthSGI = 0x80d9,
    }
    public enum GetConvolutionParameter : uint
    {
        ConvolutionBorderModeEXT = 0x8013,
        ConvolutionFilterBiasEXT = 0x8015,
        ConvolutionFilterScaleEXT = 0x8014,
        ConvolutionFormatEXT = 0x8017,
        ConvolutionHeightEXT = 0x8019,
        ConvolutionWidthEXT = 0x8018,
        MaxConvolutionHeightEXT = 0x801b,
        MaxConvolutionWidthEXT = 0x801a,
    }
    public enum GetHistogramParameterPNameEXT : uint
    {
        HistogramAlphaSizeEXT = 0x802b,
        HistogramBlueSizeEXT = 0x802a,
        HistogramFormatEXT = 0x8027,
        HistogramGreenSizeEXT = 0x8029,
        HistogramLuminanceSizeEXT = 0x802c,
        HistogramRedSizeEXT = 0x8028,
        HistogramSinkEXT = 0x802d,
        HistogramWidthEXT = 0x8026,
    }
    public enum GetMinmaxParameterPNameEXT : uint
    {
        MinmaxFormat = 0x802f,
        MinmaxFormatEXT = 0x802f,
        MinmaxSink = 0x8030,
        MinmaxSinkEXT = 0x8030,
    }
    public enum GetPName : uint
    {
        AliasedLineWidthRange = 0x846e,
        AlphaTestFuncQCOM = 0xbc1,
        AlphaTestQCOM = 0xbc0,
        AlphaTestRefQCOM = 0xbc2,
        AsyncDrawPixelsSGIX = 0x835d,
        AsyncHistogramSGIX = 0x832c,
        AsyncMarkerSGIX = 0x8329,
        AsyncReadPixelsSGIX = 0x835e,
        AsyncTexImageSGIX = 0x835c,
        Blend = 0xbe2,
        BlendColorEXT = 0x8005,
        BlendDst = 0xbe0,
        BlendEquationEXT = 0x8009,
        BlendSrc = 0xbe1,
        CalligraphicFragmentSGIX = 0x8183,
        ColorArrayCountEXT = 0x8084,
        ColorClearValue = 0xc22,
        ColorLogicOp = 0xbf2,
        ColorMatrixSGI = 0x80b1,
        ColorMatrixStackDepthSGI = 0x80b2,
        ColorTableSGI = 0x80d0,
        ColorWritemask = 0xc23,
        Convolution1dEXT = 0x8010,
        Convolution2dEXT = 0x8011,
        ConvolutionHintSGIX = 0x8316,
        CullFace = 0xb44,
        CullFaceMode = 0xb45,
        DeformationsMaskSGIX = 0x8196,
        DepthClearValue = 0xb73,
        DepthFunc = 0xb74,
        DepthRange = 0xb70,
        DepthTest = 0xb71,
        DepthWritemask = 0xb72,
        DetailTexture2dBindingSGIS = 0x8096,
        DistanceAttenuationSGIS = 0x8129,
        Dither = 0xbd0,
        Doublebuffer = 0xc32,
        DrawBuffer = 0xc01,
        DrawBufferEXT = 0xc01,
        EdgeFlagArrayCountEXT = 0x808d,
        FogFuncPointsSGIS = 0x812b,
        FogOffsetSGIX = 0x8198,
        FogOffsetValueSGIX = 0x8199,
        FragmentColorMaterialFaceSGIX = 0x8402,
        FragmentColorMaterialParameterSGIX = 0x8403,
        FragmentColorMaterialSGIX = 0x8401,
        FragmentLight0SGIX = 0x840c,
        FragmentLightingSGIX = 0x8400,
        FragmentLightModelAmbientSGIX = 0x840a,
        FragmentLightModelLocalViewerSGIX = 0x8408,
        FragmentLightModelNormalInterpolationSGIX = 0x840b,
        FragmentLightModelTwoSideSGIX = 0x8409,
        FramezoomFactorSGIX = 0x818c,
        FramezoomSGIX = 0x818b,
        FrontFace = 0xb46,
        GenerateMipmapHintSGIS = 0x8192,
        HistogramEXT = 0x8024,
        IndexArrayCountEXT = 0x8087,
        InstrumentMeasurementsSGIX = 0x8181,
        InterlaceSGIX = 0x8094,
        IrInstrument1SGIX = 0x817f,
        LightEnvModeSGIX = 0x8407,
        LineSmooth = 0xb20,
        LineSmoothHint = 0xc52,
        LineWidth = 0xb21,
        LineWidthGranularity = 0xb23,
        LineWidthRange = 0xb22,
        LogicOpMode = 0xbf0,
        Max3dTextureSizeEXT = 0x8073,
        Max4dTextureSizeSGIS = 0x8138,
        MaxActiveLightsSGIX = 0x8405,
        MaxAsyncDrawPixelsSGIX = 0x8360,
        MaxAsyncHistogramSGIX = 0x832d,
        MaxAsyncReadPixelsSGIX = 0x8361,
        MaxAsyncTexImageSGIX = 0x835f,
        MaxClipmapDepthSGIX = 0x8177,
        MaxClipmapVirtualDepthSGIX = 0x8178,
        MaxClipDistances = 0xd32,
        MaxColorMatrixStackDepthSGI = 0x80b3,
        MaxFogFuncPointsSGIS = 0x812c,
        MaxFragmentLightsSGIX = 0x8404,
        MaxFramezoomFactorSGIX = 0x818d,
        MaxTextureSize = 0xd33,
        MaxViewportDims = 0xd3a,
        MinmaxEXT = 0x802e,
        Modelview0MatrixEXT = 0xba6,
        Modelview0StackDepthEXT = 0xba3,
        MultisampleSGIS = 0x809d,
        NormalArrayCountEXT = 0x8080,
        PackAlignment = 0xd05,
        PackCmykHintEXT = 0x800e,
        PackImageDepthSGIS = 0x8131,
        PackImageHeightEXT = 0x806c,
        PackLsbFirst = 0xd01,
        PackResampleSGIX = 0x842c,
        PackRowLength = 0xd02,
        PackSkipImagesEXT = 0x806b,
        PackSkipPixels = 0xd04,
        PackSkipRows = 0xd03,
        PackSkipVolumesSGIS = 0x8130,
        PackSubsampleRateSGIX = 0x85a0,
        PackSwapBytes = 0xd00,
        PixelTextureSGIS = 0x8353,
        PixelTexGenModeSGIX = 0x832b,
        PixelTexGenSGIX = 0x8139,
        PixelTileBestAlignmentSGIX = 0x813e,
        PixelTileCacheIncrementSGIX = 0x813f,
        PixelTileCacheSizeSGIX = 0x8145,
        PixelTileGridDepthSGIX = 0x8144,
        PixelTileGridHeightSGIX = 0x8143,
        PixelTileGridWidthSGIX = 0x8142,
        PixelTileHeightSGIX = 0x8141,
        PixelTileWidthSGIX = 0x8140,
        PointFadeThresholdSizeSGIS = 0x8128,
        PointSize = 0xb11,
        PointSizeGranularity = 0xb13,
        PointSizeMaxSGIS = 0x8127,
        PointSizeMinSGIS = 0x8126,
        PointSizeRange = 0xb12,
        PolygonMode = 0xb40,
        PolygonOffsetBiasEXT = 0x8039,
        PolygonOffsetFactor = 0x8038,
        PolygonOffsetFill = 0x8037,
        PolygonOffsetLine = 0x2a02,
        PolygonOffsetPoint = 0x2a01,
        PolygonOffsetUnits = 0x2a00,
        PolygonSmooth = 0xb41,
        PolygonSmoothHint = 0xc53,
        PostColorMatrixAlphaBiasSGI = 0x80bb,
        PostColorMatrixAlphaScaleSGI = 0x80b7,
        PostColorMatrixBlueBiasSGI = 0x80ba,
        PostColorMatrixBlueScaleSGI = 0x80b6,
        PostColorMatrixColorTableSGI = 0x80d2,
        PostColorMatrixGreenBiasSGI = 0x80b9,
        PostColorMatrixGreenScaleSGI = 0x80b5,
        PostColorMatrixRedBiasSGI = 0x80b8,
        PostColorMatrixRedScaleSGI = 0x80b4,
        PostConvolutionAlphaBiasEXT = 0x8023,
        PostConvolutionAlphaScaleEXT = 0x801f,
        PostConvolutionBlueBiasEXT = 0x8022,
        PostConvolutionBlueScaleEXT = 0x801e,
        PostConvolutionColorTableSGI = 0x80d1,
        PostConvolutionGreenBiasEXT = 0x8021,
        PostConvolutionGreenScaleEXT = 0x801d,
        PostConvolutionRedBiasEXT = 0x8020,
        PostConvolutionRedScaleEXT = 0x801c,
        PostTextureFilterBiasRangeSGIX = 0x817b,
        PostTextureFilterScaleRangeSGIX = 0x817c,
        ReadBuffer = 0xc02,
        ReadBufferEXT = 0xc02,
        ReadBufferNV = 0xc02,
        ReferencePlaneEquationSGIX = 0x817e,
        ReferencePlaneSGIX = 0x817d,
        RescaleNormalEXT = 0x803a,
        SamplesSGIS = 0x80a9,
        SampleAlphaToMaskSGIS = 0x809e,
        SampleAlphaToOneSGIS = 0x809f,
        SampleBuffersSGIS = 0x80a8,
        SampleMaskInvertSGIS = 0x80ab,
        SampleMaskSGIS = 0x80a0,
        SampleMaskValueSGIS = 0x80aa,
        SamplePatternSGIS = 0x80ac,
        ScissorBox = 0xc10,
        ScissorTest = 0xc11,
        Separable2dEXT = 0x8012,
        SharedTexturePaletteEXT = 0x81fb,
        SmoothLineWidthGranularity = 0xb23,
        SmoothLineWidthRange = 0xb22,
        SmoothPointSizeGranularity = 0xb13,
        SmoothPointSizeRange = 0xb12,
        SpriteAxisSGIX = 0x814a,
        SpriteModeSGIX = 0x8149,
        SpriteSGIX = 0x8148,
        SpriteTranslationSGIX = 0x814b,
        StencilClearValue = 0xb91,
        StencilFail = 0xb94,
        StencilFunc = 0xb92,
        StencilPassDepthFail = 0xb95,
        StencilPassDepthPass = 0xb96,
        StencilRef = 0xb97,
        StencilTest = 0xb90,
        StencilValueMask = 0xb93,
        StencilWritemask = 0xb98,
        Stereo = 0xc33,
        SubpixelBits = 0xd50,
        Texture1d = 0xde0,
        Texture2d = 0xde1,
        Texture3dBindingEXT = 0x806a,
        Texture3dEXT = 0x806f,
        Texture4dBindingSGIS = 0x814f,
        Texture4dSGIS = 0x8134,
        TextureBinding1d = 0x8068,
        TextureBinding2d = 0x8069,
        TextureBinding3d = 0x806a,
        TextureColorTableSGI = 0x80bc,
        TextureCoordArrayCountEXT = 0x808b,
        UnpackAlignment = 0xcf5,
        UnpackCmykHintEXT = 0x800f,
        UnpackImageDepthSGIS = 0x8133,
        UnpackImageHeightEXT = 0x806e,
        UnpackLsbFirst = 0xcf1,
        UnpackResampleSGIX = 0x842d,
        UnpackRowLength = 0xcf2,
        UnpackSkipImagesEXT = 0x806d,
        UnpackSkipPixels = 0xcf4,
        UnpackSkipRows = 0xcf3,
        UnpackSkipVolumesSGIS = 0x8132,
        UnpackSubsampleRateSGIX = 0x85a1,
        UnpackSwapBytes = 0xcf0,
        VertexArrayCountEXT = 0x807d,
        VertexPreclipHintSGIX = 0x83ef,
        VertexPreclipSGIX = 0x83ee,
        Viewport = 0xba2,
    }
    public enum GetPointervPName : uint
    {
        ColorArrayPointerEXT = 0x8090,
        EdgeFlagArrayPointerEXT = 0x8093,
        IndexArrayPointerEXT = 0x8091,
        InstrumentBufferPointerSGIX = 0x8180,
        NormalArrayPointerEXT = 0x808f,
        TextureCoordArrayPointerEXT = 0x8092,
        VertexArrayPointerEXT = 0x808e,
    }
    public enum GetTextureParameter : uint
    {
        DetailTextureFuncPointsSGIS = 0x809c,
        DetailTextureLevelSGIS = 0x809a,
        DetailTextureModeSGIS = 0x809b,
        DualTextureSelectSGIS = 0x8124,
        GenerateMipmapSGIS = 0x8191,
        PostTextureFilterBiasSGIX = 0x8179,
        PostTextureFilterScaleSGIX = 0x817a,
        QuadTextureSelectSGIS = 0x8125,
        ShadowAmbientSGIX = 0x80bf,
        SharpenTextureFuncPointsSGIS = 0x80b0,
        Texture4dsizeSGIS = 0x8136,
        TextureAlphaSize = 0x805f,
        TextureBaseLevelSGIS = 0x813c,
        TextureBlueSize = 0x805e,
        TextureBorderColor = 0x1004,
        TextureBorderColorNV = 0x1004,
        TextureClipmapCenterSGIX = 0x8171,
        TextureClipmapDepthSGIX = 0x8176,
        TextureClipmapFrameSGIX = 0x8172,
        TextureClipmapLodOffsetSGIX = 0x8175,
        TextureClipmapOffsetSGIX = 0x8173,
        TextureClipmapVirtualDepthSGIX = 0x8174,
        TextureCompareOperatorSGIX = 0x819b,
        TextureCompareSGIX = 0x819a,
        TextureDepthEXT = 0x8071,
        TextureFilter4SizeSGIS = 0x8147,
        TextureGequalRSGIX = 0x819d,
        TextureGreenSize = 0x805d,
        TextureHeight = 0x1001,
        TextureInternalFormat = 0x1003,
        TextureLequalRSGIX = 0x819c,
        TextureLodBiasRSGIX = 0x8190,
        TextureLodBiasSSGIX = 0x818e,
        TextureLodBiasTSGIX = 0x818f,
        TextureMagFilter = 0x2800,
        TextureMaxClampRSGIX = 0x836b,
        TextureMaxClampSSGIX = 0x8369,
        TextureMaxClampTSGIX = 0x836a,
        TextureMaxLevelSGIS = 0x813d,
        TextureMaxLodSGIS = 0x813b,
        TextureMinFilter = 0x2801,
        TextureMinLodSGIS = 0x813a,
        TextureRedSize = 0x805c,
        TextureWidth = 0x1000,
        TextureWrapQSGIS = 0x8137,
        TextureWrapREXT = 0x8072,
        TextureWrapS = 0x2802,
        TextureWrapT = 0x2803,
    }
    public enum HintMode : uint
    {
        DontCare = 0x1100,
        Fastest = 0x1101,
        Nicest = 0x1102,
    }
    public enum HintTarget : uint
    {
        AllowDrawFrgHintPGI = 0x1a210,
        AllowDrawMemHintPGI = 0x1a211,
        AllowDrawObjHintPGI = 0x1a20e,
        AllowDrawWinHintPGI = 0x1a20f,
        AlwaysFastHintPGI = 0x1a20c,
        AlwaysSoftHintPGI = 0x1a20d,
        BackNormalsHintPGI = 0x1a223,
        BinningControlHintQCOM = 0x8fb0,
        ClipFarHintPGI = 0x1a221,
        ClipNearHintPGI = 0x1a220,
        ClipVolumeClippingHintEXT = 0x80f0,
        ConserveMemoryHintPGI = 0x1a1fd,
        ConvolutionHintSGIX = 0x8316,
        FragmentShaderDerivativeHint = 0x8b8b,
        FragmentShaderDerivativeHintARB = 0x8b8b,
        FragmentShaderDerivativeHintOES = 0x8b8b,
        FullStippleHintPGI = 0x1a219,
        GenerateMipmapHintSGIS = 0x8192,
        LineSmoothHint = 0xc52,
        MaterialSideHintPGI = 0x1a22c,
        MaxVertexHintPGI = 0x1a22d,
        MultisampleFilterHintNV = 0x8534,
        NativeGraphicsBeginHintPGI = 0x1a203,
        NativeGraphicsEndHintPGI = 0x1a204,
        PackCmykHintEXT = 0x800e,
        PhongHintWin = 0x80eb,
        PolygonSmoothHint = 0xc53,
        PreferDoublebufferHintPGI = 0x1a1f8,
        ProgramBinaryRetrievableHint = 0x8257,
        ReclaimMemoryHintPGI = 0x1a1fe,
        ScalebiasHintSGIX = 0x8322,
        StrictDepthfuncHintPGI = 0x1a216,
        StrictLightingHintPGI = 0x1a217,
        StrictScissorHintPGI = 0x1a218,
        TextureCompressionHint = 0x84ef,
        TextureCompressionHintARB = 0x84ef,
        TextureMultiBufferHintSGIX = 0x812e,
        TextureStorageHintAPPLE = 0x85bc,
        TransformHintAPPLE = 0x85b1,
        UnpackCmykHintEXT = 0x800f,
        VertexArrayStorageHintAPPLE = 0x851f,
        VertexConsistentHintPGI = 0x1a22b,
        VertexDataHintPGI = 0x1a22a,
        VertexPreclipHintSGIX = 0x83ef,
        VertexPreclipSGIX = 0x83ee,
        WideLineHintPGI = 0x1a222,
    }
    public enum HistogramTargetEXT : uint
    {
        Histogram = 0x8024,
        HistogramEXT = 0x8024,
        ProxyHistogram = 0x8025,
        ProxyHistogramEXT = 0x8025,
    }
    public enum IndexPointerType : uint
    {
        Double = 0x140a,
        Float = 0x1406,
        Int = 0x1404,
        Short = 0x1402,
    }
    public enum LightEnvModeSGIX : uint
    {
        Replace = 0x1e01,
    }
    public enum LightEnvParameterSGIX : uint
    {
        LightEnvModeSGIX = 0x8407,
    }
    public enum LightModelColorControl : uint
    {
        SeparateSpecularColorEXT = 0x81fa,
        SingleColorEXT = 0x81f9,
    }
    public enum LightModelParameter : uint
    {
        LightModelColorControlEXT = 0x81f8,
    }
    public enum LightName : uint
    {
        FragmentLight0SGIX = 0x840c,
        FragmentLight1SGIX = 0x840d,
        FragmentLight2SGIX = 0x840e,
        FragmentLight3SGIX = 0x840f,
        FragmentLight4SGIX = 0x8410,
        FragmentLight5SGIX = 0x8411,
        FragmentLight6SGIX = 0x8412,
        FragmentLight7SGIX = 0x8413,
    }
    public enum ListNameType : uint
    {
        Byte = 0x1400,
        Float = 0x1406,
        Int = 0x1404,
        Short = 0x1402,
        UnsignedByte = 0x1401,
        UnsignedInt = 0x1405,
        UnsignedShort = 0x1403,
    }
    public enum ListParameterName : uint
    {
        ListPrioritySGIX = 0x8182,
    }
    public enum LogicOp : uint
    {
        And = 0x1501,
        AndInverted = 0x1504,
        AndReverse = 0x1502,
        Clear = 0x1500,
        Copy = 0x1503,
        CopyInverted = 0x150c,
        Equiv = 0x1509,
        Invert = 0x150a,
        Nand = 0x150e,
        Noop = 0x1505,
        Nor = 0x1508,
        Or = 0x1507,
        OrInverted = 0x150d,
        OrReverse = 0x150b,
        Set = 0x150f,
        Xor = 0x1506,
    }
    public enum MapBufferUsageMask : uint
    {
        ClientStorageBit = 0x200,
        DynamicStorageBit = 0x100,
        MapCoherentBit = 0x80,
        MapFlushExplicitBit = 0x10,
        MapFlushExplicitBitEXT = 0x10,
        MapInvalidateBufferBit = 0x8,
        MapInvalidateBufferBitEXT = 0x8,
        MapInvalidateRangeBit = 0x4,
        MapInvalidateRangeBitEXT = 0x4,
        MapPersistentBit = 0x40,
        MapReadBit = 0x1,
        MapReadBitEXT = 0x1,
        MapUnsynchronizedBit = 0x20,
        MapUnsynchronizedBitEXT = 0x20,
        MapWriteBit = 0x2,
        MapWriteBitEXT = 0x2,
    }
    public enum MapTarget : uint
    {
        GeometryDeformationSGIX = 0x8194,
        TextureDeformationSGIX = 0x8195,
    }
    public enum MapTextureFormatINTEL : uint
    {
        LayoutDefaultIntel = 0x0,
        LayoutLinearCpuCachedIntel = 0x2,
        LayoutLinearIntel = 0x1,
    }
    public enum MaterialFace : uint
    {
        Back = 0x405,
        Front = 0x404,
        FrontAndBack = 0x408,
    }
    public enum MatrixMode : uint
    {
        Modelview0EXT = 0x1700,
        Texture = 0x1702,
    }
    public enum MemoryBarrierMask : uint
    {
        AllBarrierBits = 0xffffffff,
        AllBarrierBitsEXT = 0xffffffff,
        AtomicCounterBarrierBit = 0x1000,
        AtomicCounterBarrierBitEXT = 0x1000,
        BufferUpdateBarrierBit = 0x200,
        BufferUpdateBarrierBitEXT = 0x200,
        ClientMappedBufferBarrierBit = 0x4000,
        CommandBarrierBit = 0x40,
        CommandBarrierBitEXT = 0x40,
        ElementArrayBarrierBit = 0x2,
        ElementArrayBarrierBitEXT = 0x2,
        FramebufferBarrierBit = 0x400,
        FramebufferBarrierBitEXT = 0x400,
        PixelBufferBarrierBit = 0x80,
        PixelBufferBarrierBitEXT = 0x80,
        QueryBufferBarrierBit = 0x8000,
        ShaderGlobalAccessBarrierBitNV = 0x10,
        ShaderImageAccessBarrierBit = 0x20,
        ShaderImageAccessBarrierBitEXT = 0x20,
        ShaderStorageBarrierBit = 0x2000,
        TextureFetchBarrierBit = 0x8,
        TextureFetchBarrierBitEXT = 0x8,
        TextureUpdateBarrierBit = 0x100,
        TextureUpdateBarrierBitEXT = 0x100,
        TransformFeedbackBarrierBit = 0x800,
        TransformFeedbackBarrierBitEXT = 0x800,
        UniformBarrierBit = 0x4,
        UniformBarrierBitEXT = 0x4,
        VertexAttribArrayBarrierBit = 0x1,
        VertexAttribArrayBarrierBitEXT = 0x1,
    }
    public enum MeshMode1 : uint
    {
        Line = 0x1b01,
        Point = 0x1b00,
    }
    public enum MeshMode2 : uint
    {
        Fill = 0x1b02,
        Line = 0x1b01,
        Point = 0x1b00,
    }
    public enum MinmaxTargetEXT : uint
    {
        Minmax = 0x802e,
        MinmaxEXT = 0x802e,
    }
    public enum NormalPointerType : uint
    {
        Byte = 0x1400,
        Double = 0x140a,
        Float = 0x1406,
        Int = 0x1404,
        Short = 0x1402,
    }
    public enum PixelCopyType : uint
    {
        Color = 0x1800,
        ColorEXT = 0x1800,
        Depth = 0x1801,
        DepthEXT = 0x1801,
        Stencil = 0x1802,
        StencilEXT = 0x1802,
    }
    public enum PixelFormat : uint
    {
        AbgrEXT = 0x8000,
        Alpha = 0x1906,
        Blue = 0x1905,
        CmykaEXT = 0x800d,
        CmykEXT = 0x800c,
        DepthComponent = 0x1902,
        Green = 0x1904,
        Red = 0x1903,
        RedEXT = 0x1903,
        Rgb = 0x1907,
        Rgba = 0x1908,
        StencilIndex = 0x1901,
        UnsignedInt = 0x1405,
        UnsignedShort = 0x1403,
        Ycrcb422SGIX = 0x81bb,
        Ycrcb444SGIX = 0x81bc,
    }
    public enum InternalFormat : uint
    {
        DepthComponent16SGIX = 0x81a5,
        DepthComponent24SGIX = 0x81a6,
        DepthComponent32SGIX = 0x81a7,
        DualAlpha12SGIS = 0x8112,
        DualAlpha16SGIS = 0x8113,
        DualAlpha4SGIS = 0x8110,
        DualAlpha8SGIS = 0x8111,
        DualIntensity12SGIS = 0x811a,
        DualIntensity16SGIS = 0x811b,
        DualIntensity4SGIS = 0x8118,
        DualIntensity8SGIS = 0x8119,
        DualLuminance12SGIS = 0x8116,
        DualLuminance16SGIS = 0x8117,
        DualLuminance4SGIS = 0x8114,
        DualLuminance8SGIS = 0x8115,
        DualLuminanceAlpha4SGIS = 0x811c,
        DualLuminanceAlpha8SGIS = 0x811d,
        QuadAlpha4SGIS = 0x811e,
        QuadAlpha8SGIS = 0x811f,
        QuadIntensity4SGIS = 0x8122,
        QuadIntensity8SGIS = 0x8123,
        QuadLuminance4SGIS = 0x8120,
        QuadLuminance8SGIS = 0x8121,
        R3G3B2 = 0x2a10,
        Rgb10 = 0x8052,
        Rgb10A2 = 0x8059,
        Rgb12 = 0x8053,
        Rgb16 = 0x8054,
        Rgb2EXT = 0x804e,
        Rgb4 = 0x804f,
        Rgb5 = 0x8050,
        Rgb5A1 = 0x8057,
        Rgb8 = 0x8051,
        Rgba12 = 0x805a,
        Rgba16 = 0x805b,
        Rgba2 = 0x8055,
        Rgba4 = 0x8056,
        Rgba8 = 0x8058,
    }
    public enum PixelStoreParameter : uint
    {
        PackAlignment = 0xd05,
        PackImageDepthSGIS = 0x8131,
        PackImageHeight = 0x806c,
        PackImageHeightEXT = 0x806c,
        PackLsbFirst = 0xd01,
        PackResampleOml = 0x8984,
        PackResampleSGIX = 0x842c,
        PackRowLength = 0xd02,
        PackSkipImages = 0x806b,
        PackSkipImagesEXT = 0x806b,
        PackSkipPixels = 0xd04,
        PackSkipRows = 0xd03,
        PackSkipVolumesSGIS = 0x8130,
        PackSubsampleRateSGIX = 0x85a0,
        PackSwapBytes = 0xd00,
        PixelTileCacheSizeSGIX = 0x8145,
        PixelTileGridDepthSGIX = 0x8144,
        PixelTileGridHeightSGIX = 0x8143,
        PixelTileGridWidthSGIX = 0x8142,
        PixelTileHeightSGIX = 0x8141,
        PixelTileWidthSGIX = 0x8140,
        UnpackAlignment = 0xcf5,
        UnpackImageDepthSGIS = 0x8133,
        UnpackImageHeight = 0x806e,
        UnpackImageHeightEXT = 0x806e,
        UnpackLsbFirst = 0xcf1,
        UnpackResampleOml = 0x8985,
        UnpackResampleSGIX = 0x842d,
        UnpackRowLength = 0xcf2,
        UnpackRowLengthEXT = 0xcf2,
        UnpackSkipImages = 0x806d,
        UnpackSkipImagesEXT = 0x806d,
        UnpackSkipPixels = 0xcf4,
        UnpackSkipPixelsEXT = 0xcf4,
        UnpackSkipRows = 0xcf3,
        UnpackSkipRowsEXT = 0xcf3,
        UnpackSkipVolumesSGIS = 0x8132,
        UnpackSubsampleRateSGIX = 0x85a1,
        UnpackSwapBytes = 0xcf0,
    }
    public enum PixelStoreResampleMode : uint
    {
        ResampleDecimateSGIX = 0x8430,
        ResampleReplicateSGIX = 0x842e,
        ResampleZeroFillSGIX = 0x842f,
    }
    public enum PixelStoreSubsampleRate : uint
    {
        PixelSubsample2424SGIX = 0x85a3,
        PixelSubsample4242SGIX = 0x85a4,
        PixelSubsample4444SGIX = 0x85a2,
    }
    public enum PixelTexGenMode : uint
    {
        None = 0x0,
        Rgb = 0x1907,
        Rgba = 0x1908,
    }
    public enum PixelTexGenParameterNameSGIS : uint
    {
        PixelFragmentAlphaSourceSGIS = 0x8355,
        PixelFragmentRgbSourceSGIS = 0x8354,
    }
    public enum PixelTransferParameter : uint
    {
        PostColorMatrixAlphaBias = 0x80bb,
        PostColorMatrixAlphaBiasSGI = 0x80bb,
        PostColorMatrixAlphaScale = 0x80b7,
        PostColorMatrixAlphaScaleSGI = 0x80b7,
        PostColorMatrixBlueBias = 0x80ba,
        PostColorMatrixBlueBiasSGI = 0x80ba,
        PostColorMatrixBlueScale = 0x80b6,
        PostColorMatrixBlueScaleSGI = 0x80b6,
        PostColorMatrixGreenBias = 0x80b9,
        PostColorMatrixGreenBiasSGI = 0x80b9,
        PostColorMatrixGreenScale = 0x80b5,
        PostColorMatrixGreenScaleSGI = 0x80b5,
        PostColorMatrixRedBias = 0x80b8,
        PostColorMatrixRedBiasSGI = 0x80b8,
        PostColorMatrixRedScale = 0x80b4,
        PostColorMatrixRedScaleSGI = 0x80b4,
        PostConvolutionAlphaBias = 0x8023,
        PostConvolutionAlphaBiasEXT = 0x8023,
        PostConvolutionAlphaScale = 0x801f,
        PostConvolutionAlphaScaleEXT = 0x801f,
        PostConvolutionBlueBias = 0x8022,
        PostConvolutionBlueBiasEXT = 0x8022,
        PostConvolutionBlueScale = 0x801e,
        PostConvolutionBlueScaleEXT = 0x801e,
        PostConvolutionGreenBias = 0x8021,
        PostConvolutionGreenBiasEXT = 0x8021,
        PostConvolutionGreenScale = 0x801d,
        PostConvolutionGreenScaleEXT = 0x801d,
        PostConvolutionRedBias = 0x8020,
        PostConvolutionRedBiasEXT = 0x8020,
        PostConvolutionRedScale = 0x801c,
        PostConvolutionRedScaleEXT = 0x801c,
    }
    public enum PixelType : uint
    {
        Byte = 0x1400,
        Float = 0x1406,
        Int = 0x1404,
        Short = 0x1402,
        UnsignedByte = 0x1401,
        UnsignedByte332 = 0x8032,
        UnsignedByte332EXT = 0x8032,
        UnsignedInt = 0x1405,
        UnsignedInt1010102 = 0x8036,
        UnsignedInt1010102EXT = 0x8036,
        UnsignedInt8888 = 0x8035,
        UnsignedInt8888EXT = 0x8035,
        UnsignedShort = 0x1403,
        UnsignedShort4444 = 0x8033,
        UnsignedShort4444EXT = 0x8033,
        UnsignedShort5551 = 0x8034,
        UnsignedShort5551EXT = 0x8034,
    }
    public enum PointParameterNameSGIS : uint
    {
        DistanceAttenuationEXT = 0x8129,
        DistanceAttenuationSGIS = 0x8129,
        PointDistanceAttenuationARB = 0x8129,
        PointFadeThresholdSize = 0x8128,
        PointFadeThresholdSizeARB = 0x8128,
        PointFadeThresholdSizeEXT = 0x8128,
        PointFadeThresholdSizeSGIS = 0x8128,
        PointSizeMaxARB = 0x8127,
        PointSizeMaxEXT = 0x8127,
        PointSizeMaxSGIS = 0x8127,
        PointSizeMinARB = 0x8126,
        PointSizeMinEXT = 0x8126,
        PointSizeMinSGIS = 0x8126,
    }
    public enum PolygonMode : uint
    {
        Fill = 0x1b02,
        Line = 0x1b01,
        Point = 0x1b00,
    }
    public enum PrimitiveType : uint
    {
        Lines = 0x1,
        LinesAdjacency = 0xa,
        LinesAdjacencyARB = 0xa,
        LinesAdjacencyEXT = 0xa,
        LineLoop = 0x2,
        LineStrip = 0x3,
        LineStripAdjacency = 0xb,
        LineStripAdjacencyARB = 0xb,
        LineStripAdjacencyEXT = 0xb,
        Patches = 0xe,
        PatchesEXT = 0xe,
        Points = 0x0,
        QuadsEXT = 0x7,
        Triangles = 0x4,
        TrianglesAdjacency = 0xc,
        TrianglesAdjacencyARB = 0xc,
        TrianglesAdjacencyEXT = 0xc,
        TriangleFan = 0x6,
        TriangleStrip = 0x5,
        TriangleStripAdjacency = 0xd,
        TriangleStripAdjacencyARB = 0xd,
        TriangleStripAdjacencyEXT = 0xd,
    }
    public enum OcclusionQueryEventMaskAMD : uint
    {
        QueryDepthPassEventBitAMD = 0x1,
        QueryDepthFailEventBitAMD = 0x2,
        QueryStencilFailEventBitAMD = 0x4,
        QueryDepthBoundsFailEventBitAMD = 0x8,
        QueryAllEventBitsAMD = 0xffffffff,
    }
    public enum ReadBufferMode : uint
    {
        Back = 0x405,
        BackLeft = 0x402,
        BackRight = 0x403,
        Front = 0x404,
        FrontLeft = 0x400,
        FrontRight = 0x401,
        Left = 0x406,
        Right = 0x407,
    }
    public enum SamplePatternSGIS : uint
    {
        _1passEXT = 0x80a1,
        _1passSGIS = 0x80a1,
        _2pass0EXT = 0x80a2,
        _2pass0SGIS = 0x80a2,
        _2pass1EXT = 0x80a3,
        _2pass1SGIS = 0x80a3,
        _4pass0EXT = 0x80a4,
        _4pass0SGIS = 0x80a4,
        _4pass1EXT = 0x80a5,
        _4pass1SGIS = 0x80a5,
        _4pass2EXT = 0x80a6,
        _4pass2SGIS = 0x80a6,
        _4pass3EXT = 0x80a7,
        _4pass3SGIS = 0x80a7,
    }
    public enum SeparableTargetEXT : uint
    {
        Separable2d = 0x8012,
        Separable2dEXT = 0x8012,
    }
    public enum StencilFunction : uint
    {
        Always = 0x207,
        Equal = 0x202,
        Gequal = 0x206,
        Greater = 0x204,
        Lequal = 0x203,
        Less = 0x201,
        Never = 0x200,
        Notequal = 0x205,
    }
    public enum StencilOp : uint
    {
        Decr = 0x1e03,
        Incr = 0x1e02,
        Invert = 0x150a,
        Keep = 0x1e00,
        Replace = 0x1e01,
        Zero = 0x0,
    }
    public enum StringName : uint
    {
        Extensions = 0x1f03,
        Renderer = 0x1f01,
        Vendor = 0x1f00,
        Version = 0x1f02,
    }
    public enum TexCoordPointerType : uint
    {
        Double = 0x140a,
        Float = 0x1406,
        Int = 0x1404,
        Short = 0x1402,
    }
    public enum TextureEnvMode : uint
    {
        Blend = 0xbe2,
        ReplaceEXT = 0x8062,
        TextureEnvBiasSGIX = 0x80be,
    }
    public enum TextureFilterFuncSGIS : uint
    {
        Filter4SGIS = 0x8146,
    }
    public enum TextureGenMode : uint
    {
        EyeDistanceToLineSGIS = 0x81f2,
        EyeDistanceToPointSGIS = 0x81f0,
        ObjectDistanceToLineSGIS = 0x81f3,
        ObjectDistanceToPointSGIS = 0x81f1,
    }
    public enum TextureGenParameter : uint
    {
        EyeLineSGIS = 0x81f6,
        EyePointSGIS = 0x81f4,
        ObjectLineSGIS = 0x81f7,
        ObjectPointSGIS = 0x81f5,
    }
    public enum TextureMagFilter : uint
    {
        Filter4SGIS = 0x8146,
        Linear = 0x2601,
        LinearDetailAlphaSGIS = 0x8098,
        LinearDetailColorSGIS = 0x8099,
        LinearDetailSGIS = 0x8097,
        LinearSharpenAlphaSGIS = 0x80ae,
        LinearSharpenColorSGIS = 0x80af,
        LinearSharpenSGIS = 0x80ad,
        Nearest = 0x2600,
    }
    public enum TextureMinFilter : uint
    {
        Filter4SGIS = 0x8146,
        Linear = 0x2601,
        LinearClipmapLinearSGIX = 0x8170,
        LinearClipmapNearestSGIX = 0x844f,
        LinearMipmapLinear = 0x2703,
        LinearMipmapNearest = 0x2701,
        Nearest = 0x2600,
        NearestClipmapLinearSGIX = 0x844e,
        NearestClipmapNearestSGIX = 0x844d,
        NearestMipmapLinear = 0x2702,
        NearestMipmapNearest = 0x2700,
    }
    public enum TextureParameterName : uint
    {
        DetailTextureLevelSGIS = 0x809a,
        DetailTextureModeSGIS = 0x809b,
        DualTextureSelectSGIS = 0x8124,
        GenerateMipmapSGIS = 0x8191,
        PostTextureFilterBiasSGIX = 0x8179,
        PostTextureFilterScaleSGIX = 0x817a,
        QuadTextureSelectSGIS = 0x8125,
        ShadowAmbientSGIX = 0x80bf,
        TextureBorderColor = 0x1004,
        TextureClipmapCenterSGIX = 0x8171,
        TextureClipmapDepthSGIX = 0x8176,
        TextureClipmapFrameSGIX = 0x8172,
        TextureClipmapLodOffsetSGIX = 0x8175,
        TextureClipmapOffsetSGIX = 0x8173,
        TextureClipmapVirtualDepthSGIX = 0x8174,
        TextureCompareSGIX = 0x819a,
        TextureLodBiasRSGIX = 0x8190,
        TextureLodBiasSSGIX = 0x818e,
        TextureLodBiasTSGIX = 0x818f,
        TextureMagFilter = 0x2800,
        TextureMaxClampRSGIX = 0x836b,
        TextureMaxClampSSGIX = 0x8369,
        TextureMaxClampTSGIX = 0x836a,
        TextureMinFilter = 0x2801,
        TexturePriorityEXT = 0x8066,
        TextureWrapQSGIS = 0x8137,
        TextureWrapR = 0x8072,
        TextureWrapREXT = 0x8072,
        TextureWrapROES = 0x8072,
        TextureWrapS = 0x2802,
        TextureWrapT = 0x2803,
    }
    public enum TextureTarget : uint
    {
        DetailTexture2dSGIS = 0x8095,
        ProxyTexture1d = 0x8063,
        ProxyTexture1dEXT = 0x8063,
        ProxyTexture2d = 0x8064,
        ProxyTexture2dEXT = 0x8064,
        ProxyTexture3d = 0x8070,
        ProxyTexture3dEXT = 0x8070,
        ProxyTexture4dSGIS = 0x8135,
        Texture1d = 0xde0,
        Texture2d = 0xde1,
        Texture3d = 0x806f,
        Texture3dEXT = 0x806f,
        Texture3dOES = 0x806f,
        Texture4dSGIS = 0x8134,
        TextureBaseLevel = 0x813c,
        TextureBaseLevelSGIS = 0x813c,
        TextureMaxLevel = 0x813d,
        TextureMaxLevelSGIS = 0x813d,
        TextureMaxLod = 0x813b,
        TextureMaxLodSGIS = 0x813b,
        TextureMinLod = 0x813a,
        TextureMinLodSGIS = 0x813a,
    }
    public enum TextureWrapMode : uint
    {
        ClampToBorder = 0x812d,
        ClampToBorderARB = 0x812d,
        ClampToBorderNV = 0x812d,
        ClampToBorderSGIS = 0x812d,
        ClampToEdge = 0x812f,
        ClampToEdgeSGIS = 0x812f,
        Repeat = 0x2901,
    }
    public enum UseProgramStageMask : uint
    {
        VertexShaderBit = 0x1,
        VertexShaderBitEXT = 0x1,
        FragmentShaderBit = 0x2,
        FragmentShaderBitEXT = 0x2,
        GeometryShaderBit = 0x4,
        GeometryShaderBitEXT = 0x4,
        TessControlShaderBit = 0x8,
        TessControlShaderBitEXT = 0x8,
        TessEvaluationShaderBit = 0x10,
        TessEvaluationShaderBitEXT = 0x10,
        ComputeShaderBit = 0x20,
        AllShaderBits = 0xffffffff,
        AllShaderBitsEXT = 0xffffffff,
    }
    public enum VertexPointerType : uint
    {
        Double = 0x140a,
        Float = 0x1406,
        Int = 0x1404,
        Short = 0x1402,
    }
    public delegate void GLDEBUGPROC(uint source, uint type, uint id, uint severity, int length, ref string message, IntPtr userParam);
    public delegate void GLDEBUGPROCAMD(uint id, uint caegory, uint severity, int length, [In]string message, IntPtr userdata);
    public delegate void GLDEBUGPROCKHR(uint source, uint type, uint id, uint severity, int length, ref string message, IntPtr userParam);
    public delegate void GLDEBUGPROCARB(uint source, uint type, uint id, uint severity, int length, ref string message, IntPtr userParam);
    public interface IOpenGL10
    {
        void CullFace(CullFaceMode mode);
        void FrontFace(FrontFaceDirection mode);
        void Hint(HintTarget target, HintMode mode);
        void LineWidth(float width);
        void PointSize(float size);
        void PolygonMode(MaterialFace face, PolygonMode mode);
        void Scissor(int x, int y, int width, int height);
        void TexParameterf(TextureTarget target, TextureParameterName pname, float param);
        void TexParameterfv(TextureTarget target, TextureParameterName pname, [In]float[] @params);
        void TexParameterfv(TextureTarget target, TextureParameterName pname, IntPtr @params);
        unsafe void TexParameterfv(TextureTarget target, TextureParameterName pname, float* @params);
        void TexParameteri(TextureTarget target, TextureParameterName pname, int param);
        void TexParameteriv(TextureTarget target, TextureParameterName pname, [In]int[] @params);
        void TexParameteriv(TextureTarget target, TextureParameterName pname, IntPtr @params);
        unsafe void TexParameteriv(TextureTarget target, TextureParameterName pname, int* @params);
        void TexImage1D(TextureTarget target, int level, int internalformat, int width, int border, PixelFormat format, PixelType type, IntPtr pixels);
        void TexImage2D(TextureTarget target, int level, int internalformat, int width, int height, int border, PixelFormat format, PixelType type, IntPtr pixels);
        void DrawBuffer(DrawBufferMode mode);
        void Clear(uint mask);
        void ClearColor(float red, float green, float blue, float alpha);
        void ClearStencil(int s);
        void ClearDepth(double depth);
        void StencilMask(uint mask);
        void ColorMask(GLboolean red, GLboolean green, GLboolean blue, GLboolean alpha);
        void DepthMask(GLboolean flag);
        void Disable(EnableCap cap);
        void Enable(EnableCap cap);
        void Finish();
        void Flush();
        void BlendFunc(BlendingFactorSrc sfactor, BlendingFactorDest dfactor);
        void LogicOp(LogicOp opcode);
        void StencilFunc(StencilFunction func, int @ref, uint mask);
        void StencilOp(StencilOp fail, StencilOp zfail, StencilOp zpass);
        void DepthFunc(DepthFunction func);
        void PixelStoref(PixelStoreParameter pname, float param);
        void PixelStorei(PixelStoreParameter pname, int param);
        void ReadBuffer(ReadBufferMode mode);
        void ReadPixels(int x, int y, int width, int height, PixelFormat format, PixelType type, IntPtr pixels);
        void GetBooleanv(GetPName pname, [Out]GLboolean data);
        void GetDoublev(GetPName pname, [Out]double[] data);
        ErrorCode GetError();
        void GetFloatv(GetPName pname, [Out]float[] data);
        void GetIntegerv(GetPName pname, [Out]int[] data);
        [return: MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(ConstStringReturnMarshaller))]
        string GetString(StringName name);
        void GetTexImage(TextureTarget target, int level, PixelFormat format, PixelType type, IntPtr pixels);
        void GetTexParameterfv(TextureTarget target, GetTextureParameter pname, [Out]float[] @params);
        void GetTexParameteriv(TextureTarget target, GetTextureParameter pname, [Out]int[] @params);
        void GetTexLevelParameterfv(TextureTarget target, int level, GetTextureParameter pname, [Out]float[] @params);
        void GetTexLevelParameteriv(TextureTarget target, int level, GetTextureParameter pname, [Out]int[] @params);
        GLboolean IsEnabled(EnableCap cap);
        void DepthRange(double near, double far);
        void Viewport(int x, int y, int width, int height);
    }
    public interface IOpenGL11 : IOpenGL10
    {
        void DrawArrays(PrimitiveType mode, int first, int count);
        void DrawElements(PrimitiveType mode, int count, uint type, IntPtr indices);
        void PolygonOffset(float factor, float units);
        void CopyTexImage1D(TextureTarget target, int level, InternalFormat internalformat, int x, int y, int width, int border);
        void CopyTexImage2D(TextureTarget target, int level, InternalFormat internalformat, int x, int y, int width, int height, int border);
        void CopyTexSubImage1D(TextureTarget target, int level, int xoffset, int x, int y, int width);
        void CopyTexSubImage2D(TextureTarget target, int level, int xoffset, int yoffset, int x, int y, int width, int height);
        void TexSubImage1D(TextureTarget target, int level, int xoffset, int width, PixelFormat format, PixelType type, IntPtr pixels);
        void TexSubImage2D(TextureTarget target, int level, int xoffset, int yoffset, int width, int height, PixelFormat format, PixelType type, IntPtr pixels);
        void BindTexture(TextureTarget target, uint texture);
        void DeleteTextures(int n, [In]uint[] textures);
        void DeleteTextures(int n, IntPtr textures);
        unsafe void DeleteTextures(int n, uint* textures);
        void GenTextures(int n, [Out]uint[] textures);
        GLboolean IsTexture(uint texture);
    }
    public interface IOpenGL12 : IOpenGL11
    {
        void DrawRangeElements(PrimitiveType mode, uint start, uint end, int count, uint type, IntPtr indices);
        void TexImage3D(TextureTarget target, int level, int internalformat, int width, int height, int depth, int border, PixelFormat format, PixelType type, IntPtr pixels);
        void TexSubImage3D(TextureTarget target, int level, int xoffset, int yoffset, int zoffset, int width, int height, int depth, PixelFormat format, PixelType type, IntPtr pixels);
        void CopyTexSubImage3D(TextureTarget target, int level, int xoffset, int yoffset, int zoffset, int x, int y, int width, int height);
    }
    public interface IOpenGL13 : IOpenGL12
    {
        void ActiveTexture(uint texture);
        void SampleCoverage(float value, GLboolean invert);
        void CompressedTexImage3D(TextureTarget target, int level, InternalFormat internalformat, int width, int height, int depth, int border, int imageSize, IntPtr data);
        void CompressedTexImage2D(TextureTarget target, int level, InternalFormat internalformat, int width, int height, int border, int imageSize, IntPtr data);
        void CompressedTexImage1D(TextureTarget target, int level, InternalFormat internalformat, int width, int border, int imageSize, IntPtr data);
        void CompressedTexSubImage3D(TextureTarget target, int level, int xoffset, int yoffset, int zoffset, int width, int height, int depth, PixelFormat format, int imageSize, IntPtr data);
        void CompressedTexSubImage2D(TextureTarget target, int level, int xoffset, int yoffset, int width, int height, PixelFormat format, int imageSize, IntPtr data);
        void CompressedTexSubImage1D(TextureTarget target, int level, int xoffset, int width, PixelFormat format, int imageSize, IntPtr data);
        void GetCompressedTexImage(TextureTarget target, int level, IntPtr img);
    }
    public interface IOpenGL14 : IOpenGL13
    {
        void BlendFuncSeparate(uint sfactorRGB, uint dfactorRGB, uint sfactorAlpha, uint dfactorAlpha);
        void MultiDrawArrays(PrimitiveType mode, [In]int[] first, [In]int[] count, int drawcount);
        void MultiDrawElements(PrimitiveType mode, [In]int[] count, uint type, [Out]IntPtr[] indices, int drawcount);
        void PointParameterf(uint pname, float param);
        void PointParameterfv(uint pname, [In]float[] @params);
        void PointParameterfv(uint pname, IntPtr @params);
        unsafe void PointParameterfv(uint pname, float* @params);
        void PointParameteri(uint pname, int param);
        void PointParameteriv(uint pname, [In]int[] @params);
        void PointParameteriv(uint pname, IntPtr @params);
        unsafe void PointParameteriv(uint pname, int* @params);
        void BlendColor(float red, float green, float blue, float alpha);
        void BlendEquation(uint mode);
    }
    public interface IOpenGL15 : IOpenGL14
    {
        void GenQueries(int n, [Out]uint[] ids);
        void DeleteQueries(int n, [In]uint[] ids);
        void DeleteQueries(int n, IntPtr ids);
        unsafe void DeleteQueries(int n, uint* ids);
        GLboolean IsQuery(uint id);
        void BeginQuery(uint target, uint id);
        void EndQuery(uint target);
        void GetQueryiv(uint target, uint pname, [Out]int[] @params);
        void GetQueryObjectiv(uint id, uint pname, [Out]int[] @params);
        void GetQueryObjectuiv(uint id, uint pname, [Out]uint[] @params);
        void BindBuffer(uint target, uint buffer);
        void DeleteBuffers(int n, [In]uint[] buffers);
        void DeleteBuffers(int n, IntPtr buffers);
        unsafe void DeleteBuffers(int n, uint* buffers);
        void GenBuffers(int n, [Out]uint[] buffers);
        GLboolean IsBuffer(uint buffer);
        void BufferData(uint target, IntPtr size, IntPtr data, uint usage);
        void BufferSubData(uint target, IntPtr offset, IntPtr size, IntPtr data);
        void GetBufferSubData(uint target, IntPtr offset, IntPtr size, IntPtr data);
        IntPtr MapBuffer(uint target, uint access);
        GLboolean UnmapBuffer(uint target);
        void GetBufferParameteriv(uint target, uint pname, [Out]int[] @params);
        void GetBufferPointerv(uint target, uint pname, [Out]IntPtr[] @params);
    }
    public interface IOpenGL20 : IOpenGL15
    {
        void BlendEquationSeparate(BlendEquationModeEXT modeRGB, BlendEquationModeEXT modeAlpha);
        void DrawBuffers(int n, [In]uint[] bufs);
        void DrawBuffers(int n, IntPtr bufs);
        unsafe void DrawBuffers(int n, uint* bufs);
        void StencilOpSeparate(uint face, StencilOp sfail, StencilOp dpfail, StencilOp dppass);
        void StencilFuncSeparate(uint face, StencilFunction func, int @ref, uint mask);
        void StencilMaskSeparate(uint face, uint mask);
        void AttachShader(uint program, uint shader);
        void BindAttribLocation(uint program, uint index, [In]string name);
        void CompileShader(uint shader);
        uint CreateProgram();
        uint CreateShader(uint type);
        void DeleteProgram(uint program);
        void DeleteShader(uint shader);
        void DetachShader(uint program, uint shader);
        void DisableVertexAttribArray(uint index);
        void EnableVertexAttribArray(uint index);
        void GetActiveAttrib(uint program, uint index, int bufSize, [Out]int[] length, [Out]int[] size, [Out]uint[] type, ref string name);
        void GetActiveUniform(uint program, uint index, int bufSize, [Out]int[] length, [Out]int[] size, [Out]uint[] type, ref string name);
        void GetAttachedShaders(uint program, int maxCount, [Out]int[] count, [Out]uint[] shaders);
        int GetAttribLocation(uint program, [In]string name);
        void GetProgramiv(uint program, uint pname, [Out]int[] @params);
        void GetProgramInfoLog(uint program, int bufSize, [Out]int[] length, ref string infoLog);
        void GetShaderiv(uint shader, uint pname, [Out]int[] @params);
        void GetShaderInfoLog(uint shader, int bufSize, [Out]int[] length, [Out]byte[] infoLog);
        void GetShaderSource(uint shader, int bufSize, [Out]int[] length, ref string source);
        int GetUniformLocation(uint program, [In]string name);
        void GetUniformfv(uint program, int location, [Out]float[] @params);
        void GetUniformiv(uint program, int location, [Out]int[] @params);
        void GetVertexAttribdv(uint index, uint pname, [Out]double[] @params);
        void GetVertexAttribfv(uint index, uint pname, [Out]float[] @params);
        void GetVertexAttribiv(uint index, uint pname, [Out]int[] @params);
        void GetVertexAttribPointerv(uint index, uint pname, [Out]IntPtr[] pointer);
        GLboolean IsProgram(uint program);
        GLboolean IsShader(uint shader);
        void LinkProgram(uint program);
        void ShaderSource(uint shader, int count, [In]string[] @string, [In]int[] length);
        void UseProgram(uint program);
        void Uniform1f(int location, float v0);
        void Uniform2f(int location, float v0, float v1);
        void Uniform3f(int location, float v0, float v1, float v2);
        void Uniform4f(int location, float v0, float v1, float v2, float v3);
        void Uniform1i(int location, int v0);
        void Uniform2i(int location, int v0, int v1);
        void Uniform3i(int location, int v0, int v1, int v2);
        void Uniform4i(int location, int v0, int v1, int v2, int v3);
        void Uniform1fv(int location, int count, [In]float[] value);
        void Uniform1fv(int location, int count, IntPtr value);
        unsafe void Uniform1fv(int location, int count, float* value);
        void Uniform2fv(int location, int count, [In]float[] value);
        void Uniform2fv(int location, int count, IntPtr value);
        unsafe void Uniform2fv(int location, int count, float* value);
        void Uniform3fv(int location, int count, [In]float[] value);
        void Uniform3fv(int location, int count, IntPtr value);
        unsafe void Uniform3fv(int location, int count, float* value);
        void Uniform4fv(int location, int count, [In]float[] value);
        void Uniform4fv(int location, int count, IntPtr value);
        unsafe void Uniform4fv(int location, int count, float* value);
        void Uniform1iv(int location, int count, [In]int[] value);
        void Uniform1iv(int location, int count, IntPtr value);
        unsafe void Uniform1iv(int location, int count, int* value);
        void Uniform2iv(int location, int count, [In]int[] value);
        void Uniform2iv(int location, int count, IntPtr value);
        unsafe void Uniform2iv(int location, int count, int* value);
        void Uniform3iv(int location, int count, [In]int[] value);
        void Uniform3iv(int location, int count, IntPtr value);
        unsafe void Uniform3iv(int location, int count, int* value);
        void Uniform4iv(int location, int count, [In]int[] value);
        void Uniform4iv(int location, int count, IntPtr value);
        unsafe void Uniform4iv(int location, int count, int* value);
        void UniformMatrix2fv(int location, int count, GLboolean transpose, [In]float[] value);
        void UniformMatrix2fv(int location, int count, GLboolean transpose, IntPtr value);
        unsafe void UniformMatrix2fv(int location, int count, GLboolean transpose, float* value);
        void UniformMatrix3fv(int location, int count, GLboolean transpose, [In]float[] value);
        void UniformMatrix3fv(int location, int count, GLboolean transpose, IntPtr value);
        unsafe void UniformMatrix3fv(int location, int count, GLboolean transpose, float* value);
        void UniformMatrix4fv(int location, int count, GLboolean transpose, [In]float[] value);
        void UniformMatrix4fv(int location, int count, GLboolean transpose, IntPtr value);
        unsafe void UniformMatrix4fv(int location, int count, GLboolean transpose, float* value);
        void ValidateProgram(uint program);
        void VertexAttrib1d(uint index, double x);
        void VertexAttrib1dv(uint index, [In]double[] v);
        void VertexAttrib1dv(uint index, IntPtr v);
        unsafe void VertexAttrib1dv(uint index, double* v);
        void VertexAttrib1f(uint index, float x);
        void VertexAttrib1fv(uint index, [In]float[] v);
        void VertexAttrib1fv(uint index, IntPtr v);
        unsafe void VertexAttrib1fv(uint index, float* v);
        void VertexAttrib1s(uint index, short x);
        void VertexAttrib1sv(uint index, [In]short[] v);
        void VertexAttrib1sv(uint index, IntPtr v);
        unsafe void VertexAttrib1sv(uint index, short* v);
        void VertexAttrib2d(uint index, double x, double y);
        void VertexAttrib2dv(uint index, [In]double[] v);
        void VertexAttrib2dv(uint index, IntPtr v);
        unsafe void VertexAttrib2dv(uint index, double* v);
        void VertexAttrib2f(uint index, float x, float y);
        void VertexAttrib2fv(uint index, [In]float[] v);
        void VertexAttrib2fv(uint index, IntPtr v);
        unsafe void VertexAttrib2fv(uint index, float* v);
        void VertexAttrib2s(uint index, short x, short y);
        void VertexAttrib2sv(uint index, [In]short[] v);
        void VertexAttrib2sv(uint index, IntPtr v);
        unsafe void VertexAttrib2sv(uint index, short* v);
        void VertexAttrib3d(uint index, double x, double y, double z);
        void VertexAttrib3dv(uint index, [In]double[] v);
        void VertexAttrib3dv(uint index, IntPtr v);
        unsafe void VertexAttrib3dv(uint index, double* v);
        void VertexAttrib3f(uint index, float x, float y, float z);
        void VertexAttrib3fv(uint index, [In]float[] v);
        void VertexAttrib3fv(uint index, IntPtr v);
        unsafe void VertexAttrib3fv(uint index, float* v);
        void VertexAttrib3s(uint index, short x, short y, short z);
        void VertexAttrib3sv(uint index, [In]short[] v);
        void VertexAttrib3sv(uint index, IntPtr v);
        unsafe void VertexAttrib3sv(uint index, short* v);
        void VertexAttrib4Nbv(uint index, [In]sbyte[] v);
        void VertexAttrib4Nbv(uint index, IntPtr v);
        unsafe void VertexAttrib4Nbv(uint index, sbyte* v);
        void VertexAttrib4Niv(uint index, [In]int[] v);
        void VertexAttrib4Niv(uint index, IntPtr v);
        unsafe void VertexAttrib4Niv(uint index, int* v);
        void VertexAttrib4Nsv(uint index, [In]short[] v);
        void VertexAttrib4Nsv(uint index, IntPtr v);
        unsafe void VertexAttrib4Nsv(uint index, short* v);
        void VertexAttrib4Nub(uint index, byte x, byte y, byte z, byte w);
        void VertexAttrib4Nubv(uint index, [In]string v);
        void VertexAttrib4Nuiv(uint index, [In]uint[] v);
        void VertexAttrib4Nuiv(uint index, IntPtr v);
        unsafe void VertexAttrib4Nuiv(uint index, uint* v);
        void VertexAttrib4Nusv(uint index, [In]ushort[] v);
        void VertexAttrib4Nusv(uint index, IntPtr v);
        unsafe void VertexAttrib4Nusv(uint index, ushort* v);
        void VertexAttrib4bv(uint index, [In]sbyte[] v);
        void VertexAttrib4bv(uint index, IntPtr v);
        unsafe void VertexAttrib4bv(uint index, sbyte* v);
        void VertexAttrib4d(uint index, double x, double y, double z, double w);
        void VertexAttrib4dv(uint index, [In]double[] v);
        void VertexAttrib4dv(uint index, IntPtr v);
        unsafe void VertexAttrib4dv(uint index, double* v);
        void VertexAttrib4f(uint index, float x, float y, float z, float w);
        void VertexAttrib4fv(uint index, [In]float[] v);
        void VertexAttrib4fv(uint index, IntPtr v);
        unsafe void VertexAttrib4fv(uint index, float* v);
        void VertexAttrib4iv(uint index, [In]int[] v);
        void VertexAttrib4iv(uint index, IntPtr v);
        unsafe void VertexAttrib4iv(uint index, int* v);
        void VertexAttrib4s(uint index, short x, short y, short z, short w);
        void VertexAttrib4sv(uint index, [In]short[] v);
        void VertexAttrib4sv(uint index, IntPtr v);
        unsafe void VertexAttrib4sv(uint index, short* v);
        void VertexAttrib4ubv(uint index, [In]string v);
        void VertexAttrib4uiv(uint index, [In]uint[] v);
        void VertexAttrib4uiv(uint index, IntPtr v);
        unsafe void VertexAttrib4uiv(uint index, uint* v);
        void VertexAttrib4usv(uint index, [In]ushort[] v);
        void VertexAttrib4usv(uint index, IntPtr v);
        unsafe void VertexAttrib4usv(uint index, ushort* v);
        void VertexAttribPointer(uint index, int size, uint type, GLboolean normalized, int stride, IntPtr pointer);
    }
    public interface IOpenGL21 : IOpenGL20
    {
        void UniformMatrix2x3fv(int location, int count, GLboolean transpose, [In]float[] value);
        void UniformMatrix2x3fv(int location, int count, GLboolean transpose, IntPtr value);
        unsafe void UniformMatrix2x3fv(int location, int count, GLboolean transpose, float* value);
        void UniformMatrix3x2fv(int location, int count, GLboolean transpose, [In]float[] value);
        void UniformMatrix3x2fv(int location, int count, GLboolean transpose, IntPtr value);
        unsafe void UniformMatrix3x2fv(int location, int count, GLboolean transpose, float* value);
        void UniformMatrix2x4fv(int location, int count, GLboolean transpose, [In]float[] value);
        void UniformMatrix2x4fv(int location, int count, GLboolean transpose, IntPtr value);
        unsafe void UniformMatrix2x4fv(int location, int count, GLboolean transpose, float* value);
        void UniformMatrix4x2fv(int location, int count, GLboolean transpose, [In]float[] value);
        void UniformMatrix4x2fv(int location, int count, GLboolean transpose, IntPtr value);
        unsafe void UniformMatrix4x2fv(int location, int count, GLboolean transpose, float* value);
        void UniformMatrix3x4fv(int location, int count, GLboolean transpose, [In]float[] value);
        void UniformMatrix3x4fv(int location, int count, GLboolean transpose, IntPtr value);
        unsafe void UniformMatrix3x4fv(int location, int count, GLboolean transpose, float* value);
        void UniformMatrix4x3fv(int location, int count, GLboolean transpose, [In]float[] value);
        void UniformMatrix4x3fv(int location, int count, GLboolean transpose, IntPtr value);
        unsafe void UniformMatrix4x3fv(int location, int count, GLboolean transpose, float* value);
    }
    public interface IOpenGL30 : IOpenGL21
    {
        void ColorMaski(uint index, GLboolean r, GLboolean g, GLboolean b, GLboolean a);
        void GetBooleani_v(uint target, uint index, [Out]GLboolean data);
        void GetIntegeri_v(uint target, uint index, [Out]int[] data);
        void Enablei(uint target, uint index);
        void Disablei(uint target, uint index);
        GLboolean IsEnabledi(uint target, uint index);
        void BeginTransformFeedback(uint primitiveMode);
        void EndTransformFeedback();
        void BindBufferRange(uint target, uint index, uint buffer, IntPtr offset, IntPtr size);
        void BindBufferBase(uint target, uint index, uint buffer);
        void TransformFeedbackVaryings(uint program, int count, [In]string[] varyings, uint bufferMode);
        void GetTransformFeedbackVarying(uint program, uint index, int bufSize, [Out]int[] length, [Out]int[] size, [Out]uint[] type, ref string name);
        void ClampColor(uint target, uint clamp);
        void BeginConditionalRender(uint id, uint mode);
        void EndConditionalRender();
        void VertexAttribIPointer(uint index, int size, uint type, int stride, IntPtr pointer);
        void GetVertexAttribIiv(uint index, uint pname, [Out]int[] @params);
        void GetVertexAttribIuiv(uint index, uint pname, [Out]uint[] @params);
        void VertexAttribI1i(uint index, int x);
        void VertexAttribI2i(uint index, int x, int y);
        void VertexAttribI3i(uint index, int x, int y, int z);
        void VertexAttribI4i(uint index, int x, int y, int z, int w);
        void VertexAttribI1ui(uint index, uint x);
        void VertexAttribI2ui(uint index, uint x, uint y);
        void VertexAttribI3ui(uint index, uint x, uint y, uint z);
        void VertexAttribI4ui(uint index, uint x, uint y, uint z, uint w);
        void VertexAttribI1iv(uint index, [In]int[] v);
        void VertexAttribI1iv(uint index, IntPtr v);
        unsafe void VertexAttribI1iv(uint index, int* v);
        void VertexAttribI2iv(uint index, [In]int[] v);
        void VertexAttribI2iv(uint index, IntPtr v);
        unsafe void VertexAttribI2iv(uint index, int* v);
        void VertexAttribI3iv(uint index, [In]int[] v);
        void VertexAttribI3iv(uint index, IntPtr v);
        unsafe void VertexAttribI3iv(uint index, int* v);
        void VertexAttribI4iv(uint index, [In]int[] v);
        void VertexAttribI4iv(uint index, IntPtr v);
        unsafe void VertexAttribI4iv(uint index, int* v);
        void VertexAttribI1uiv(uint index, [In]uint[] v);
        void VertexAttribI1uiv(uint index, IntPtr v);
        unsafe void VertexAttribI1uiv(uint index, uint* v);
        void VertexAttribI2uiv(uint index, [In]uint[] v);
        void VertexAttribI2uiv(uint index, IntPtr v);
        unsafe void VertexAttribI2uiv(uint index, uint* v);
        void VertexAttribI3uiv(uint index, [In]uint[] v);
        void VertexAttribI3uiv(uint index, IntPtr v);
        unsafe void VertexAttribI3uiv(uint index, uint* v);
        void VertexAttribI4uiv(uint index, [In]uint[] v);
        void VertexAttribI4uiv(uint index, IntPtr v);
        unsafe void VertexAttribI4uiv(uint index, uint* v);
        void VertexAttribI4bv(uint index, [In]sbyte[] v);
        void VertexAttribI4bv(uint index, IntPtr v);
        unsafe void VertexAttribI4bv(uint index, sbyte* v);
        void VertexAttribI4sv(uint index, [In]short[] v);
        void VertexAttribI4sv(uint index, IntPtr v);
        unsafe void VertexAttribI4sv(uint index, short* v);
        void VertexAttribI4ubv(uint index, [In]string v);
        void VertexAttribI4usv(uint index, [In]ushort[] v);
        void VertexAttribI4usv(uint index, IntPtr v);
        unsafe void VertexAttribI4usv(uint index, ushort* v);
        void GetUniformuiv(uint program, int location, [Out]uint[] @params);
        void BindFragDataLocation(uint program, uint color, [In]string name);
        int GetFragDataLocation(uint program, [In]string name);
        void Uniform1ui(int location, uint v0);
        void Uniform2ui(int location, uint v0, uint v1);
        void Uniform3ui(int location, uint v0, uint v1, uint v2);
        void Uniform4ui(int location, uint v0, uint v1, uint v2, uint v3);
        void Uniform1uiv(int location, int count, [In]uint[] value);
        void Uniform1uiv(int location, int count, IntPtr value);
        unsafe void Uniform1uiv(int location, int count, uint* value);
        void Uniform2uiv(int location, int count, [In]uint[] value);
        void Uniform2uiv(int location, int count, IntPtr value);
        unsafe void Uniform2uiv(int location, int count, uint* value);
        void Uniform3uiv(int location, int count, [In]uint[] value);
        void Uniform3uiv(int location, int count, IntPtr value);
        unsafe void Uniform3uiv(int location, int count, uint* value);
        void Uniform4uiv(int location, int count, [In]uint[] value);
        void Uniform4uiv(int location, int count, IntPtr value);
        unsafe void Uniform4uiv(int location, int count, uint* value);
        void TexParameterIiv(TextureTarget target, TextureParameterName pname, [In]int[] @params);
        void TexParameterIiv(TextureTarget target, TextureParameterName pname, IntPtr @params);
        unsafe void TexParameterIiv(TextureTarget target, TextureParameterName pname, int* @params);
        void TexParameterIuiv(TextureTarget target, TextureParameterName pname, [In]uint[] @params);
        void TexParameterIuiv(TextureTarget target, TextureParameterName pname, IntPtr @params);
        unsafe void TexParameterIuiv(TextureTarget target, TextureParameterName pname, uint* @params);
        void GetTexParameterIiv(TextureTarget target, GetTextureParameter pname, [Out]int[] @params);
        void GetTexParameterIuiv(TextureTarget target, GetTextureParameter pname, [Out]uint[] @params);
        void ClearBufferiv(uint buffer, int drawbuffer, [In]int[] value);
        void ClearBufferiv(uint buffer, int drawbuffer, IntPtr value);
        unsafe void ClearBufferiv(uint buffer, int drawbuffer, int* value);
        void ClearBufferuiv(uint buffer, int drawbuffer, [In]uint[] value);
        void ClearBufferuiv(uint buffer, int drawbuffer, IntPtr value);
        unsafe void ClearBufferuiv(uint buffer, int drawbuffer, uint* value);
        void ClearBufferfv(uint buffer, int drawbuffer, [In]float[] value);
        void ClearBufferfv(uint buffer, int drawbuffer, IntPtr value);
        unsafe void ClearBufferfv(uint buffer, int drawbuffer, float* value);
        void ClearBufferfi(uint buffer, int drawbuffer, float depth, int stencil);
        [return: MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(ConstStringReturnMarshaller))]
        string GetStringi(uint name, uint index);
        GLboolean IsRenderbuffer(uint renderbuffer);
        void BindRenderbuffer(uint target, uint renderbuffer);
        void DeleteRenderbuffers(int n, [In]uint[] renderbuffers);
        void DeleteRenderbuffers(int n, IntPtr renderbuffers);
        unsafe void DeleteRenderbuffers(int n, uint* renderbuffers);
        void GenRenderbuffers(int n, [Out]uint[] renderbuffers);
        void RenderbufferStorage(uint target, uint internalformat, int width, int height);
        void GetRenderbufferParameteriv(uint target, uint pname, [Out]int[] @params);
        GLboolean IsFramebuffer(uint framebuffer);
        void BindFramebuffer(uint target, uint framebuffer);
        void DeleteFramebuffers(int n, [In]uint[] framebuffers);
        void DeleteFramebuffers(int n, IntPtr framebuffers);
        unsafe void DeleteFramebuffers(int n, uint* framebuffers);
        void GenFramebuffers(int n, [Out]uint[] framebuffers);
        uint CheckFramebufferStatus(uint target);
        void FramebufferTexture1D(uint target, uint attachment, uint textarget, uint texture, int level);
        void FramebufferTexture2D(uint target, uint attachment, uint textarget, uint texture, int level);
        void FramebufferTexture3D(uint target, uint attachment, uint textarget, uint texture, int level, int zoffset);
        void FramebufferRenderbuffer(uint target, uint attachment, uint renderbuffertarget, uint renderbuffer);
        void GetFramebufferAttachmentParameteriv(uint target, uint attachment, uint pname, [Out]int[] @params);
        void GenerateMipmap(uint target);
        void BlitFramebuffer(int srcX0, int srcY0, int srcX1, int srcY1, int dstX0, int dstY0, int dstX1, int dstY1, uint mask, uint filter);
        void RenderbufferStorageMultisample(uint target, int samples, uint internalformat, int width, int height);
        void FramebufferTextureLayer(uint target, uint attachment, uint texture, int level, int layer);
        IntPtr MapBufferRange(uint target, IntPtr offset, IntPtr length, uint access);
        void FlushMappedBufferRange(uint target, IntPtr offset, IntPtr length);
        void BindVertexArray(uint array);
        void DeleteVertexArrays(int n, [In]uint[] arrays);
        void DeleteVertexArrays(int n, IntPtr arrays);
        unsafe void DeleteVertexArrays(int n, uint* arrays);
        void GenVertexArrays(int n, [Out]uint[] arrays);
        GLboolean IsVertexArray(uint array);
    }
    public interface IOpenGL31 : IOpenGL30
    {
        void DrawArraysInstanced(PrimitiveType mode, int first, int count, int instancecount);
        void DrawElementsInstanced(PrimitiveType mode, int count, uint type, IntPtr indices, int instancecount);
        void TexBuffer(TextureTarget target, uint internalformat, uint buffer);
        void PrimitiveRestartIndex(uint index);
        void CopyBufferSubData(uint readTarget, uint writeTarget, IntPtr readOffset, IntPtr writeOffset, IntPtr size);
        void GetUniformIndices(uint program, int uniformCount, [In]string[] uniformNames, [Out]uint[] uniformIndices);
        void GetActiveUniformsiv(uint program, int uniformCount, [In]uint[] uniformIndices, uint pname, [Out]int[] @params);
        void GetActiveUniformName(uint program, uint uniformIndex, int bufSize, [Out]int[] length, ref string uniformName);
        uint GetUniformBlockIndex(uint program, [In]string uniformBlockName);
        void GetActiveUniformBlockiv(uint program, uint uniformBlockIndex, uint pname, [Out]int[] @params);
        void GetActiveUniformBlockName(uint program, uint uniformBlockIndex, int bufSize, [Out]int[] length, ref string uniformBlockName);
        void UniformBlockBinding(uint program, uint uniformBlockIndex, uint uniformBlockBinding);
    }
    public interface IOpenGL32 : IOpenGL31
    {
        void DrawElementsBaseVertex(PrimitiveType mode, int count, uint type, IntPtr indices, int basevertex);
        void DrawRangeElementsBaseVertex(PrimitiveType mode, uint start, uint end, int count, uint type, IntPtr indices, int basevertex);
        void DrawElementsInstancedBaseVertex(PrimitiveType mode, int count, uint type, IntPtr indices, int instancecount, int basevertex);
        void MultiDrawElementsBaseVertex(uint mode, [In]int[] count, uint type, [Out]IntPtr[] indices, int drawcount, [In]int[] basevertex);
        void ProvokingVertex(uint mode);
        IntPtr FenceSync(uint condition, uint flags);
        GLboolean IsSync(IntPtr sync);
        void DeleteSync(IntPtr sync);
        uint ClientWaitSync(IntPtr sync, uint flags, ulong timeout);
        void WaitSync(IntPtr sync, uint flags, ulong timeout);
        void GetInteger64v(uint pname, [Out]long[] data);
        void GetSynciv(IntPtr sync, uint pname, int bufSize, [Out]int[] length, [Out]int[] values);
        void GetInteger64i_v(uint target, uint index, [Out]long[] data);
        void GetBufferParameteri64v(uint target, uint pname, [Out]long[] @params);
        void FramebufferTexture(uint target, uint attachment, uint texture, int level);
        void TexImage2DMultisample(uint target, int samples, uint internalformat, int width, int height, GLboolean fixedsamplelocations);
        void TexImage3DMultisample(uint target, int samples, uint internalformat, int width, int height, int depth, GLboolean fixedsamplelocations);
        void GetMultisamplefv(uint pname, uint index, [Out]float[] val);
        void SampleMaski(uint maskNumber, uint mask);
    }
    public interface IOpenGL33 : IOpenGL32
    {
        void BindFragDataLocationIndexed(uint program, uint colorNumber, uint index, [In]string name);
        int GetFragDataIndex(uint program, [In]string name);
        void GenSamplers(int count, [Out]uint[] samplers);
        void DeleteSamplers(int count, [In]uint[] samplers);
        void DeleteSamplers(int count, IntPtr samplers);
        unsafe void DeleteSamplers(int count, uint* samplers);
        GLboolean IsSampler(uint sampler);
        void BindSampler(uint unit, uint sampler);
        void SamplerParameteri(uint sampler, uint pname, int param);
        void SamplerParameteriv(uint sampler, uint pname, [In]int[] param);
        void SamplerParameteriv(uint sampler, uint pname, IntPtr param);
        unsafe void SamplerParameteriv(uint sampler, uint pname, int* param);
        void SamplerParameterf(uint sampler, uint pname, float param);
        void SamplerParameterfv(uint sampler, uint pname, [In]float[] param);
        void SamplerParameterfv(uint sampler, uint pname, IntPtr param);
        unsafe void SamplerParameterfv(uint sampler, uint pname, float* param);
        void SamplerParameterIiv(uint sampler, uint pname, [In]int[] param);
        void SamplerParameterIiv(uint sampler, uint pname, IntPtr param);
        unsafe void SamplerParameterIiv(uint sampler, uint pname, int* param);
        void SamplerParameterIuiv(uint sampler, uint pname, [In]uint[] param);
        void SamplerParameterIuiv(uint sampler, uint pname, IntPtr param);
        unsafe void SamplerParameterIuiv(uint sampler, uint pname, uint* param);
        void GetSamplerParameteriv(uint sampler, uint pname, [Out]int[] @params);
        void GetSamplerParameterIiv(uint sampler, uint pname, [Out]int[] @params);
        void GetSamplerParameterfv(uint sampler, uint pname, [Out]float[] @params);
        void GetSamplerParameterIuiv(uint sampler, uint pname, [Out]uint[] @params);
        void QueryCounter(uint id, uint target);
        void GetQueryObjecti64v(uint id, uint pname, [Out]long[] @params);
        void GetQueryObjectui64v(uint id, uint pname, [Out]ulong[] @params);
        void VertexAttribDivisor(uint index, uint divisor);
        void VertexAttribP1ui(uint index, uint type, GLboolean normalized, uint value);
        void VertexAttribP1uiv(uint index, uint type, GLboolean normalized, [In]uint[] value);
        void VertexAttribP1uiv(uint index, uint type, GLboolean normalized, IntPtr value);
        unsafe void VertexAttribP1uiv(uint index, uint type, GLboolean normalized, uint* value);
        void VertexAttribP2ui(uint index, uint type, GLboolean normalized, uint value);
        void VertexAttribP2uiv(uint index, uint type, GLboolean normalized, [In]uint[] value);
        void VertexAttribP2uiv(uint index, uint type, GLboolean normalized, IntPtr value);
        unsafe void VertexAttribP2uiv(uint index, uint type, GLboolean normalized, uint* value);
        void VertexAttribP3ui(uint index, uint type, GLboolean normalized, uint value);
        void VertexAttribP3uiv(uint index, uint type, GLboolean normalized, [In]uint[] value);
        void VertexAttribP3uiv(uint index, uint type, GLboolean normalized, IntPtr value);
        unsafe void VertexAttribP3uiv(uint index, uint type, GLboolean normalized, uint* value);
        void VertexAttribP4ui(uint index, uint type, GLboolean normalized, uint value);
        void VertexAttribP4uiv(uint index, uint type, GLboolean normalized, [In]uint[] value);
        void VertexAttribP4uiv(uint index, uint type, GLboolean normalized, IntPtr value);
        unsafe void VertexAttribP4uiv(uint index, uint type, GLboolean normalized, uint* value);
        void VertexP2ui(uint type, uint value);
        void VertexP2uiv(uint type, [In]uint[] value);
        void VertexP2uiv(uint type, IntPtr value);
        unsafe void VertexP2uiv(uint type, uint* value);
        void VertexP3ui(uint type, uint value);
        void VertexP3uiv(uint type, [In]uint[] value);
        void VertexP3uiv(uint type, IntPtr value);
        unsafe void VertexP3uiv(uint type, uint* value);
        void VertexP4ui(uint type, uint value);
        void VertexP4uiv(uint type, [In]uint[] value);
        void VertexP4uiv(uint type, IntPtr value);
        unsafe void VertexP4uiv(uint type, uint* value);
        void TexCoordP1ui(uint type, uint coords);
        void TexCoordP1uiv(uint type, [In]uint[] coords);
        void TexCoordP1uiv(uint type, IntPtr coords);
        unsafe void TexCoordP1uiv(uint type, uint* coords);
        void TexCoordP2ui(uint type, uint coords);
        void TexCoordP2uiv(uint type, [In]uint[] coords);
        void TexCoordP2uiv(uint type, IntPtr coords);
        unsafe void TexCoordP2uiv(uint type, uint* coords);
        void TexCoordP3ui(uint type, uint coords);
        void TexCoordP3uiv(uint type, [In]uint[] coords);
        void TexCoordP3uiv(uint type, IntPtr coords);
        unsafe void TexCoordP3uiv(uint type, uint* coords);
        void TexCoordP4ui(uint type, uint coords);
        void TexCoordP4uiv(uint type, [In]uint[] coords);
        void TexCoordP4uiv(uint type, IntPtr coords);
        unsafe void TexCoordP4uiv(uint type, uint* coords);
        void MultiTexCoordP1ui(uint texture, uint type, uint coords);
        void MultiTexCoordP1uiv(uint texture, uint type, [In]uint[] coords);
        void MultiTexCoordP1uiv(uint texture, uint type, IntPtr coords);
        unsafe void MultiTexCoordP1uiv(uint texture, uint type, uint* coords);
        void MultiTexCoordP2ui(uint texture, uint type, uint coords);
        void MultiTexCoordP2uiv(uint texture, uint type, [In]uint[] coords);
        void MultiTexCoordP2uiv(uint texture, uint type, IntPtr coords);
        unsafe void MultiTexCoordP2uiv(uint texture, uint type, uint* coords);
        void MultiTexCoordP3ui(uint texture, uint type, uint coords);
        void MultiTexCoordP3uiv(uint texture, uint type, [In]uint[] coords);
        void MultiTexCoordP3uiv(uint texture, uint type, IntPtr coords);
        unsafe void MultiTexCoordP3uiv(uint texture, uint type, uint* coords);
        void MultiTexCoordP4ui(uint texture, uint type, uint coords);
        void MultiTexCoordP4uiv(uint texture, uint type, [In]uint[] coords);
        void MultiTexCoordP4uiv(uint texture, uint type, IntPtr coords);
        unsafe void MultiTexCoordP4uiv(uint texture, uint type, uint* coords);
        void NormalP3ui(uint type, uint coords);
        void NormalP3uiv(uint type, [In]uint[] coords);
        void NormalP3uiv(uint type, IntPtr coords);
        unsafe void NormalP3uiv(uint type, uint* coords);
        void ColorP3ui(uint type, uint color);
        void ColorP3uiv(uint type, [In]uint[] color);
        void ColorP3uiv(uint type, IntPtr color);
        unsafe void ColorP3uiv(uint type, uint* color);
        void ColorP4ui(uint type, uint color);
        void ColorP4uiv(uint type, [In]uint[] color);
        void ColorP4uiv(uint type, IntPtr color);
        unsafe void ColorP4uiv(uint type, uint* color);
        void SecondaryColorP3ui(uint type, uint color);
        void SecondaryColorP3uiv(uint type, [In]uint[] color);
        void SecondaryColorP3uiv(uint type, IntPtr color);
        unsafe void SecondaryColorP3uiv(uint type, uint* color);
    }
    public interface IOpenGL40 : IOpenGL33
    {
        void MinSampleShading(float value);
        void BlendEquationi(uint buf, uint mode);
        void BlendEquationSeparatei(uint buf, uint modeRGB, uint modeAlpha);
        void BlendFunci(uint buf, uint src, uint dst);
        void BlendFuncSeparatei(uint buf, uint srcRGB, uint dstRGB, uint srcAlpha, uint dstAlpha);
        void DrawArraysIndirect(PrimitiveType mode, IntPtr indirect);
        void DrawElementsIndirect(PrimitiveType mode, uint type, IntPtr indirect);
        void Uniform1d(int location, double x);
        void Uniform2d(int location, double x, double y);
        void Uniform3d(int location, double x, double y, double z);
        void Uniform4d(int location, double x, double y, double z, double w);
        void Uniform1dv(int location, int count, [In]double[] value);
        void Uniform1dv(int location, int count, IntPtr value);
        unsafe void Uniform1dv(int location, int count, double* value);
        void Uniform2dv(int location, int count, [In]double[] value);
        void Uniform2dv(int location, int count, IntPtr value);
        unsafe void Uniform2dv(int location, int count, double* value);
        void Uniform3dv(int location, int count, [In]double[] value);
        void Uniform3dv(int location, int count, IntPtr value);
        unsafe void Uniform3dv(int location, int count, double* value);
        void Uniform4dv(int location, int count, [In]double[] value);
        void Uniform4dv(int location, int count, IntPtr value);
        unsafe void Uniform4dv(int location, int count, double* value);
        void UniformMatrix2dv(int location, int count, GLboolean transpose, [In]double[] value);
        void UniformMatrix2dv(int location, int count, GLboolean transpose, IntPtr value);
        unsafe void UniformMatrix2dv(int location, int count, GLboolean transpose, double* value);
        void UniformMatrix3dv(int location, int count, GLboolean transpose, [In]double[] value);
        void UniformMatrix3dv(int location, int count, GLboolean transpose, IntPtr value);
        unsafe void UniformMatrix3dv(int location, int count, GLboolean transpose, double* value);
        void UniformMatrix4dv(int location, int count, GLboolean transpose, [In]double[] value);
        void UniformMatrix4dv(int location, int count, GLboolean transpose, IntPtr value);
        unsafe void UniformMatrix4dv(int location, int count, GLboolean transpose, double* value);
        void UniformMatrix2x3dv(int location, int count, GLboolean transpose, [In]double[] value);
        void UniformMatrix2x3dv(int location, int count, GLboolean transpose, IntPtr value);
        unsafe void UniformMatrix2x3dv(int location, int count, GLboolean transpose, double* value);
        void UniformMatrix2x4dv(int location, int count, GLboolean transpose, [In]double[] value);
        void UniformMatrix2x4dv(int location, int count, GLboolean transpose, IntPtr value);
        unsafe void UniformMatrix2x4dv(int location, int count, GLboolean transpose, double* value);
        void UniformMatrix3x2dv(int location, int count, GLboolean transpose, [In]double[] value);
        void UniformMatrix3x2dv(int location, int count, GLboolean transpose, IntPtr value);
        unsafe void UniformMatrix3x2dv(int location, int count, GLboolean transpose, double* value);
        void UniformMatrix3x4dv(int location, int count, GLboolean transpose, [In]double[] value);
        void UniformMatrix3x4dv(int location, int count, GLboolean transpose, IntPtr value);
        unsafe void UniformMatrix3x4dv(int location, int count, GLboolean transpose, double* value);
        void UniformMatrix4x2dv(int location, int count, GLboolean transpose, [In]double[] value);
        void UniformMatrix4x2dv(int location, int count, GLboolean transpose, IntPtr value);
        unsafe void UniformMatrix4x2dv(int location, int count, GLboolean transpose, double* value);
        void UniformMatrix4x3dv(int location, int count, GLboolean transpose, [In]double[] value);
        void UniformMatrix4x3dv(int location, int count, GLboolean transpose, IntPtr value);
        unsafe void UniformMatrix4x3dv(int location, int count, GLboolean transpose, double* value);
        void GetUniformdv(uint program, int location, [Out]double[] @params);
        int GetSubroutineUniformLocation(uint program, uint shadertype, [In]string name);
        uint GetSubroutineIndex(uint program, uint shadertype, [In]string name);
        void GetActiveSubroutineUniformiv(uint program, uint shadertype, uint index, uint pname, [Out]int[] values);
        void GetActiveSubroutineUniformName(uint program, uint shadertype, uint index, int bufsize, [Out]int[] length, ref string name);
        void GetActiveSubroutineName(uint program, uint shadertype, uint index, int bufsize, [Out]int[] length, ref string name);
        void UniformSubroutinesuiv(uint shadertype, int count, [In]uint[] indices);
        void UniformSubroutinesuiv(uint shadertype, int count, IntPtr indices);
        unsafe void UniformSubroutinesuiv(uint shadertype, int count, uint* indices);
        void GetUniformSubroutineuiv(uint shadertype, int location, [Out]uint[] @params);
        void GetProgramStageiv(uint program, uint shadertype, uint pname, [Out]int[] values);
        void PatchParameteri(uint pname, int value);
        void PatchParameterfv(uint pname, [In]float[] values);
        void PatchParameterfv(uint pname, IntPtr values);
        unsafe void PatchParameterfv(uint pname, float* values);
        void BindTransformFeedback(uint target, uint id);
        void DeleteTransformFeedbacks(int n, [In]uint[] ids);
        void DeleteTransformFeedbacks(int n, IntPtr ids);
        unsafe void DeleteTransformFeedbacks(int n, uint* ids);
        void GenTransformFeedbacks(int n, [Out]uint[] ids);
        GLboolean IsTransformFeedback(uint id);
        void PauseTransformFeedback();
        void ResumeTransformFeedback();
        void DrawTransformFeedback(PrimitiveType mode, uint id);
        void DrawTransformFeedbackStream(PrimitiveType mode, uint id, uint stream);
        void BeginQueryIndexed(uint target, uint index, uint id);
        void EndQueryIndexed(uint target, uint index);
        void GetQueryIndexediv(uint target, uint index, uint pname, [Out]int[] @params);
    }
    public interface IOpenGL41 : IOpenGL40
    {
        void ReleaseShaderCompiler();
        void ShaderBinary(int count, [In]uint[] shaders, uint binaryformat, IntPtr binary, int length);
        void GetShaderPrecisionFormat(uint shadertype, uint precisiontype, [Out]int[] range, [Out]int[] precision);
        void DepthRangef(float n, float f);
        void ClearDepthf(float d);
        void GetProgramBinary(uint program, int bufSize, [Out]int[] length, [Out]uint[] binaryFormat, IntPtr binary);
        void ProgramBinary(uint program, uint binaryFormat, IntPtr binary, int length);
        void ProgramParameteri(uint program, uint pname, int value);
        void UseProgramStages(uint pipeline, uint stages, uint program);
        void ActiveShaderProgram(uint pipeline, uint program);
        uint CreateShaderProgramv(uint type, int count, [In]string[] strings);
        void BindProgramPipeline(uint pipeline);
        void DeleteProgramPipelines(int n, [In]uint[] pipelines);
        void DeleteProgramPipelines(int n, IntPtr pipelines);
        unsafe void DeleteProgramPipelines(int n, uint* pipelines);
        void GenProgramPipelines(int n, [Out]uint[] pipelines);
        GLboolean IsProgramPipeline(uint pipeline);
        void GetProgramPipelineiv(uint pipeline, uint pname, [Out]int[] @params);
        void ProgramUniform1i(uint program, int location, int v0);
        void ProgramUniform1iv(uint program, int location, int count, [In]int[] value);
        void ProgramUniform1iv(uint program, int location, int count, IntPtr value);
        unsafe void ProgramUniform1iv(uint program, int location, int count, int* value);
        void ProgramUniform1f(uint program, int location, float v0);
        void ProgramUniform1fv(uint program, int location, int count, [In]float[] value);
        void ProgramUniform1fv(uint program, int location, int count, IntPtr value);
        unsafe void ProgramUniform1fv(uint program, int location, int count, float* value);
        void ProgramUniform1d(uint program, int location, double v0);
        void ProgramUniform1dv(uint program, int location, int count, [In]double[] value);
        void ProgramUniform1dv(uint program, int location, int count, IntPtr value);
        unsafe void ProgramUniform1dv(uint program, int location, int count, double* value);
        void ProgramUniform1ui(uint program, int location, uint v0);
        void ProgramUniform1uiv(uint program, int location, int count, [In]uint[] value);
        void ProgramUniform1uiv(uint program, int location, int count, IntPtr value);
        unsafe void ProgramUniform1uiv(uint program, int location, int count, uint* value);
        void ProgramUniform2i(uint program, int location, int v0, int v1);
        void ProgramUniform2iv(uint program, int location, int count, [In]int[] value);
        void ProgramUniform2iv(uint program, int location, int count, IntPtr value);
        unsafe void ProgramUniform2iv(uint program, int location, int count, int* value);
        void ProgramUniform2f(uint program, int location, float v0, float v1);
        void ProgramUniform2fv(uint program, int location, int count, [In]float[] value);
        void ProgramUniform2fv(uint program, int location, int count, IntPtr value);
        unsafe void ProgramUniform2fv(uint program, int location, int count, float* value);
        void ProgramUniform2d(uint program, int location, double v0, double v1);
        void ProgramUniform2dv(uint program, int location, int count, [In]double[] value);
        void ProgramUniform2dv(uint program, int location, int count, IntPtr value);
        unsafe void ProgramUniform2dv(uint program, int location, int count, double* value);
        void ProgramUniform2ui(uint program, int location, uint v0, uint v1);
        void ProgramUniform2uiv(uint program, int location, int count, [In]uint[] value);
        void ProgramUniform2uiv(uint program, int location, int count, IntPtr value);
        unsafe void ProgramUniform2uiv(uint program, int location, int count, uint* value);
        void ProgramUniform3i(uint program, int location, int v0, int v1, int v2);
        void ProgramUniform3iv(uint program, int location, int count, [In]int[] value);
        void ProgramUniform3iv(uint program, int location, int count, IntPtr value);
        unsafe void ProgramUniform3iv(uint program, int location, int count, int* value);
        void ProgramUniform3f(uint program, int location, float v0, float v1, float v2);
        void ProgramUniform3fv(uint program, int location, int count, [In]float[] value);
        void ProgramUniform3fv(uint program, int location, int count, IntPtr value);
        unsafe void ProgramUniform3fv(uint program, int location, int count, float* value);
        void ProgramUniform3d(uint program, int location, double v0, double v1, double v2);
        void ProgramUniform3dv(uint program, int location, int count, [In]double[] value);
        void ProgramUniform3dv(uint program, int location, int count, IntPtr value);
        unsafe void ProgramUniform3dv(uint program, int location, int count, double* value);
        void ProgramUniform3ui(uint program, int location, uint v0, uint v1, uint v2);
        void ProgramUniform3uiv(uint program, int location, int count, [In]uint[] value);
        void ProgramUniform3uiv(uint program, int location, int count, IntPtr value);
        unsafe void ProgramUniform3uiv(uint program, int location, int count, uint* value);
        void ProgramUniform4i(uint program, int location, int v0, int v1, int v2, int v3);
        void ProgramUniform4iv(uint program, int location, int count, [In]int[] value);
        void ProgramUniform4iv(uint program, int location, int count, IntPtr value);
        unsafe void ProgramUniform4iv(uint program, int location, int count, int* value);
        void ProgramUniform4f(uint program, int location, float v0, float v1, float v2, float v3);
        void ProgramUniform4fv(uint program, int location, int count, [In]float[] value);
        void ProgramUniform4fv(uint program, int location, int count, IntPtr value);
        unsafe void ProgramUniform4fv(uint program, int location, int count, float* value);
        void ProgramUniform4d(uint program, int location, double v0, double v1, double v2, double v3);
        void ProgramUniform4dv(uint program, int location, int count, [In]double[] value);
        void ProgramUniform4dv(uint program, int location, int count, IntPtr value);
        unsafe void ProgramUniform4dv(uint program, int location, int count, double* value);
        void ProgramUniform4ui(uint program, int location, uint v0, uint v1, uint v2, uint v3);
        void ProgramUniform4uiv(uint program, int location, int count, [In]uint[] value);
        void ProgramUniform4uiv(uint program, int location, int count, IntPtr value);
        unsafe void ProgramUniform4uiv(uint program, int location, int count, uint* value);
        void ProgramUniformMatrix2fv(uint program, int location, int count, GLboolean transpose, [In]float[] value);
        void ProgramUniformMatrix2fv(uint program, int location, int count, GLboolean transpose, IntPtr value);
        unsafe void ProgramUniformMatrix2fv(uint program, int location, int count, GLboolean transpose, float* value);
        void ProgramUniformMatrix3fv(uint program, int location, int count, GLboolean transpose, [In]float[] value);
        void ProgramUniformMatrix3fv(uint program, int location, int count, GLboolean transpose, IntPtr value);
        unsafe void ProgramUniformMatrix3fv(uint program, int location, int count, GLboolean transpose, float* value);
        void ProgramUniformMatrix4fv(uint program, int location, int count, GLboolean transpose, [In]float[] value);
        void ProgramUniformMatrix4fv(uint program, int location, int count, GLboolean transpose, IntPtr value);
        unsafe void ProgramUniformMatrix4fv(uint program, int location, int count, GLboolean transpose, float* value);
        void ProgramUniformMatrix2dv(uint program, int location, int count, GLboolean transpose, [In]double[] value);
        void ProgramUniformMatrix2dv(uint program, int location, int count, GLboolean transpose, IntPtr value);
        unsafe void ProgramUniformMatrix2dv(uint program, int location, int count, GLboolean transpose, double* value);
        void ProgramUniformMatrix3dv(uint program, int location, int count, GLboolean transpose, [In]double[] value);
        void ProgramUniformMatrix3dv(uint program, int location, int count, GLboolean transpose, IntPtr value);
        unsafe void ProgramUniformMatrix3dv(uint program, int location, int count, GLboolean transpose, double* value);
        void ProgramUniformMatrix4dv(uint program, int location, int count, GLboolean transpose, [In]double[] value);
        void ProgramUniformMatrix4dv(uint program, int location, int count, GLboolean transpose, IntPtr value);
        unsafe void ProgramUniformMatrix4dv(uint program, int location, int count, GLboolean transpose, double* value);
        void ProgramUniformMatrix2x3fv(uint program, int location, int count, GLboolean transpose, [In]float[] value);
        void ProgramUniformMatrix2x3fv(uint program, int location, int count, GLboolean transpose, IntPtr value);
        unsafe void ProgramUniformMatrix2x3fv(uint program, int location, int count, GLboolean transpose, float* value);
        void ProgramUniformMatrix3x2fv(uint program, int location, int count, GLboolean transpose, [In]float[] value);
        void ProgramUniformMatrix3x2fv(uint program, int location, int count, GLboolean transpose, IntPtr value);
        unsafe void ProgramUniformMatrix3x2fv(uint program, int location, int count, GLboolean transpose, float* value);
        void ProgramUniformMatrix2x4fv(uint program, int location, int count, GLboolean transpose, [In]float[] value);
        void ProgramUniformMatrix2x4fv(uint program, int location, int count, GLboolean transpose, IntPtr value);
        unsafe void ProgramUniformMatrix2x4fv(uint program, int location, int count, GLboolean transpose, float* value);
        void ProgramUniformMatrix4x2fv(uint program, int location, int count, GLboolean transpose, [In]float[] value);
        void ProgramUniformMatrix4x2fv(uint program, int location, int count, GLboolean transpose, IntPtr value);
        unsafe void ProgramUniformMatrix4x2fv(uint program, int location, int count, GLboolean transpose, float* value);
        void ProgramUniformMatrix3x4fv(uint program, int location, int count, GLboolean transpose, [In]float[] value);
        void ProgramUniformMatrix3x4fv(uint program, int location, int count, GLboolean transpose, IntPtr value);
        unsafe void ProgramUniformMatrix3x4fv(uint program, int location, int count, GLboolean transpose, float* value);
        void ProgramUniformMatrix4x3fv(uint program, int location, int count, GLboolean transpose, [In]float[] value);
        void ProgramUniformMatrix4x3fv(uint program, int location, int count, GLboolean transpose, IntPtr value);
        unsafe void ProgramUniformMatrix4x3fv(uint program, int location, int count, GLboolean transpose, float* value);
        void ProgramUniformMatrix2x3dv(uint program, int location, int count, GLboolean transpose, [In]double[] value);
        void ProgramUniformMatrix2x3dv(uint program, int location, int count, GLboolean transpose, IntPtr value);
        unsafe void ProgramUniformMatrix2x3dv(uint program, int location, int count, GLboolean transpose, double* value);
        void ProgramUniformMatrix3x2dv(uint program, int location, int count, GLboolean transpose, [In]double[] value);
        void ProgramUniformMatrix3x2dv(uint program, int location, int count, GLboolean transpose, IntPtr value);
        unsafe void ProgramUniformMatrix3x2dv(uint program, int location, int count, GLboolean transpose, double* value);
        void ProgramUniformMatrix2x4dv(uint program, int location, int count, GLboolean transpose, [In]double[] value);
        void ProgramUniformMatrix2x4dv(uint program, int location, int count, GLboolean transpose, IntPtr value);
        unsafe void ProgramUniformMatrix2x4dv(uint program, int location, int count, GLboolean transpose, double* value);
        void ProgramUniformMatrix4x2dv(uint program, int location, int count, GLboolean transpose, [In]double[] value);
        void ProgramUniformMatrix4x2dv(uint program, int location, int count, GLboolean transpose, IntPtr value);
        unsafe void ProgramUniformMatrix4x2dv(uint program, int location, int count, GLboolean transpose, double* value);
        void ProgramUniformMatrix3x4dv(uint program, int location, int count, GLboolean transpose, [In]double[] value);
        void ProgramUniformMatrix3x4dv(uint program, int location, int count, GLboolean transpose, IntPtr value);
        unsafe void ProgramUniformMatrix3x4dv(uint program, int location, int count, GLboolean transpose, double* value);
        void ProgramUniformMatrix4x3dv(uint program, int location, int count, GLboolean transpose, [In]double[] value);
        void ProgramUniformMatrix4x3dv(uint program, int location, int count, GLboolean transpose, IntPtr value);
        unsafe void ProgramUniformMatrix4x3dv(uint program, int location, int count, GLboolean transpose, double* value);
        void ValidateProgramPipeline(uint pipeline);
        void GetProgramPipelineInfoLog(uint pipeline, int bufSize, [Out]int[] length, ref string infoLog);
        void VertexAttribL1d(uint index, double x);
        void VertexAttribL2d(uint index, double x, double y);
        void VertexAttribL3d(uint index, double x, double y, double z);
        void VertexAttribL4d(uint index, double x, double y, double z, double w);
        void VertexAttribL1dv(uint index, [In]double[] v);
        void VertexAttribL1dv(uint index, IntPtr v);
        unsafe void VertexAttribL1dv(uint index, double* v);
        void VertexAttribL2dv(uint index, [In]double[] v);
        void VertexAttribL2dv(uint index, IntPtr v);
        unsafe void VertexAttribL2dv(uint index, double* v);
        void VertexAttribL3dv(uint index, [In]double[] v);
        void VertexAttribL3dv(uint index, IntPtr v);
        unsafe void VertexAttribL3dv(uint index, double* v);
        void VertexAttribL4dv(uint index, [In]double[] v);
        void VertexAttribL4dv(uint index, IntPtr v);
        unsafe void VertexAttribL4dv(uint index, double* v);
        void VertexAttribLPointer(uint index, int size, uint type, int stride, IntPtr pointer);
        void GetVertexAttribLdv(uint index, uint pname, [Out]double[] @params);
        void ViewportArrayv(uint first, int count, [In]float[] v);
        void ViewportArrayv(uint first, int count, IntPtr v);
        unsafe void ViewportArrayv(uint first, int count, float* v);
        void ViewportIndexedf(uint index, float x, float y, float w, float h);
        void ViewportIndexedfv(uint index, [In]float[] v);
        void ViewportIndexedfv(uint index, IntPtr v);
        unsafe void ViewportIndexedfv(uint index, float* v);
        void ScissorArrayv(uint first, int count, [In]int[] v);
        void ScissorArrayv(uint first, int count, IntPtr v);
        unsafe void ScissorArrayv(uint first, int count, int* v);
        void ScissorIndexed(uint index, int left, int bottom, int width, int height);
        void ScissorIndexedv(uint index, [In]int[] v);
        void ScissorIndexedv(uint index, IntPtr v);
        unsafe void ScissorIndexedv(uint index, int* v);
        void DepthRangeArrayv(uint first, int count, [In]double[] v);
        void DepthRangeArrayv(uint first, int count, IntPtr v);
        unsafe void DepthRangeArrayv(uint first, int count, double* v);
        void DepthRangeIndexed(uint index, double n, double f);
        void GetFloati_v(uint target, uint index, [Out]float[] data);
        void GetDoublei_v(uint target, uint index, [Out]double[] data);
    }
    public interface IOpenGL42 : IOpenGL41
    {
        void DrawArraysInstancedBaseInstance(PrimitiveType mode, int first, int count, int instancecount, uint baseinstance);
        void DrawElementsInstancedBaseInstance(PrimitiveType mode, int count, uint type, IntPtr indices, int instancecount, uint baseinstance);
        void DrawElementsInstancedBaseVertexBaseInstance(PrimitiveType mode, int count, uint type, IntPtr indices, int instancecount, int basevertex, uint baseinstance);
        void GetInternalformativ(uint target, uint internalformat, uint pname, int bufSize, [Out]int[] @params);
        void GetActiveAtomicCounterBufferiv(uint program, uint bufferIndex, uint pname, [Out]int[] @params);
        void BindImageTexture(uint unit, uint texture, int level, GLboolean layered, int layer, uint access, uint format);
        void MemoryBarrier(uint barriers);
        void TexStorage1D(uint target, int levels, uint internalformat, int width);
        void TexStorage2D(uint target, int levels, uint internalformat, int width, int height);
        void TexStorage3D(uint target, int levels, uint internalformat, int width, int height, int depth);
        void DrawTransformFeedbackInstanced(PrimitiveType mode, uint id, int instancecount);
        void DrawTransformFeedbackStreamInstanced(PrimitiveType mode, uint id, uint stream, int instancecount);
    }
    public interface IOpenGL43 : IOpenGL42
    {
        void ClearBufferData(uint target, uint internalformat, uint format, uint type, IntPtr data);
        void ClearBufferSubData(uint target, uint internalformat, IntPtr offset, IntPtr size, uint format, uint type, IntPtr data);
        void DispatchCompute(uint num_groups_x, uint num_groups_y, uint num_groups_z);
        void DispatchComputeIndirect(IntPtr indirect);
        void CopyImageSubData(uint srcName, uint srcTarget, int srcLevel, int srcX, int srcY, int srcZ, uint dstName, uint dstTarget, int dstLevel, int dstX, int dstY, int dstZ, int srcWidth, int srcHeight, int srcDepth);
        void FramebufferParameteri(uint target, uint pname, int param);
        void GetFramebufferParameteriv(uint target, uint pname, [Out]int[] @params);
        void GetInternalformati64v(uint target, uint internalformat, uint pname, int bufSize, [Out]long[] @params);
        void InvalidateTexSubImage(uint texture, int level, int xoffset, int yoffset, int zoffset, int width, int height, int depth);
        void InvalidateTexImage(uint texture, int level);
        void InvalidateBufferSubData(uint buffer, IntPtr offset, IntPtr length);
        void InvalidateBufferData(uint buffer);
        void InvalidateFramebuffer(uint target, int numAttachments, [In]uint[] attachments);
        void InvalidateFramebuffer(uint target, int numAttachments, IntPtr attachments);
        unsafe void InvalidateFramebuffer(uint target, int numAttachments, uint* attachments);
        void InvalidateSubFramebuffer(uint target, int numAttachments, [In]uint[] attachments, int x, int y, int width, int height);
        void MultiDrawArraysIndirect(uint mode, IntPtr indirect, int drawcount, int stride);
        void MultiDrawElementsIndirect(uint mode, uint type, IntPtr indirect, int drawcount, int stride);
        void GetProgramInterfaceiv(uint program, uint programInterface, uint pname, [Out]int[] @params);
        uint GetProgramResourceIndex(uint program, uint programInterface, [In]string name);
        void GetProgramResourceName(uint program, uint programInterface, uint index, int bufSize, [Out]int[] length, ref string name);
        void GetProgramResourceiv(uint program, uint programInterface, uint index, int propCount, [In]uint[] props, int bufSize, [Out]int[] length, [Out]int[] @params);
        int GetProgramResourceLocation(uint program, uint programInterface, [In]string name);
        int GetProgramResourceLocationIndex(uint program, uint programInterface, [In]string name);
        void ShaderStorageBlockBinding(uint program, uint storageBlockIndex, uint storageBlockBinding);
        void TexBufferRange(uint target, uint internalformat, uint buffer, IntPtr offset, IntPtr size);
        void TexStorage2DMultisample(uint target, int samples, uint internalformat, int width, int height, GLboolean fixedsamplelocations);
        void TexStorage3DMultisample(uint target, int samples, uint internalformat, int width, int height, int depth, GLboolean fixedsamplelocations);
        void TextureView(uint texture, uint target, uint origtexture, uint internalformat, uint minlevel, uint numlevels, uint minlayer, uint numlayers);
        void BindVertexBuffer(uint bindingindex, uint buffer, IntPtr offset, int stride);
        void VertexAttribFormat(uint attribindex, int size, uint type, GLboolean normalized, uint relativeoffset);
        void VertexAttribIFormat(uint attribindex, int size, uint type, uint relativeoffset);
        void VertexAttribLFormat(uint attribindex, int size, uint type, uint relativeoffset);
        void VertexAttribBinding(uint attribindex, uint bindingindex);
        void VertexBindingDivisor(uint bindingindex, uint divisor);
        void DebugMessageControl(uint source, uint type, uint severity, int count, [In]uint[] ids, GLboolean enabled);
        void DebugMessageInsert(uint source, uint type, uint id, uint severity, int length, [In]string buf);
        void DebugMessageCallback(GLDEBUGPROC callback, IntPtr userParam);
        uint GetDebugMessageLog(uint count, int bufSize, [Out]uint[] sources, [Out]uint[] types, [Out]uint[] ids, [Out]uint[] severities, [Out]int[] lengths, ref string messageLog);
        void PushDebugGroup(uint source, uint id, int length, [In]string message);
        void PopDebugGroup();
        void ObjectLabel(uint identifier, uint name, int length, [In]string label);
        void GetObjectLabel(uint identifier, uint name, int bufSize, [Out]int[] length, ref string label);
        void ObjectPtrLabel(IntPtr ptr, int length, [In]string label);
        void GetObjectPtrLabel(IntPtr ptr, int bufSize, [Out]int[] length, ref string label);
    }
    public interface IOpenGL44 : IOpenGL43
    {
        void BufferStorage(uint target, IntPtr size, IntPtr data, uint flags);
        void ClearTexImage(uint texture, int level, uint format, uint type, IntPtr data);
        void ClearTexSubImage(uint texture, int level, int xoffset, int yoffset, int zoffset, int width, int height, int depth, uint format, uint type, IntPtr data);
        void BindBuffersBase(uint target, uint first, int count, [In]uint[] buffers);
        void BindBuffersBase(uint target, uint first, int count, IntPtr buffers);
        unsafe void BindBuffersBase(uint target, uint first, int count, uint* buffers);
        void BindBuffersRange(uint target, uint first, int count, [In]uint[] buffers, [In]IntPtr[] offsets, [In]IntPtr[] sizes);
        void BindTextures(uint first, int count, [In]uint[] textures);
        void BindTextures(uint first, int count, IntPtr textures);
        unsafe void BindTextures(uint first, int count, uint* textures);
        void BindSamplers(uint first, int count, [In]uint[] samplers);
        void BindSamplers(uint first, int count, IntPtr samplers);
        unsafe void BindSamplers(uint first, int count, uint* samplers);
        void BindImageTextures(uint first, int count, [In]uint[] textures);
        void BindImageTextures(uint first, int count, IntPtr textures);
        unsafe void BindImageTextures(uint first, int count, uint* textures);
        void BindVertexBuffers(uint first, int count, [In]uint[] buffers, [In]IntPtr[] offsets, [In]int[] strides);
    }
    public interface IVersionEsCm10
    {
        void ClearColor(float red, float green, float blue, float alpha);
        void ClearDepthf(float d);
        void ClipPlanef(uint p, [In]float[] eqn);
        void ClipPlanef(uint p, IntPtr eqn);
        unsafe void ClipPlanef(uint p, float* eqn);
        void DepthRangef(float n, float f);
        void Frustumf(float l, float r, float b, float t, float n, float f);
        void GetClipPlanef(uint plane, [Out]float[] equation);
        void GetFloatv(GetPName pname, [Out]float[] data);
        void GetTexParameterfv(TextureTarget target, GetTextureParameter pname, [Out]float[] @params);
        void LineWidth(float width);
        void Orthof(float l, float r, float b, float t, float n, float f);
        void PointParameterf(uint pname, float param);
        void PointParameterfv(uint pname, [In]float[] @params);
        void PointParameterfv(uint pname, IntPtr @params);
        unsafe void PointParameterfv(uint pname, float* @params);
        void PointSize(float size);
        void PolygonOffset(float factor, float units);
        void TexParameterf(TextureTarget target, TextureParameterName pname, float param);
        void TexParameterfv(TextureTarget target, TextureParameterName pname, [In]float[] @params);
        void TexParameterfv(TextureTarget target, TextureParameterName pname, IntPtr @params);
        unsafe void TexParameterfv(TextureTarget target, TextureParameterName pname, float* @params);
        void ActiveTexture(uint texture);
        void AlphaFuncx(uint func, int @ref);
        void BindBuffer(uint target, uint buffer);
        void BindTexture(TextureTarget target, uint texture);
        void BlendFunc(BlendingFactorSrc sfactor, BlendingFactorDest dfactor);
        void BufferData(uint target, IntPtr size, IntPtr data, uint usage);
        void BufferSubData(uint target, IntPtr offset, IntPtr size, IntPtr data);
        void Clear(uint mask);
        void ClearColorx(int red, int green, int blue, int alpha);
        void ClearDepthx(int depth);
        void ClearStencil(int s);
        void ClipPlanex(uint plane, [In]int[] equation);
        void ClipPlanex(uint plane, IntPtr equation);
        unsafe void ClipPlanex(uint plane, int* equation);
        void Color4x(int red, int green, int blue, int alpha);
        void ColorMask(GLboolean red, GLboolean green, GLboolean blue, GLboolean alpha);
        void CompressedTexImage2D(TextureTarget target, int level, InternalFormat internalformat, int width, int height, int border, int imageSize, IntPtr data);
        void CompressedTexSubImage2D(TextureTarget target, int level, int xoffset, int yoffset, int width, int height, PixelFormat format, int imageSize, IntPtr data);
        void CopyTexImage2D(TextureTarget target, int level, InternalFormat internalformat, int x, int y, int width, int height, int border);
        void CopyTexSubImage2D(TextureTarget target, int level, int xoffset, int yoffset, int x, int y, int width, int height);
        void CullFace(CullFaceMode mode);
        void DeleteBuffers(int n, [In]uint[] buffers);
        void DeleteBuffers(int n, IntPtr buffers);
        unsafe void DeleteBuffers(int n, uint* buffers);
        void DeleteTextures(int n, [In]uint[] textures);
        void DeleteTextures(int n, IntPtr textures);
        unsafe void DeleteTextures(int n, uint* textures);
        void DepthFunc(DepthFunction func);
        void DepthMask(GLboolean flag);
        void DepthRangex(int n, int f);
        void Disable(EnableCap cap);
        void DrawArrays(PrimitiveType mode, int first, int count);
        void DrawElements(PrimitiveType mode, int count, uint type, IntPtr indices);
        void Enable(EnableCap cap);
        void Finish();
        void Flush();
        void Fogx(uint pname, int param);
        void Fogxv(uint pname, [In]int[] param);
        void Fogxv(uint pname, IntPtr param);
        unsafe void Fogxv(uint pname, int* param);
        void FrontFace(FrontFaceDirection mode);
        void Frustumx(int l, int r, int b, int t, int n, int f);
        void GetBooleanv(GetPName pname, [Out]GLboolean data);
        void GetBufferParameteriv(uint target, uint pname, [Out]int[] @params);
        void GetClipPlanex(uint plane, [Out]int[] equation);
        void GenBuffers(int n, [Out]uint[] buffers);
        void GenTextures(int n, [Out]uint[] textures);
        ErrorCode GetError();
        void GetFixedv(uint pname, [Out]int[] @params);
        void GetIntegerv(GetPName pname, [Out]int[] data);
        void GetLightxv(uint light, uint pname, [Out]int[] @params);
        void GetMaterialxv(uint face, uint pname, [Out]int[] @params);
        [return: MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(ConstStringReturnMarshaller))]
        string GetString(StringName name);
        void GetTexEnvxv(uint target, uint pname, [Out]int[] @params);
        void GetTexParameteriv(TextureTarget target, GetTextureParameter pname, [Out]int[] @params);
        void GetTexParameterxv(uint target, uint pname, [Out]int[] @params);
        void Hint(HintTarget target, HintMode mode);
        GLboolean IsBuffer(uint buffer);
        GLboolean IsEnabled(EnableCap cap);
        GLboolean IsTexture(uint texture);
        void LightModelx(uint pname, int param);
        void LightModelxv(uint pname, [In]int[] param);
        void LightModelxv(uint pname, IntPtr param);
        unsafe void LightModelxv(uint pname, int* param);
        void Lightx(uint light, uint pname, int param);
        void Lightxv(uint light, uint pname, [In]int[] @params);
        void Lightxv(uint light, uint pname, IntPtr @params);
        unsafe void Lightxv(uint light, uint pname, int* @params);
        void LineWidthx(int width);
        void LoadMatrixx([In]int[] m);
        void LoadMatrixx(IntPtr m);
        unsafe void LoadMatrixx(int* m);
        void LogicOp(LogicOp opcode);
        void Materialx(uint face, uint pname, int param);
        void Materialxv(uint face, uint pname, [In]int[] param);
        void Materialxv(uint face, uint pname, IntPtr param);
        unsafe void Materialxv(uint face, uint pname, int* param);
        void MultMatrixx([In]int[] m);
        void MultMatrixx(IntPtr m);
        unsafe void MultMatrixx(int* m);
        void MultiTexCoord4x(uint texture, int s, int t, int r, int q);
        void Normal3x(int nx, int ny, int nz);
        void Orthox(int l, int r, int b, int t, int n, int f);
        void PixelStorei(PixelStoreParameter pname, int param);
        void PointParameterx(uint pname, int param);
        void PointParameterxv(uint pname, [In]int[] @params);
        void PointParameterxv(uint pname, IntPtr @params);
        unsafe void PointParameterxv(uint pname, int* @params);
        void PointSizex(int size);
        void PolygonOffsetx(int factor, int units);
        void ReadPixels(int x, int y, int width, int height, PixelFormat format, PixelType type, IntPtr pixels);
        void Rotatex(int angle, int x, int y, int z);
        void SampleCoverage(float value, GLboolean invert);
        void SampleCoveragex(int value, GLboolean invert);
        void Scalex(int x, int y, int z);
        void Scissor(int x, int y, int width, int height);
        void StencilFunc(StencilFunction func, int @ref, uint mask);
        void StencilMask(uint mask);
        void StencilOp(StencilOp fail, StencilOp zfail, StencilOp zpass);
        void TexEnvx(uint target, uint pname, int param);
        void TexEnvxv(uint target, uint pname, [In]int[] @params);
        void TexEnvxv(uint target, uint pname, IntPtr @params);
        unsafe void TexEnvxv(uint target, uint pname, int* @params);
        void TexImage2D(TextureTarget target, int level, int internalformat, int width, int height, int border, PixelFormat format, PixelType type, IntPtr pixels);
        void TexParameteri(TextureTarget target, TextureParameterName pname, int param);
        void TexParameterx(uint target, uint pname, int param);
        void TexParameteriv(TextureTarget target, TextureParameterName pname, [In]int[] @params);
        void TexParameteriv(TextureTarget target, TextureParameterName pname, IntPtr @params);
        unsafe void TexParameteriv(TextureTarget target, TextureParameterName pname, int* @params);
        void TexParameterxv(uint target, uint pname, [In]int[] @params);
        void TexParameterxv(uint target, uint pname, IntPtr @params);
        unsafe void TexParameterxv(uint target, uint pname, int* @params);
        void TexSubImage2D(TextureTarget target, int level, int xoffset, int yoffset, int width, int height, PixelFormat format, PixelType type, IntPtr pixels);
        void Translatex(int x, int y, int z);
        void Viewport(int x, int y, int width, int height);
    }
    public interface IEsVersion20
    {
        void ActiveTexture(uint texture);
        void AttachShader(uint program, uint shader);
        void BindAttribLocation(uint program, uint index, [In]string name);
        void BindBuffer(uint target, uint buffer);
        void BindFramebuffer(uint target, uint framebuffer);
        void BindRenderbuffer(uint target, uint renderbuffer);
        void BindTexture(TextureTarget target, uint texture);
        void BlendColor(float red, float green, float blue, float alpha);
        void BlendEquation(uint mode);
        void BlendEquationSeparate(BlendEquationModeEXT modeRGB, BlendEquationModeEXT modeAlpha);
        void BlendFunc(BlendingFactorSrc sfactor, BlendingFactorDest dfactor);
        void BlendFuncSeparate(uint sfactorRGB, uint dfactorRGB, uint sfactorAlpha, uint dfactorAlpha);
        void BufferData(uint target, IntPtr size, IntPtr data, uint usage);
        void BufferSubData(uint target, IntPtr offset, IntPtr size, IntPtr data);
        uint CheckFramebufferStatus(uint target);
        void Clear(uint mask);
        void ClearColor(float red, float green, float blue, float alpha);
        void ClearDepthf(float d);
        void ClearStencil(int s);
        void ColorMask(GLboolean red, GLboolean green, GLboolean blue, GLboolean alpha);
        void CompileShader(uint shader);
        void CompressedTexImage2D(TextureTarget target, int level, InternalFormat internalformat, int width, int height, int border, int imageSize, IntPtr data);
        void CompressedTexSubImage2D(TextureTarget target, int level, int xoffset, int yoffset, int width, int height, PixelFormat format, int imageSize, IntPtr data);
        void CopyTexImage2D(TextureTarget target, int level, InternalFormat internalformat, int x, int y, int width, int height, int border);
        void CopyTexSubImage2D(TextureTarget target, int level, int xoffset, int yoffset, int x, int y, int width, int height);
        uint CreateProgram();
        uint CreateShader(uint type);
        void CullFace(CullFaceMode mode);
        void DeleteBuffers(int n, [In]uint[] buffers);
        void DeleteBuffers(int n, IntPtr buffers);
        unsafe void DeleteBuffers(int n, uint* buffers);
        void DeleteFramebuffers(int n, [In]uint[] framebuffers);
        void DeleteFramebuffers(int n, IntPtr framebuffers);
        unsafe void DeleteFramebuffers(int n, uint* framebuffers);
        void DeleteProgram(uint program);
        void DeleteRenderbuffers(int n, [In]uint[] renderbuffers);
        void DeleteRenderbuffers(int n, IntPtr renderbuffers);
        unsafe void DeleteRenderbuffers(int n, uint* renderbuffers);
        void DeleteShader(uint shader);
        void DeleteTextures(int n, [In]uint[] textures);
        void DeleteTextures(int n, IntPtr textures);
        unsafe void DeleteTextures(int n, uint* textures);
        void DepthFunc(DepthFunction func);
        void DepthMask(GLboolean flag);
        void DepthRangef(float n, float f);
        void DetachShader(uint program, uint shader);
        void Disable(EnableCap cap);
        void DisableVertexAttribArray(uint index);
        void DrawArrays(PrimitiveType mode, int first, int count);
        void DrawElements(PrimitiveType mode, int count, uint type, IntPtr indices);
        void Enable(EnableCap cap);
        void EnableVertexAttribArray(uint index);
        void Finish();
        void Flush();
        void FramebufferRenderbuffer(uint target, uint attachment, uint renderbuffertarget, uint renderbuffer);
        void FramebufferTexture2D(uint target, uint attachment, uint textarget, uint texture, int level);
        void FrontFace(FrontFaceDirection mode);
        void GenBuffers(int n, [Out]uint[] buffers);
        void GenerateMipmap(uint target);
        void GenFramebuffers(int n, [Out]uint[] framebuffers);
        void GenRenderbuffers(int n, [Out]uint[] renderbuffers);
        void GenTextures(int n, [Out]uint[] textures);
        void GetActiveAttrib(uint program, uint index, int bufSize, [Out]int[] length, [Out]int[] size, [Out]uint[] type, ref string name);
        void GetActiveUniform(uint program, uint index, int bufSize, [Out]int[] length, [Out]int[] size, [Out]uint[] type, ref string name);
        void GetAttachedShaders(uint program, int maxCount, [Out]int[] count, [Out]uint[] shaders);
        int GetAttribLocation(uint program, [In]string name);
        void GetBooleanv(GetPName pname, [Out]GLboolean data);
        void GetBufferParameteriv(uint target, uint pname, [Out]int[] @params);
        ErrorCode GetError();
        void GetFloatv(GetPName pname, [Out]float[] data);
        void GetFramebufferAttachmentParameteriv(uint target, uint attachment, uint pname, [Out]int[] @params);
        void GetIntegerv(GetPName pname, [Out]int[] data);
        void GetProgramiv(uint program, uint pname, [Out]int[] @params);
        void GetProgramInfoLog(uint program, int bufSize, [Out]int[] length, ref string infoLog);
        void GetRenderbufferParameteriv(uint target, uint pname, [Out]int[] @params);
        void GetShaderiv(uint shader, uint pname, [Out]int[] @params);
        void GetShaderInfoLog(uint shader, int bufSize, [Out]int[] length, ref string infoLog);
        void GetShaderPrecisionFormat(uint shadertype, uint precisiontype, [Out]int[] range, [Out]int[] precision);
        void GetShaderSource(uint shader, int bufSize, [Out]int[] length, ref string source);
        [return: MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(ConstStringReturnMarshaller))]
        string GetString(StringName name);
        void GetTexParameterfv(TextureTarget target, GetTextureParameter pname, [Out]float[] @params);
        void GetTexParameteriv(TextureTarget target, GetTextureParameter pname, [Out]int[] @params);
        void GetUniformfv(uint program, int location, [Out]float[] @params);
        void GetUniformiv(uint program, int location, [Out]int[] @params);
        int GetUniformLocation(uint program, [In]string name);
        void GetVertexAttribfv(uint index, uint pname, [Out]float[] @params);
        void GetVertexAttribiv(uint index, uint pname, [Out]int[] @params);
        void GetVertexAttribPointerv(uint index, uint pname, [Out]IntPtr[] pointer);
        void Hint(HintTarget target, HintMode mode);
        GLboolean IsBuffer(uint buffer);
        GLboolean IsEnabled(EnableCap cap);
        GLboolean IsFramebuffer(uint framebuffer);
        GLboolean IsProgram(uint program);
        GLboolean IsRenderbuffer(uint renderbuffer);
        GLboolean IsShader(uint shader);
        GLboolean IsTexture(uint texture);
        void LineWidth(float width);
        void LinkProgram(uint program);
        void PixelStorei(PixelStoreParameter pname, int param);
        void PolygonOffset(float factor, float units);
        void ReadPixels(int x, int y, int width, int height, PixelFormat format, PixelType type, IntPtr pixels);
        void ReleaseShaderCompiler();
        void RenderbufferStorage(uint target, uint internalformat, int width, int height);
        void SampleCoverage(float value, GLboolean invert);
        void Scissor(int x, int y, int width, int height);
        void ShaderBinary(int count, [In]uint[] shaders, uint binaryformat, IntPtr binary, int length);
        void ShaderSource(uint shader, int count, [In]string[] @string, [In]int[] length);
        void StencilFunc(StencilFunction func, int @ref, uint mask);
        void StencilFuncSeparate(uint face, StencilFunction func, int @ref, uint mask);
        void StencilMask(uint mask);
        void StencilMaskSeparate(uint face, uint mask);
        void StencilOp(StencilOp fail, StencilOp zfail, StencilOp zpass);
        void StencilOpSeparate(uint face, StencilOp sfail, StencilOp dpfail, StencilOp dppass);
        void TexImage2D(TextureTarget target, int level, int internalformat, int width, int height, int border, PixelFormat format, PixelType type, IntPtr pixels);
        void TexParameterf(TextureTarget target, TextureParameterName pname, float param);
        void TexParameterfv(TextureTarget target, TextureParameterName pname, [In]float[] @params);
        void TexParameterfv(TextureTarget target, TextureParameterName pname, IntPtr @params);
        unsafe void TexParameterfv(TextureTarget target, TextureParameterName pname, float* @params);
        void TexParameteri(TextureTarget target, TextureParameterName pname, int param);
        void TexParameteriv(TextureTarget target, TextureParameterName pname, [In]int[] @params);
        void TexParameteriv(TextureTarget target, TextureParameterName pname, IntPtr @params);
        unsafe void TexParameteriv(TextureTarget target, TextureParameterName pname, int* @params);
        void TexSubImage2D(TextureTarget target, int level, int xoffset, int yoffset, int width, int height, PixelFormat format, PixelType type, IntPtr pixels);
        void Uniform1f(int location, float v0);
        void Uniform1fv(int location, int count, [In]float[] value);
        void Uniform1fv(int location, int count, IntPtr value);
        unsafe void Uniform1fv(int location, int count, float* value);
        void Uniform1i(int location, int v0);
        void Uniform1iv(int location, int count, [In]int[] value);
        void Uniform1iv(int location, int count, IntPtr value);
        unsafe void Uniform1iv(int location, int count, int* value);
        void Uniform2f(int location, float v0, float v1);
        void Uniform2fv(int location, int count, [In]float[] value);
        void Uniform2fv(int location, int count, IntPtr value);
        unsafe void Uniform2fv(int location, int count, float* value);
        void Uniform2i(int location, int v0, int v1);
        void Uniform2iv(int location, int count, [In]int[] value);
        void Uniform2iv(int location, int count, IntPtr value);
        unsafe void Uniform2iv(int location, int count, int* value);
        void Uniform3f(int location, float v0, float v1, float v2);
        void Uniform3fv(int location, int count, [In]float[] value);
        void Uniform3fv(int location, int count, IntPtr value);
        unsafe void Uniform3fv(int location, int count, float* value);
        void Uniform3i(int location, int v0, int v1, int v2);
        void Uniform3iv(int location, int count, [In]int[] value);
        void Uniform3iv(int location, int count, IntPtr value);
        unsafe void Uniform3iv(int location, int count, int* value);
        void Uniform4f(int location, float v0, float v1, float v2, float v3);
        void Uniform4fv(int location, int count, [In]float[] value);
        void Uniform4fv(int location, int count, IntPtr value);
        unsafe void Uniform4fv(int location, int count, float* value);
        void Uniform4i(int location, int v0, int v1, int v2, int v3);
        void Uniform4iv(int location, int count, [In]int[] value);
        void Uniform4iv(int location, int count, IntPtr value);
        unsafe void Uniform4iv(int location, int count, int* value);
        void UniformMatrix2fv(int location, int count, GLboolean transpose, [In]float[] value);
        void UniformMatrix2fv(int location, int count, GLboolean transpose, IntPtr value);
        unsafe void UniformMatrix2fv(int location, int count, GLboolean transpose, float* value);
        void UniformMatrix3fv(int location, int count, GLboolean transpose, [In]float[] value);
        void UniformMatrix3fv(int location, int count, GLboolean transpose, IntPtr value);
        unsafe void UniformMatrix3fv(int location, int count, GLboolean transpose, float* value);
        void UniformMatrix4fv(int location, int count, GLboolean transpose, [In]float[] value);
        void UniformMatrix4fv(int location, int count, GLboolean transpose, IntPtr value);
        unsafe void UniformMatrix4fv(int location, int count, GLboolean transpose, float* value);
        void UseProgram(uint program);
        void ValidateProgram(uint program);
        void VertexAttrib1f(uint index, float x);
        void VertexAttrib1fv(uint index, [In]float[] v);
        void VertexAttrib1fv(uint index, IntPtr v);
        unsafe void VertexAttrib1fv(uint index, float* v);
        void VertexAttrib2f(uint index, float x, float y);
        void VertexAttrib2fv(uint index, [In]float[] v);
        void VertexAttrib2fv(uint index, IntPtr v);
        unsafe void VertexAttrib2fv(uint index, float* v);
        void VertexAttrib3f(uint index, float x, float y, float z);
        void VertexAttrib3fv(uint index, [In]float[] v);
        void VertexAttrib3fv(uint index, IntPtr v);
        unsafe void VertexAttrib3fv(uint index, float* v);
        void VertexAttrib4f(uint index, float x, float y, float z, float w);
        void VertexAttrib4fv(uint index, [In]float[] v);
        void VertexAttrib4fv(uint index, IntPtr v);
        unsafe void VertexAttrib4fv(uint index, float* v);
        void VertexAttribPointer(uint index, int size, uint type, GLboolean normalized, int stride, IntPtr pointer);
        void Viewport(int x, int y, int width, int height);
    }
    public interface IEsVersion30
    {
        void ReadBuffer(ReadBufferMode mode);
        void DrawRangeElements(PrimitiveType mode, uint start, uint end, int count, uint type, IntPtr indices);
        void TexImage3D(TextureTarget target, int level, int internalformat, int width, int height, int depth, int border, PixelFormat format, PixelType type, IntPtr pixels);
        void TexSubImage3D(TextureTarget target, int level, int xoffset, int yoffset, int zoffset, int width, int height, int depth, PixelFormat format, PixelType type, IntPtr pixels);
        void CopyTexSubImage3D(TextureTarget target, int level, int xoffset, int yoffset, int zoffset, int x, int y, int width, int height);
        void CompressedTexImage3D(TextureTarget target, int level, InternalFormat internalformat, int width, int height, int depth, int border, int imageSize, IntPtr data);
        void CompressedTexSubImage3D(TextureTarget target, int level, int xoffset, int yoffset, int zoffset, int width, int height, int depth, PixelFormat format, int imageSize, IntPtr data);
        void GenQueries(int n, [Out]uint[] ids);
        void DeleteQueries(int n, [In]uint[] ids);
        void DeleteQueries(int n, IntPtr ids);
        unsafe void DeleteQueries(int n, uint* ids);
        GLboolean IsQuery(uint id);
        void BeginQuery(uint target, uint id);
        void EndQuery(uint target);
        void GetQueryiv(uint target, uint pname, [Out]int[] @params);
        void GetQueryObjectuiv(uint id, uint pname, [Out]uint[] @params);
        GLboolean UnmapBuffer(uint target);
        void GetBufferPointerv(uint target, uint pname, [Out]IntPtr[] @params);
        void DrawBuffers(int n, [In]uint[] bufs);
        void DrawBuffers(int n, IntPtr bufs);
        unsafe void DrawBuffers(int n, uint* bufs);
        void UniformMatrix2x3fv(int location, int count, GLboolean transpose, [In]float[] value);
        void UniformMatrix2x3fv(int location, int count, GLboolean transpose, IntPtr value);
        unsafe void UniformMatrix2x3fv(int location, int count, GLboolean transpose, float* value);
        void UniformMatrix3x2fv(int location, int count, GLboolean transpose, [In]float[] value);
        void UniformMatrix3x2fv(int location, int count, GLboolean transpose, IntPtr value);
        unsafe void UniformMatrix3x2fv(int location, int count, GLboolean transpose, float* value);
        void UniformMatrix2x4fv(int location, int count, GLboolean transpose, [In]float[] value);
        void UniformMatrix2x4fv(int location, int count, GLboolean transpose, IntPtr value);
        unsafe void UniformMatrix2x4fv(int location, int count, GLboolean transpose, float* value);
        void UniformMatrix4x2fv(int location, int count, GLboolean transpose, [In]float[] value);
        void UniformMatrix4x2fv(int location, int count, GLboolean transpose, IntPtr value);
        unsafe void UniformMatrix4x2fv(int location, int count, GLboolean transpose, float* value);
        void UniformMatrix3x4fv(int location, int count, GLboolean transpose, [In]float[] value);
        void UniformMatrix3x4fv(int location, int count, GLboolean transpose, IntPtr value);
        unsafe void UniformMatrix3x4fv(int location, int count, GLboolean transpose, float* value);
        void UniformMatrix4x3fv(int location, int count, GLboolean transpose, [In]float[] value);
        void UniformMatrix4x3fv(int location, int count, GLboolean transpose, IntPtr value);
        unsafe void UniformMatrix4x3fv(int location, int count, GLboolean transpose, float* value);
        void BlitFramebuffer(int srcX0, int srcY0, int srcX1, int srcY1, int dstX0, int dstY0, int dstX1, int dstY1, uint mask, uint filter);
        void RenderbufferStorageMultisample(uint target, int samples, uint internalformat, int width, int height);
        void FramebufferTextureLayer(uint target, uint attachment, uint texture, int level, int layer);
        IntPtr MapBufferRange(uint target, IntPtr offset, IntPtr length, uint access);
        void FlushMappedBufferRange(uint target, IntPtr offset, IntPtr length);
        void BindVertexArray(uint array);
        void DeleteVertexArrays(int n, [In]uint[] arrays);
        void DeleteVertexArrays(int n, IntPtr arrays);
        unsafe void DeleteVertexArrays(int n, uint* arrays);
        void GenVertexArrays(int n, [Out]uint[] arrays);
        GLboolean IsVertexArray(uint array);
        void GetIntegeri_v(uint target, uint index, [Out]int[] data);
        void BeginTransformFeedback(uint primitiveMode);
        void EndTransformFeedback();
        void BindBufferRange(uint target, uint index, uint buffer, IntPtr offset, IntPtr size);
        void BindBufferBase(uint target, uint index, uint buffer);
        void TransformFeedbackVaryings(uint program, int count, [In]string[] varyings, uint bufferMode);
        void GetTransformFeedbackVarying(uint program, uint index, int bufSize, [Out]int[] length, [Out]int[] size, [Out]uint[] type, ref string name);
        void VertexAttribIPointer(uint index, int size, uint type, int stride, IntPtr pointer);
        void GetVertexAttribIiv(uint index, uint pname, [Out]int[] @params);
        void GetVertexAttribIuiv(uint index, uint pname, [Out]uint[] @params);
        void VertexAttribI4i(uint index, int x, int y, int z, int w);
        void VertexAttribI4ui(uint index, uint x, uint y, uint z, uint w);
        void VertexAttribI4iv(uint index, [In]int[] v);
        void VertexAttribI4iv(uint index, IntPtr v);
        unsafe void VertexAttribI4iv(uint index, int* v);
        void VertexAttribI4uiv(uint index, [In]uint[] v);
        void VertexAttribI4uiv(uint index, IntPtr v);
        unsafe void VertexAttribI4uiv(uint index, uint* v);
        void GetUniformuiv(uint program, int location, [Out]uint[] @params);
        int GetFragDataLocation(uint program, [In]string name);
        void Uniform1ui(int location, uint v0);
        void Uniform2ui(int location, uint v0, uint v1);
        void Uniform3ui(int location, uint v0, uint v1, uint v2);
        void Uniform4ui(int location, uint v0, uint v1, uint v2, uint v3);
        void Uniform1uiv(int location, int count, [In]uint[] value);
        void Uniform1uiv(int location, int count, IntPtr value);
        unsafe void Uniform1uiv(int location, int count, uint* value);
        void Uniform2uiv(int location, int count, [In]uint[] value);
        void Uniform2uiv(int location, int count, IntPtr value);
        unsafe void Uniform2uiv(int location, int count, uint* value);
        void Uniform3uiv(int location, int count, [In]uint[] value);
        void Uniform3uiv(int location, int count, IntPtr value);
        unsafe void Uniform3uiv(int location, int count, uint* value);
        void Uniform4uiv(int location, int count, [In]uint[] value);
        void Uniform4uiv(int location, int count, IntPtr value);
        unsafe void Uniform4uiv(int location, int count, uint* value);
        void ClearBufferiv(uint buffer, int drawbuffer, [In]int[] value);
        void ClearBufferiv(uint buffer, int drawbuffer, IntPtr value);
        unsafe void ClearBufferiv(uint buffer, int drawbuffer, int* value);
        void ClearBufferuiv(uint buffer, int drawbuffer, [In]uint[] value);
        void ClearBufferuiv(uint buffer, int drawbuffer, IntPtr value);
        unsafe void ClearBufferuiv(uint buffer, int drawbuffer, uint* value);
        void ClearBufferfv(uint buffer, int drawbuffer, [In]float[] value);
        void ClearBufferfv(uint buffer, int drawbuffer, IntPtr value);
        unsafe void ClearBufferfv(uint buffer, int drawbuffer, float* value);
        void ClearBufferfi(uint buffer, int drawbuffer, float depth, int stencil);
        [return: MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(ConstStringReturnMarshaller))]
        string GetStringi(uint name, uint index);
        void CopyBufferSubData(uint readTarget, uint writeTarget, IntPtr readOffset, IntPtr writeOffset, IntPtr size);
        void GetUniformIndices(uint program, int uniformCount, [In]string[] uniformNames, [Out]uint[] uniformIndices);
        void GetActiveUniformsiv(uint program, int uniformCount, [In]uint[] uniformIndices, uint pname, [Out]int[] @params);
        uint GetUniformBlockIndex(uint program, [In]string uniformBlockName);
        void GetActiveUniformBlockiv(uint program, uint uniformBlockIndex, uint pname, [Out]int[] @params);
        void GetActiveUniformBlockName(uint program, uint uniformBlockIndex, int bufSize, [Out]int[] length, ref string uniformBlockName);
        void UniformBlockBinding(uint program, uint uniformBlockIndex, uint uniformBlockBinding);
        void DrawArraysInstanced(PrimitiveType mode, int first, int count, int instancecount);
        void DrawElementsInstanced(PrimitiveType mode, int count, uint type, IntPtr indices, int instancecount);
        IntPtr FenceSync(uint condition, uint flags);
        GLboolean IsSync(IntPtr sync);
        void DeleteSync(IntPtr sync);
        uint ClientWaitSync(IntPtr sync, uint flags, ulong timeout);
        void WaitSync(IntPtr sync, uint flags, ulong timeout);
        void GetInteger64v(uint pname, [Out]long[] data);
        void GetSynciv(IntPtr sync, uint pname, int bufSize, [Out]int[] length, [Out]int[] values);
        void GetInteger64i_v(uint target, uint index, [Out]long[] data);
        void GetBufferParameteri64v(uint target, uint pname, [Out]long[] @params);
        void GenSamplers(int count, [Out]uint[] samplers);
        void DeleteSamplers(int count, [In]uint[] samplers);
        void DeleteSamplers(int count, IntPtr samplers);
        unsafe void DeleteSamplers(int count, uint* samplers);
        GLboolean IsSampler(uint sampler);
        void BindSampler(uint unit, uint sampler);
        void SamplerParameteri(uint sampler, uint pname, int param);
        void SamplerParameteriv(uint sampler, uint pname, [In]int[] param);
        void SamplerParameteriv(uint sampler, uint pname, IntPtr param);
        unsafe void SamplerParameteriv(uint sampler, uint pname, int* param);
        void SamplerParameterf(uint sampler, uint pname, float param);
        void SamplerParameterfv(uint sampler, uint pname, [In]float[] param);
        void SamplerParameterfv(uint sampler, uint pname, IntPtr param);
        unsafe void SamplerParameterfv(uint sampler, uint pname, float* param);
        void GetSamplerParameteriv(uint sampler, uint pname, [Out]int[] @params);
        void GetSamplerParameterfv(uint sampler, uint pname, [Out]float[] @params);
        void VertexAttribDivisor(uint index, uint divisor);
        void BindTransformFeedback(uint target, uint id);
        void DeleteTransformFeedbacks(int n, [In]uint[] ids);
        void DeleteTransformFeedbacks(int n, IntPtr ids);
        unsafe void DeleteTransformFeedbacks(int n, uint* ids);
        void GenTransformFeedbacks(int n, [Out]uint[] ids);
        GLboolean IsTransformFeedback(uint id);
        void PauseTransformFeedback();
        void ResumeTransformFeedback();
        void GetProgramBinary(uint program, int bufSize, [Out]int[] length, [Out]uint[] binaryFormat, IntPtr binary);
        void ProgramBinary(uint program, uint binaryFormat, IntPtr binary, int length);
        void ProgramParameteri(uint program, uint pname, int value);
        void InvalidateFramebuffer(uint target, int numAttachments, [In]uint[] attachments);
        void InvalidateFramebuffer(uint target, int numAttachments, IntPtr attachments);
        unsafe void InvalidateFramebuffer(uint target, int numAttachments, uint* attachments);
        void InvalidateSubFramebuffer(uint target, int numAttachments, [In]uint[] attachments, int x, int y, int width, int height);
        void TexStorage2D(uint target, int levels, uint internalformat, int width, int height);
        void TexStorage3D(uint target, int levels, uint internalformat, int width, int height, int depth);
        void GetInternalformativ(uint target, uint internalformat, uint pname, int bufSize, [Out]int[] @params);
    }
    public interface IEsVersion31
    {
        void DispatchCompute(uint num_groups_x, uint num_groups_y, uint num_groups_z);
        void DispatchComputeIndirect(IntPtr indirect);
        void DrawArraysIndirect(PrimitiveType mode, IntPtr indirect);
        void DrawElementsIndirect(PrimitiveType mode, uint type, IntPtr indirect);
        void FramebufferParameteri(uint target, uint pname, int param);
        void GetFramebufferParameteriv(uint target, uint pname, [Out]int[] @params);
        void GetProgramInterfaceiv(uint program, uint programInterface, uint pname, [Out]int[] @params);
        uint GetProgramResourceIndex(uint program, uint programInterface, [In]string name);
        void GetProgramResourceName(uint program, uint programInterface, uint index, int bufSize, [Out]int[] length, ref string name);
        void GetProgramResourceiv(uint program, uint programInterface, uint index, int propCount, [In]uint[] props, int bufSize, [Out]int[] length, [Out]int[] @params);
        int GetProgramResourceLocation(uint program, uint programInterface, [In]string name);
        void UseProgramStages(uint pipeline, uint stages, uint program);
        void ActiveShaderProgram(uint pipeline, uint program);
        uint CreateShaderProgramv(uint type, int count, [In]string[] strings);
        void BindProgramPipeline(uint pipeline);
        void DeleteProgramPipelines(int n, [In]uint[] pipelines);
        void DeleteProgramPipelines(int n, IntPtr pipelines);
        unsafe void DeleteProgramPipelines(int n, uint* pipelines);
        void GenProgramPipelines(int n, [Out]uint[] pipelines);
        GLboolean IsProgramPipeline(uint pipeline);
        void GetProgramPipelineiv(uint pipeline, uint pname, [Out]int[] @params);
        void ProgramUniform1i(uint program, int location, int v0);
        void ProgramUniform2i(uint program, int location, int v0, int v1);
        void ProgramUniform3i(uint program, int location, int v0, int v1, int v2);
        void ProgramUniform4i(uint program, int location, int v0, int v1, int v2, int v3);
        void ProgramUniform1ui(uint program, int location, uint v0);
        void ProgramUniform2ui(uint program, int location, uint v0, uint v1);
        void ProgramUniform3ui(uint program, int location, uint v0, uint v1, uint v2);
        void ProgramUniform4ui(uint program, int location, uint v0, uint v1, uint v2, uint v3);
        void ProgramUniform1f(uint program, int location, float v0);
        void ProgramUniform2f(uint program, int location, float v0, float v1);
        void ProgramUniform3f(uint program, int location, float v0, float v1, float v2);
        void ProgramUniform4f(uint program, int location, float v0, float v1, float v2, float v3);
        void ProgramUniform1iv(uint program, int location, int count, [In]int[] value);
        void ProgramUniform1iv(uint program, int location, int count, IntPtr value);
        unsafe void ProgramUniform1iv(uint program, int location, int count, int* value);
        void ProgramUniform2iv(uint program, int location, int count, [In]int[] value);
        void ProgramUniform2iv(uint program, int location, int count, IntPtr value);
        unsafe void ProgramUniform2iv(uint program, int location, int count, int* value);
        void ProgramUniform3iv(uint program, int location, int count, [In]int[] value);
        void ProgramUniform3iv(uint program, int location, int count, IntPtr value);
        unsafe void ProgramUniform3iv(uint program, int location, int count, int* value);
        void ProgramUniform4iv(uint program, int location, int count, [In]int[] value);
        void ProgramUniform4iv(uint program, int location, int count, IntPtr value);
        unsafe void ProgramUniform4iv(uint program, int location, int count, int* value);
        void ProgramUniform1uiv(uint program, int location, int count, [In]uint[] value);
        void ProgramUniform1uiv(uint program, int location, int count, IntPtr value);
        unsafe void ProgramUniform1uiv(uint program, int location, int count, uint* value);
        void ProgramUniform2uiv(uint program, int location, int count, [In]uint[] value);
        void ProgramUniform2uiv(uint program, int location, int count, IntPtr value);
        unsafe void ProgramUniform2uiv(uint program, int location, int count, uint* value);
        void ProgramUniform3uiv(uint program, int location, int count, [In]uint[] value);
        void ProgramUniform3uiv(uint program, int location, int count, IntPtr value);
        unsafe void ProgramUniform3uiv(uint program, int location, int count, uint* value);
        void ProgramUniform4uiv(uint program, int location, int count, [In]uint[] value);
        void ProgramUniform4uiv(uint program, int location, int count, IntPtr value);
        unsafe void ProgramUniform4uiv(uint program, int location, int count, uint* value);
        void ProgramUniform1fv(uint program, int location, int count, [In]float[] value);
        void ProgramUniform1fv(uint program, int location, int count, IntPtr value);
        unsafe void ProgramUniform1fv(uint program, int location, int count, float* value);
        void ProgramUniform2fv(uint program, int location, int count, [In]float[] value);
        void ProgramUniform2fv(uint program, int location, int count, IntPtr value);
        unsafe void ProgramUniform2fv(uint program, int location, int count, float* value);
        void ProgramUniform3fv(uint program, int location, int count, [In]float[] value);
        void ProgramUniform3fv(uint program, int location, int count, IntPtr value);
        unsafe void ProgramUniform3fv(uint program, int location, int count, float* value);
        void ProgramUniform4fv(uint program, int location, int count, [In]float[] value);
        void ProgramUniform4fv(uint program, int location, int count, IntPtr value);
        unsafe void ProgramUniform4fv(uint program, int location, int count, float* value);
        void ProgramUniformMatrix2fv(uint program, int location, int count, GLboolean transpose, [In]float[] value);
        void ProgramUniformMatrix2fv(uint program, int location, int count, GLboolean transpose, IntPtr value);
        unsafe void ProgramUniformMatrix2fv(uint program, int location, int count, GLboolean transpose, float* value);
        void ProgramUniformMatrix3fv(uint program, int location, int count, GLboolean transpose, [In]float[] value);
        void ProgramUniformMatrix3fv(uint program, int location, int count, GLboolean transpose, IntPtr value);
        unsafe void ProgramUniformMatrix3fv(uint program, int location, int count, GLboolean transpose, float* value);
        void ProgramUniformMatrix4fv(uint program, int location, int count, GLboolean transpose, [In]float[] value);
        void ProgramUniformMatrix4fv(uint program, int location, int count, GLboolean transpose, IntPtr value);
        unsafe void ProgramUniformMatrix4fv(uint program, int location, int count, GLboolean transpose, float* value);
        void ProgramUniformMatrix2x3fv(uint program, int location, int count, GLboolean transpose, [In]float[] value);
        void ProgramUniformMatrix2x3fv(uint program, int location, int count, GLboolean transpose, IntPtr value);
        unsafe void ProgramUniformMatrix2x3fv(uint program, int location, int count, GLboolean transpose, float* value);
        void ProgramUniformMatrix3x2fv(uint program, int location, int count, GLboolean transpose, [In]float[] value);
        void ProgramUniformMatrix3x2fv(uint program, int location, int count, GLboolean transpose, IntPtr value);
        unsafe void ProgramUniformMatrix3x2fv(uint program, int location, int count, GLboolean transpose, float* value);
        void ProgramUniformMatrix2x4fv(uint program, int location, int count, GLboolean transpose, [In]float[] value);
        void ProgramUniformMatrix2x4fv(uint program, int location, int count, GLboolean transpose, IntPtr value);
        unsafe void ProgramUniformMatrix2x4fv(uint program, int location, int count, GLboolean transpose, float* value);
        void ProgramUniformMatrix4x2fv(uint program, int location, int count, GLboolean transpose, [In]float[] value);
        void ProgramUniformMatrix4x2fv(uint program, int location, int count, GLboolean transpose, IntPtr value);
        unsafe void ProgramUniformMatrix4x2fv(uint program, int location, int count, GLboolean transpose, float* value);
        void ProgramUniformMatrix3x4fv(uint program, int location, int count, GLboolean transpose, [In]float[] value);
        void ProgramUniformMatrix3x4fv(uint program, int location, int count, GLboolean transpose, IntPtr value);
        unsafe void ProgramUniformMatrix3x4fv(uint program, int location, int count, GLboolean transpose, float* value);
        void ProgramUniformMatrix4x3fv(uint program, int location, int count, GLboolean transpose, [In]float[] value);
        void ProgramUniformMatrix4x3fv(uint program, int location, int count, GLboolean transpose, IntPtr value);
        unsafe void ProgramUniformMatrix4x3fv(uint program, int location, int count, GLboolean transpose, float* value);
        void ValidateProgramPipeline(uint pipeline);
        void GetProgramPipelineInfoLog(uint pipeline, int bufSize, [Out]int[] length, ref string infoLog);
        void BindImageTexture(uint unit, uint texture, int level, GLboolean layered, int layer, uint access, uint format);
        void GetBooleani_v(uint target, uint index, [Out]GLboolean data);
        void MemoryBarrier(uint barriers);
        void MemoryBarrierByRegion(uint barriers);
        void TexStorage2DMultisample(uint target, int samples, uint internalformat, int width, int height, GLboolean fixedsamplelocations);
        void GetMultisamplefv(uint pname, uint index, [Out]float[] val);
        void SampleMaski(uint maskNumber, uint mask);
        void GetTexLevelParameteriv(TextureTarget target, int level, GetTextureParameter pname, [Out]int[] @params);
        void GetTexLevelParameterfv(TextureTarget target, int level, GetTextureParameter pname, [Out]float[] @params);
        void BindVertexBuffer(uint bindingindex, uint buffer, IntPtr offset, int stride);
        void VertexAttribFormat(uint attribindex, int size, uint type, GLboolean normalized, uint relativeoffset);
        void VertexAttribIFormat(uint attribindex, int size, uint type, uint relativeoffset);
        void VertexAttribBinding(uint attribindex, uint bindingindex);
        void VertexBindingDivisor(uint bindingindex, uint divisor);
    }
}
